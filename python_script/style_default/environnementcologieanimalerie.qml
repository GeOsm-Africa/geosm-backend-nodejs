<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis minScale="100000000" simplifyAlgorithm="0" version="3.14.1-Pi" readOnly="0" simplifyDrawingTol="1" simplifyLocal="1" maxScale="0" styleCategories="AllStyleCategories" labelsEnabled="0" hasScaleBasedVisibilityFlag="0" simplifyDrawingHints="0" simplifyMaxScale="1">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <temporal mode="0" durationField="" startField="" startExpression="" endField="" endExpression="" accumulate="0" enabled="0" durationUnit="min" fixedDuration="0">
    <fixedRange>
      <start></start>
      <end></end>
    </fixedRange>
  </temporal>
  <renderer-v2 forceraster="0" enableorderby="0" toleranceUnit="MM" toleranceUnitScale="3x:0,0,0,0,0,0" tolerance="20" type="pointCluster">
    <renderer-v2 forceraster="0" enableorderby="0" symbollevels="0" type="singleSymbol">
      <symbols>
        <symbol name="0" clip_to_extent="1" force_rhr="0" alpha="1" type="marker">
          <layer class="SvgMarker" enabled="1" pass="0" locked="0">
            <prop k="angle" v="0"/>
            <prop k="color" v="231,113,72,255"/>
            <prop k="fixedAspectRatio" v="0"/>
            <prop k="horizontal_anchor_point" v="1"/>
            <prop k="name" v="base64:"/>
            <prop k="offset" v="0,0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="outline_color" v="35,35,35,255"/>
            <prop k="outline_width" v="0"/>
            <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="outline_width_unit" v="MM"/>
            <prop k="scale_method" v="diameter"/>
            <prop k="size" v="40"/>
            <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="size_unit" v="Pixel"/>
            <prop k="vertical_anchor_point" v="1"/>
            <data_defined_properties>
              <Option type="Map">
                <Option name="name" value="" type="QString"/>
                <Option name="properties"/>
                <Option name="type" value="collection" type="QString"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol name="centerSymbol" clip_to_extent="1" force_rhr="0" alpha="1" type="marker">
      <layer class="SvgMarker" enabled="1" pass="0" locked="0">
        <prop k="angle" v="0"/>
        <prop k="color" v="245,75,80,255"/>
        <prop k="fixedAspectRatio" v="0"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="name" v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTzJkYVVCVFY5ckgvK2NtQkNLTEM3aExwVkJ3b3lxeUpLQlNjV0YxcWZJV3NYYXNkbHpHdG02MTJtcTExbWxkcW1ObnFyYlQ2YWl0dHVwYjM3cVVLdUpLU3hVU3hCMjFVQlJ3UWF1NHNHL2hudmNEY0wyQlFCS1NjQlBNNzFOdWN1NDlUOExEV1o3ekxJUlNDaXMxaElTRU9OaVZsYm1ERURjQWJnQ2VKMEFuU3FrTEFWd280QUxBcWJhNUJFQ2IydGVsQUNwclh4Y0N1QTlLOHdFOEFzUGNCNUJOZ0J1RWtCeFZTY21OSXhjdmxyYlVkekozeUxPcWdHR0RCM2NpMWRWeUFMNkVrUDVnMmY0Z3hMMEZ1bVpCYVE0SXVRQkMwZ0djSlRZMnlmRkpTZmt0MExmWjhjd29ZRlJBUUJlV2tGQXd6QWhRS2dmZ0piUk05Y2dFa0V3b1Rhd2tKT0c0UW5GZmFJRmFnbGF0Z0JFQkFYNWdtR2hRR2c1Q0Jnb3RqNTZjSTRRa0VKYmRmMGlwVEJOYUdGUFI2aFF3S2lCZ0lNc3dFd0hFQUdpSktkWDBVSG9EaE95aGxPNU9VQ292Q1MyT01Xa1ZDaGdwbHpzQmlBVXdpd0tEaEpiSHhGd2xoR3huQ2RtU2tKejhTR2hoRE1XaUZYQjBZR0J2RmFVTENmQXFudTVJbnhWS0FYelBNc3cvanlRbi95NjBNTTNGSWhVd1hDNGZSb0JGQUNLRmxzVU1ZQWtoOFNCa2ZYeHljcExRd3VpTFJTbGdaR0JnRUtYMFl3RERoWmJGTEtFMG1RREw0NVhLazBLTG9pc1dvWUJSZ1lFQkxLVnJZRlU4WFRrT2xsMXlPRFhWN0hmUFpxMkFvVU9HZEJPcFZDc0FUQWZBQ0MyUHhVSElqNnFxcW9YSDB0SnVDaTFLWTVpbEFzWjRlMHVLSEIwWGc5SWxlUFkyRjhhbUdNQ3FCeXJWUDlMUzBsUkNDMU1mczFQQXlLQ2dnYlM2K2hzTE5CeWJOWVNRZEFMODlWQktTcXJRc3ZBeEd3VWM2K2ZYUmlVV3I2SEEyN0JPdDZhQ3BjQkdKNFpac2ljNXVWeG9ZUUF6VWNBd2YzOXZSaVRhRGNCYmFGbWVCU2p3TzhNd2srS1RreThJTFl1Z0k4MUtRcGh3bVd3eEl4S2RoVlg1V2d3QzlLYlYxY3B3dWZ3ZHdXVVJhZ1NNbE11ZEtDSGJRZW5MZ2doZ3BZNTR1NHFLeWZ2UG4zOGlST2VDS0dCWVVGQnZobVgzQStqZDRwMWIwVVFXd3pEakR5VW5wN2QweHkwK0JVZktaQzh6TEhzV1Z1VXpKMTVnV1RZbElqQndiRXQzM0tJS0dDNlh6NldFN0lYVnRtZU9PSURTL1JHQmdYTmJzdE1XbVlKWEVzSW81ZkxQS2FWdm03d3pLd1pEZ0kweXBYTEJDa3Baay9kbGFnV01pWWxoaW03ZCtnYVVUakZwUjFhTUNpRmtWNW1kM2V1SmlZa21QVDB4cVFMR2VIdExpaDBjZGxOZ2dzazZzV0k2S0QxSW5KMmo0K1BqSzdVM2JoNG1VOEFZYjI5SmtZUERmbGg5OWl3YVFzaEJoNktpNkQzcDZTWlJRcE5zUW1KaVlwZ2llL3Z2WUZVK2k0ZFNPcnJJMGZHSGtKQVFzU21lYjNRRlhFa0lVNVNiK3gwSWlUSDJzNjBJQktVdjI1V1ZmYk9TRUtQcmk5RWZxSlRMUHdjaHJ4cjd1VllFNTdVVW1XeURzUjlxVkFXTWtNbm1XMDB0clJjQ3pEZTJuZEJvbTVCd21TeVNFUEl6cks1VXJSMldVQm9kcjFRZU1NYkRqS0tBVVVGQjNpekxLbUU5NFhoV0tLWXNLMHRJVGIxcTZJTU1IcTNHKy9pMFkyc2NDNnpLOSt6Z3dERE1UNlA4L0p5ME4yMGFneFJ3SlNGTXVhM3RUZ0F2R0NxSUZjdUNBaStJUmFLZGhqN0hJQVZNQ1FoNEYxWmIzN01MSWFNalpMTDVCajJpdVd2QXlLQ2dnYlJtM1NjeFJBQXJGZzZsbFJUd2IyN1NwR1lwWUVoSWlKMjB2UHdNcGRUczNlanRwRkswYTk4ZUlFUm9VWFNHcmE3RzQ0Y1BVVlZWSmJRb3VuTFZrV0Y4bXhQbzFLempGV2xaMmFmVXpHTTRlbnQ3WTlxYmIrTEZnUU5CR011ekRGVldWa0tSbElTdG16ZmovcjE3UW91ampiNUYxZFdyQUN6VTkwYTlSOERhTkJrcE1HTjduMTlnSUZhc1d3ZXhqWTNRb2hoTXdaTW5lR2Y2ZE9UZHZpMjBLTnBnUWVuZ3cwcWxRcCtiOUZMQVdnK1g4d0Q2Nml0ZFN5R1JTUEROdm4zbzRPSUNBRkNwVkhqNDRBRW9hM0xmU3FNaEVvdmgwcWtUU08yeTRaeFNpUS9telJOWUtwMUlmNkJTK2VpVGdVR3ZLYmcyWFliWktoOEFlUHY0Y01wWFVWNk91ZE9tNFdaMnRzQlM2Yy9RRVNPd2ROVXFBSUNQdnorYzJyWkZZVUdCd0ZKcHhidVRqYzA3QU5icGVvUE8wK2lZb0tCdXRibGF6QnJuV3VVRGdPeXNMSXRVUGdBNGRmSWtWTFdiRU1JdzNEK1Z1VU1wWFI3dTU5ZEYxL1k2SzZDcXVubzlMT0MwZzcvaFlMVk11NFFRZEhCeFFaZHUzU0FXbThUZHJRSFNObTNRcFh0M09EbzFmWWhBS1FYTFd4NHhsck9SY21ERTRqVzZOdGJwVjQ4S0RBeG9UUzVXRG82T2lKMDZGY05DUStIY3NTTUFRRlZWaFl0bnoyTFBqaDI0ZE82Y1Vmc2pESU1SRVJFWUZ4TUREeTh2Ym0xM096Y1hodzhjd004Ly9taEpKaGV0VUdCS2VHRGdwb1NVRkswL3BFNEtXSnNjc2xYZzV1R0IxUnMzb3IyenM5cjdZaHNiK01ybEdDU1Q0WWZ0MjdIOXE2K00wcDlFSXNIUzFhc2hHektrd1djOWV2YkVqSG56TUN3MEZCKys4dzZlUEg1c2xEN05BSWF3N0NvQUVWb2JhbXNRSVpjUFFTdkpUT3JvNUlUVm16YXBLVjloUVFIK3ZIdVgyeVVUUWhBN2RTcWlKaGduam1ydSsrK3JLWitxcWdwMzc5eEJXVmtaOTU1bm56NVl2bTZkUmRvckc0V1E4S2lBZ0dCdHpiUi9ZMHBYR1VVZ00yRFN0R2xvMzZFREFLQ3lvZ0tmZnZnaFlpTWlNSFg4ZUV5TGpzYmw4K2U1dHRQZWZCTjJVcWxCL1huMTdZc1JrVStQeWhQaTRoQWJHWWszb3FNUkd4YUc3N2RzNFQ3cisrS0xHRFpxbEVIOW1Sc3N3NnpRMXFaSkJReVh5NGVCRUsxYWJDa01HZjUwSU4rNmVUTitPWHFVRy9uK3ZIc1hLeGN0NGt3ZDlnNE84QThLTXFpLzRCRWp1TmZYTGwvR3hqVnJVRkpVQktEbXBHUG5saTA0bVpEd3RQM0lrUWIxWjRZTXI1MUJHNlhKTldCdEtZUldnWTJORFRwMjdzeGRweVExckdoUVVseU1LeGN1SVBDbGx3QUEzZ01INHQ2ZE84M3U4NFhlVDlQZnBKNCtEVTFHLzVSZmY4WHc4SEFBUUhkWDEyYjNaY1lzQW5DcXNROGJWY0FJZjM4dmlFVGhKaEZKQUNpQTZ1cHFpRVFpQURYcndRZC8vdG1nWGR2MjdiblhZMTk1QldOZmVjVW8vYmVybmZycjQrRG95TDB1THplTHBLWEdadXpvd01EZUIxTlNOQmJUYVh3RUZJa1dRc0R6WGhzYkc0eUlpSUJubno1YWJXWjh1blRycHZGOVZWVVZzbjcvSGIzNjlRTUF4RTZkaWpYTGxqVVlsUnpidG0yKzBFM2dwT0c1VXFrVUw4ZkdjdGNaVjY0MGV2OWY1OHpocG05ZGVQamdBUzZkUHc5RlVwTEdrYmNsWVlGNUFHWnIra3pqV2ZBb1B6OG5zVmg4RndJWm5udjA3SW1QUC9zTVhicDNOK2c1Vnk5ZHdzS1pNN25yWWFHaGVPL3ZmK2V1enlvVWlEOXdBTG5YcitQT3JWc0FBRis1SERGVHBrRGF4bmhmL2NtalIvajY4ODl4T3pjWERNUEF6Y01EejN0NjRuOG1UNGFiaHdlQW10SDU3U2xUa0hQOU9uZmZUMGxKa0VnTWM3ZE1QMzhlSzk1OUY2VWxKUVk5eDBDS0NkQTlYcUVvclArQnhoSFF4c2JtVlVxcElNb25sVXFOb255YStQWFlNUVM5OUJLRzFtNE9mT1Z5K01ybEFJQ2RXN2JnK3kxYmNGYWh3Rm1GWGc0ZGVyRnl3d2I0QlFZMmVQLzcvLzVYVGZtTWhiZVBEeGF2WEltUDNuM1g2TS9XQTRmYVJBVmI2bitnVVFFcHBUTk1MbElqdkJRYXlpbGZaV1VsZG56MUZiS3pzaHBNSTYvTm1JRysvZnNEQUk3RXhlSFhZOGNBQUw2QmdZaCtWZk9oRGFVVWUzZnR3cERodzduVGlEcjZEaGhnN0sraWtUcVorUlFWRmlMaHA1K2F2Ry9qMnJYY2h1alZOOTZBdDQ4UEFPRFlvVU5JNU8ya0FVQWtFc0ZYTHVlbWQ5bVFJWEQzOU1TTlAvNHd4bGRvRm15TlRtbFh3S2lBZ0lGZ0dNRktudkwvUU1jT0hzVGVYYnMwdGhzZEhjMjl6cnQ5RytmUG5BRUFkT3pTK0RsNHUvYnRzWExEQmpYbGUvamdBWEt6czdHajl1U0RNQXg2UFBjYzdPenNEUG9lZk9xTTNRQ3c2ZE5QTVRvNkdzODkvenkzdG5WMGNzSkhHelpnd2ZUcGpicU5aVnk1d2lsUXhNdFAwMnJmNVgxM1Bta0tCZm9OR0FEUFBuMEExT3pvaFZSQUFnU0VCd1QwclIvSzJVQUJxd21aSktUenVydW5KL2Y2ajkrTlc0VTBkdG8wdEczWERnQlFXbEtDZFN0V1FIbEszVUl3OS8zM0VUN1crSmxxTjMzNktlTDM3OGN2UjQvaWw2TkhJUmFMTWZhVlZ6Qjl6aHdRaGtHdnZuMHhQQ3dNSnc0Zk5scWZtZGV1Y1FwWXQ5WVVFc0l3a3dBczU3L1hZSmRMZ1A5cE1ZbnF3VEFNWEh2MjVLNnpzN0tNK3Z6Qnc0WnhyN2Q5OFVVRDVRT0Evb05NTS9qWGY2NUtwY0srM2J0eDlPQkI3cjJnV3Z1anNlRC9mdWFnZ0tpcFlxK0cyZ2dZSGhRVVFBZ1JyTXg5ZDFkWFNHeHRBUUNVWlkzcXkyZHJad2VYVHAyNDY5VFRwelcydTVtZGpXNDllZ0FBSHVYbjQyRitmclA3N05hakIrd2RIR3FlbTVPanNjMlo1R1NFMVk2NFBYai9mTWFBdjZseDgvQUFJVVJvazR4WFZFREF3RU9wcVZ5QkhEVUZaQ2dkSjZSNHo3L3dOTDc5Ymw0ZXlua0g5b1pTVlZrSmxtVTV2enFudG0wMUdxTDVOc2NmdG05SDNQLzlYN1A3WExoOE9VWkdSZFU4bDJkdzVzTTNmRmRVVkRTN0wwM2tYTDhPU2lrSUlaQzJhWVBPWGJ2aVhsNmVVZnZRbDJxR0dRK0FVMEMxS1ppeXJLQkI1bTQ4QmN3eDh2VExzaXl1WGI3TVhiODJZMFlENzVOQk1wbmFKaWpqcW1HcFR6S3ZYZU5lajR5S2FtQWt0M2R3d0lSSms3anJLeGVNV3ptcnBMZ1krZmZ2YzlmbU1BMFRRTzEwamZzTFJBVUVkQkc2UWlYL0J6S0ZUWXcvbXNtSERzWDZmLzhidzBKRDRSOFVoT2x6NTJMRit2WGNEam5qNnRVbVR5WjA0V1JDQW9vS2EyeXZEbzZPK09mV3JYamxMMy9CSUprTWtlUEhZOVAyN2VqKzNITUFhazVxNHZmdk42Zy9UZFNmaHMwQXY3REJnN20xRURjRnM0U0VDaVBQVTU3bi9VRFpKbERBcE9QSEVSZ2NqR0doTlYrMTM0QUI2S2ZCL2xkU1ZJVDFIMzFrY0g4bHhjWDQ3T09Qc2Z6VFQ4RXdETnExYjQ4MzNucExZOXR0WDM2Slc3bTVCdmRabjV6cjF6bXZIdjRTUjBBWUVjdU9CTEFMNEUvQkRET2lzVHRhQWp1cEZKMjdkdVd1VFRFQ0FzRDZqejdDM2wyN29GSnBqaHpNdVg0ZEM2WlB4NTJieGlreXJ2anROM3o0emp0NC9PaVJ4czlMaW9ydytabzEyTDk3dDFINnF3OS9KMndtQ2dnS2NMcjJkQk5DcVdIT2J3Ymk1dUhCcmNrcUt5cVFWM3MyYTJ4WWxzV1dqUnR4ZVA5K0RBNEpnVWV2WHJDM3Q4ZWRXN2R3VHFsRWFuS3kwV09JenlvVW1EcCtQSWFOR29WK0F3YWdROGVPS0Nvb3dKV0xGM0hxNUVrVVBERmRuVUMrQW5aemRZVkVJa0ZscGNtcUx1Z0dUOWZFQUJBMmVIQW5SdUFVYS96MVNXNTJ0dGFJTmtPNWMrc1c5dXpZWWRJKytGUldWT0Rvd1lOcWRyK1c0SFp1TGxSVlZSRGIyRUFrRXNIVnpRM1hNek5iVkFZTjlJNE1EbmFKVDByS1p3Q0FWRmZMaFpaSVRRRU5tSDZyZVAvZCtyaHhtUnZTTm0xZ3d3c1ZiYTZKUnFWUzRUWnZPZUZtSnRNd3FxcmtRTzBJeUFEK1F0ZE5OOVlPbVAvZjdlcm1odGtMRitMTTZkT29ycTQyU0w2V1JHSnJpNmdKRTdnbFNVbFJFWGVXM0J5eXM3SzQzL2Q1ODlnSmc3THNJQUFIeFFEQUF0NUNKeTh6MWc3NFpuWTJsS2RPY1pGb3h2UnFGb3E5dTNaeFdSS2FRKzZORzl4ck16SEZnQkF5QUtqZEJST2dvWTlRQzlMQnhRVk90VTRDZ09FNzRIK3NYSWwwSXh0MWhlSklYQngrMkw3ZG9HZW8yUUxOWkFxdVMrOG5EZ2tKY2JBRDNJUVVwa2V0TVJhb2NWMTZwTVA1SzkrbHFyNXZYM0ZSRVJhLytTYUNnb1BoRnhRRWwwNmRZR2RuQisrQlQrM3M2ZWZQbzZvUlUwd2RYYnAxUTlkYTM4U0NKMDkwY21meUhqZ1FOclZwNFc1a1pxSkFTMElocDdadDRlSGxCUUNvcXFwQytvVUxxS3lvd0wyOFBDUWRQNDZybHhvbUhxMy9mYlhCVjBCbkZ4ZTBzYmNYMmtNYUFGNklDUXF5RTl1V2xyckRCQ1dZOUlHL3dLNExHdElHZjhUa3Y2NkRzaXhPLy9JTFR2L3lDNENhcWVmZk81L20xUDU4N1ZyYzFtTDRuYlZnQVY2ZU9CRUFjQ3M3RzB2bnpHbXlQV0VZN0R0eGdsUEF2YnQycVlWZGFtSjRlRGdXMVJxOXExVXFmREIzcmxhSGdYYTg4Mk5kTmxyOHZEZVVaVkZoSHNGUFRESEx1ak1neEUxb1NXNW1aM05ySEhzSEI4NkhyVEhzSFIzVjJnd0tDTkE2S3ZqS1pFMWUxNGN3akZvYnIzNzkxQ0xZTk9FOVlJQmFNSHVkdTMrVGN2SGEyRW1sR2s5bStEZzRPc0tyTnJBS0FBYjQrV245N2o0QkFkenJuQnMzekdaRFJnRTNCZ0pQdndCUVZscUtNOG5KM1BXTXVYT2J6RzQ2WTg0Y3RXQWROdytQSmpjYVhicDFROHpycjZ1OUZ6dHRHam8xNFQwOUlUWVdybTV1M0xWRUlzSGZGaXhvOUk5dEo1Vmk1bnoxaFBIRFFrT2I5QzhjNE92TEhRdldNWFArL0VZek1oQkNNSHZoUXJYdjd1N3B5Ymx6YWFLOXN6TmlwMDNqcnBPT0gyKzBiVXREQVRlUnA2dHJMQURCN1lDM2NuTVJObVlNR0pFSW5idDJSWDhmSDF6UHpGUTd3dXJhdlR2bXZQY2VSa1Ewekhuaks1UEJ3Y2tKTjdPenVmV054TllXd1NOSFl1bXFWV3JURmxDak1NRWpSK0xoZ3dlNGUvczJOeXAwNnRJRlUyYk5RdXkwYVEyVXpkM1RFeDY5ZXVGbWRqWUthaE1KaVVRaTlQZjF4ZEpWcTdpMVhCMkVFQVNQR0lHcXFpcmN5c25oVGlBY0hCMHg1cFZYTUcvSkVtNjZyc1BaeFFVQlFVRzRjL01tOHUvZjU5eXAzRDA5TVcvSkVnd2QzakJOajM5UUVHd2tFdHpJekVSbDdYS0dFQUsvd0VBc1c3T0crMGQ3K09BQk5uejhzWnF0VkVnWUlJT0V5MlM3QWNScWJkMENSRTJZZ0xjV0xWTDd3eGNXRk9EUHZEeTRkT3JVSUtQVjRRTUg0TnF6SnhlZ3c3K250TGdZbmJ0MlZYTzVLaXN0eFk2dnY4YVVXYk1nNVkweUxNdmkvdDI3c0hkMGJMQ211bmoyTE83Y3ZJbkk4ZVBWM2k4cks4T2ovSHgwN3RKRmJiU21MSXNkWDMrTnNERmpHa1QyUFh6d0FKUlNOY2RZQUxpWGw0Y2pjWEdZTW5PbW1yeXFxaXI4ZWU4ZU9yaTRxTW5iMkhlbmxPTFB2RHlVbHBTZ3E2dXIyajBWNWVWWU5uKyt1VmtIdmhlOTBLUEhUQUJtWVJ6NjQ5bzEzTXZMZzA5QUFEY3kyTnJad2JsalI3VTRYWlpsc1hQclZtemR2QmxKSjA2Z1c0OGU2T24rMUpIYjFzNE9EazVPYW9wODk4NGRyRnk4R0tjVEUzSDUzRGtNOFBQajFuU0VFRGc0T2NHMjFodTdqc1FqUjdCMitYS2tKQ1dCTUF6NnZQZ2k1OUJxWTJNRHA3WnR3ZkEyVGNXMWpnVUg5KzVGU2xJU2V2WHJwNVlPcEkyOVBkclkyNnYxY2ZYeVpYejA3cnRRbmpxRnZOdTNNZERQai9NS1owUWlPTFZ0cXpaS3FsUXEvTyszMzJMTHhvMzQ3ZVJKZE83YWxiUHQxWDJQOXM3T2F2ZmN2M2NQZjErMENGYzA3S2lGaEFKNUpGd21Pd3RBc0NnNFRUaDM3SWp4a3laaDZQRGhhdXUweDQ4ZVFYbnFGUGJ0Mm9WYjlWemNmZno5RVRsaEFnS0NncmcvSUFCa1pXUWdNU0VCQi9mdDQ2WW5vRVpKUjBkSEl5UXNURzNxckNndlIrcnAwemkwZno4dXBxV3A5ZEhUM1IzalltSXdPQ1JFTGRQQnZidzgvSHJzR0g3NjRRZTFKUU5oR0lTRWhtSlVWQlQ2Ky9weXlzdXlMQzZkUFZzVFVzbExrQVFBN1R0MHdNdXhzUWdlT1ZMTmdiV3dvQUNuRXhQeDA1NDlhb1psb0NiZVpGeE1ESHhrTXJWUkx6c3JDeWNURW5CbzN6NlVsWlkyL2FNTEFTRnBKRndteTRZWmJFUWE0K0RwMDV4cFp0YWtTVnJqUkFnaGFPL3NESW10TFI0OWVLQ1Q1NGRFSW9Geng0Nm9xS2pBNDRjUGRZcWJjR3JiRm81T1RuaVVuNitXNjY4eFJDSVJsNDMxNFlNSE91MUVwVklwT3JpNG9LaXdVS2NFNVNNaUkvSHVoeDhDcUFuam5QL1h2MnE5UjJCdWlFR3BneVZWRWRJR3BWUW5RemFmeXNwSzNOVXpDMVpoUVlGZVdldXJxNnYxTGpoVFZsYkdwUXhwalJEQWdRRWgxbHB2VmdTQkFoSUcxbUtEVm9SRElvWlZBWFhDVGlwRkgyOXZPQWpzWTFoY1dJaHI2ZWxHRFZrVkVMdVdLWTVod1JDR3djUXBVeER6K3VzTmJIRkNVVlpXaGgrKy9SWjd2dnZPb2txUWFVSU1vQktBOFRMeHRES216WjZOVi83eUY2SEZVRU1xbFdMcTdObXdkM0RBdGkrK0VGb2NReWkzS21BVGRPM2VIZEdUSjNQWGQyN2VGRFRERkZCekhGZ1hTeHc5ZVRJT0h6aWc5dzdlaktnVWc5TEsxbVNHTVNZK0FRR2M4ZmpPclZ1WVBYbXk0QldOeERZMitHclhMblIzZFFYRE1CZ2trK0hRdm4yQ3l0UmNDRkRKZ0pCaW9RVXhWL2pud3RsWldZSXJIMUJ6UHB6Tkc0VXRPZkNLQXNWaUFqeWlabndTMGx3a0VnbDZlbmlnZzdNejdLUlNGRDU1Z3Z6NzkvWEtQcURtRGRQSTZVaWREMThiZTN1VUZCY2o2L2ZmbTExVzFkSEpDYjM2OW9XOW95T0tDZ3B3TFQxZDR4RWEvNlJHWCs5b015TmZUSUhtNXg4elEzemxja1JObUFBZmYzK05mblg1OSs5RDhkdHYyTHR6cDBHWm9wemF0c1dVV2JNd2F2Um9OZjg4bFVxRjMwNmN3TlpObTNSTzdlYlNxUk9tejVtRG9TTkdxRlhGVkZWVjRYaDhQTDc1OGt0THFCWGNIUExGaEpCOG9kUDRHNE11M2J0ajRiSmxEVnl6NnVQU3FSTkdSMGNqZk53NEhOeTdGOXMyYjlaN2F1M1VwUXZXZnZFRkZ5L0NSeXdXSXlRc0RBTjhmZkhCdkhsYUE2emNQRHl3WnZQbUJ2NktRTTE2TDN6Y09QZ0VCR0R4N05sNkgrVlpBSThZeXJJVy82MEdCUVJnMDdmZk5sQytXems1VVB6MkcwNG1KQ0JOb1VBaEx3V0dXQ3pHeXhNbll2MS8vdFBBejdBcENNTmc2ZXJWYXNxWGxaR0I0NGNPNGZmMGRPNjlEaTR1V0xaMmJaUDE1aVMydGxpeGZyMmE4djJlbm83amh3NGhLeU9EZTY5ejE2NVl0blp0NnlwbVdNTTlNUmdtdDdIMWpTWFFxMjlmZkxodUhXeHJrNHFyVkNvY2lZdkQzcDA3RzVnbkdJYkJpNE1HNGJYcDA3a0l1VjU5KytMdm4zMkd4WC83bTA1ZUxZSEJ3ZWpWdHkrQW1yWFk1MnZXNEVoY0hQZTViTWdRTEYyOUdoS0pCTjFkWFRFOFBMelJ0R3ZoWThkeUxsZVZsWlZZdlhTcFd0cmcwREZqTUgvcFVoQkM0Tm03TndhLzlCSk9KU2JxOGV1WU54VElaZ0RrQ0MxSWMybGpiNittZkU4ZVA4YVN0OS9HNW5Yck5OckdXSmJGeGJRMExKNDlHOTk4K1NXM21IK2hWeSs4dFVpM3NuZ0J2QUtHdng0N3BxWjhBS0E4ZFFxSDl1NTkybjd3NEVhZjVjLzc3TkRldlExeVZoLzkrV2V1L0VUOTlxMEJBdVNJUVdtTzBJSTBsOWlwVTlIQnhRVkF6ZkhVaHdzVzZKUlpuMUtLUFR0MmdCQ0NxYk5yS2tnTmo0akF3WDM3MUtaUlRmQ25hMzdHVlQ2Lzh4SmJ1bnQ2cXBWVjRPUEc4K0xtWjFQbGMrM3laUzV3cWI0cnY2VWpJdVNHbUMwcnkyS2tVaFlDMW9WckRoS0pSSzFXeUs2dFcvVXU2N0JueHc3NEJ3V2gzNEFCSUlSZ3dxUkpXUDNCQjAzZVUxTDgxR3phV0ZKeC92cXdZK2ZPbVB2KysxcGxhYXpHSFQ4eXI5Q0VhZHdFZ0cxRFNBNXo1T0xGVWdBM3REWTNNM3dEQTdrNGtkS1NFc1R0MmFQM00rcEd3anI4NjduemErSUN6MDAvYk94WWJqMVkvN242b2lrZFhhOSsvUkE2Wmd4M3Jha2dqUVdUdVNjNXViekdHNGFRZEZCcUhrbERkTVNMRjVoK1ZxRm9kdExGYzZtcHFDZ3ZoNjJkSGV5a1V2UjBkOGNmalV5SEFKQ1lrSUJYMzNnRG5idDJoVVFpd2JxdnZzS3Z4NDdoajJ2WGNGYWhRTjd0MjlpM2V6ZFVWVlU2bDEyNG5adUx1QjkvQkZCVDJzRlhMb2Rubno0WUZocktCUmZWeFoyMEdnaEpCNTVtU0wwRVFQTkN4VXh4cVkydkFHQ1EyN3FxcWdyMzc5M2pwanFYamgyYlZNQ3FxaXFzV3JJRWE3LzRBbTNzN1NHUlNEQXFLZ3Fqb3FKUVZGaUkxMGFQUm1WbEpmWTFJK1d1UkNMQnY3WnRhM0M4VmxaYWlyWExscGxMU2cyalFDbTlDRHhkOTUwVlVKWm13UTl2TkRUaXE1aFhoOWRlUy9vTm9DWlJrYVkrYlcxdElSSTMzOFZTSkJZM0NBMEZhcFlZamVXWXRsUW9wUmVBMmhIUXBxb3F1Y3FBSCs1WmdqQU1WcXhieDBXNEFUVjFpYk15TW5EcTVFbVVsWmFDRUlLQXdZTzVIYm8ySHVYblEzbnFGTXBLUzdGcy9ud01HVDRjTC9UcXhkVXNjZTdZRVIrdVc0YzVVNmRhdkFOcUhVUWtTZ1pxRlRBdUxTMC9RaTdQQk9EVjVGMVdNSGpZTUxqWHhoR3pMSXMxSDN6UXdEZ2NPWDQ4M2w2OFdLL25ibDYzRG9mMjdjUGw4K2R4K2Z4NUFNQ1E0Y094OUpOUFFCZ0dIbDVlR0R4c0dFNmRQR21jTHlJc1Z4T1NreDhCUE5NTEFaSWJiMitsRGo5ZU5xdGZqaDdWZURMUnJrTUh2Wi9iWHNNOXAwNmVST0xSb3hyN3RtUW9UOWY0WlJvU1FjaFVJUVN5SlBqVGFtT1ZsUGg1Qnd1ZVBNSFJuMy9XMkM1MHpCaXVmR3hqRzZtTUsxY3dQTHltdXBVK1o5Ym1ES0gwUk4xclRnRXJDVWxvUENHYWxUcnFTbThCd0hQUFA2K3hEYi9rN1BXTWpFYmpOdHc5UGJuOGdOMWRYVFcyNGZmQk40SmJNQ3l4dGVWeXhIRlQ4SEdGNGo2QWM0S0kxSUxFVHAySy9ZbUoySitZaUFWYVRqMDBjUzQxbFhzZE5tWU1Cdmo1cVgzdTd1WEZaVlVGMUEzWDlibDQ5cW54NGVXSkU5V0tkUU0xK1FQRGVJYm9zd3FGM3ZLYUd4UklpMDlLNGh3bDFiYStoSkFFU3FsWkpTb3lOalkyTnB5TGxJMUUvNURvcEdQSE1HbmFOSFIzZFlYWXhnYXJOMjdFcWNSRVhNL0lRRTkzZHdTUEdNR2xhM3Z5K0hFRFp3VStSK0xpTU9IVlY5R3VmWHZZT3pyaVg5dTI0YmNUSjVCNzR3WThldlhDa0pDUXB6RXBOMithVlhKSkExRExXYXl1Z0N5N254S3l0R1hsc1N5cXFxcXdkdGt5ck42MENZNU9UbUFZQnNFalJpQjRoSHFwdllyeWNxeGR2cnhKVCtiQ2dnSjgrdUdIK0dqOWV0amEyY0hHeG9aYjc5VnZ0M2I1Y3JPSVNURVVBdXpsWDZzNUlCeFNLdE1BR0xkUXI1bXhhOXMyakFzT3hyamdZSHoyOGNmTmVrWldSZ2JlbVRFREZ4bzVtODI4ZWhVTFo4NXNrTjVORXhmT25NRTdNMmMyV3B2NHdwa3pXRGh6cHBxRHFnV1RlVmloVUV0U3FNbjYvQ01BN2U0YkZrcDFkYlZSa25UZnpzM0Zramx6NE9ybUJoOS9mOWc3T0tDa3VCalgwdE9iUE1yVHhJM01UTXgvNHcxNDl1bURQdDdlM0xNdXBLVnBUVWRuU1ZEZ2YrdS8xMEFCS2FXN0NTR3RWZ0dOemEyY25BYkpNcHZMSDlldTZhMjhsZ1FEL0tEaFBYVVNsTXBMZUFaMnc3ckFMK2JTclVjUHN3aUJKSVNvbVd6TW9PQ01yaWppRllvRzZ3eU5COENVMHY4U1F2NXRlcG5NRzM1Q2IzY3ZMM3p5cjMvaDh2bnpndFhaRUlsRWVOSEhoenNLQk1BZDI1azdsSkN0bXQ3WHFJQzJOamJmVjZwVTZ3RTRtRlFxTStmR0gzOGc4Y2dSaElTRkFRQUd5V1FZcEtYQVRVdHlNaUZCOEZ3MU9sSnNLeEkxV1A4QmpiamgvM1RxVkRHQVhTWVZ5VUw0MStyVk9IcndZTE84bkUwRnBSUkhEeDdFNTJ2V0NDMktUaEJDdnEvVnFRWTA2b1BGVUxxQkpXUTZMQ3hXeE5oVVZsVGduNTk4Z2owN2RtQ2duMStETWdzdFRXbEpDUzZrcGVFT3J3aTFtY05XRS9KNVl4ODJxb0NIbE1yTXlNREFlRXJwYU5QSVpWbmN1WG5Ua3Y3bzVzU0JJOG5KalVhTE5UMjZFYkxlNk9KWWVhWmdHV1pEVTU4MzZRWWRuNXljRkNHWC93SmdtQkZsMGtnYmUzdjRCd1dodTZ1cldqb0xobWY2bURCcEVuZTB4YStNNUJjWXFMV1NaVk4wNnRxVmV6MTArSEE4eHd1RnRDVDR2NGxMNTg1NDQ2MjN1T3VTNG1KY3o4ekVoVE5ub05KU0o5bUlIRCtTbk55a255blJ0cmlPa011SEFQak5tRkxWUnpaa0NONVp2bHl0K3BBVjAzQXJOeGVmdlA5K2k1eXdVRXFISmlpVnA1cHFvMVVCQVNBaU1QQUVLRzFZcHRFSXVIbDQ0UE52dmxGTGNXYkZ0TnkvZHcrekprMHlhYVo5Q2lRa0tCUU55NXJXUTdkSXBPcnE5OEF3U3BoZ1J6dytObm56UnRFQUFBVjdTVVJCVkpaVHZwTGlZaHcrY0tDMTVzSVRsRzQ5ZW1EVTZORVFpVVRvMUtWTGswbVRqQURMTU13U1hScnFwSUNIVTFQVHd1WHk3d2t3eFRDNUd1TEZ5eXl3ZGZObUhENXd3TmhkV0ttRkVNSVZ0KzdWdDYvcEZKRFNiZkhKeVRyVmhkVjVSRk1CaXdBVWFtMm9KeXp2V01zNkRac1dmdG9SVGFsQWpFUXhyYTVlcm10am5ZT0JqeXNVOXlQazhqVUFqR3ArdjNMcEVuZTIrY2JiYjhPalZ5ODhhV1ZCMk9aQWo1NDlJUjg2bEx0T3YzalJKUDBRWU9YaHREU2RrNTdxdEFtcEl5UWtSR3hYV25vR2hBeHNsblFhNk5LdEc3NzQ3anZCVHhpZUpXNW1aK1B0S1ZOTTRXRjk2WUZLNVp1V2xxYXpuVWV2VFVWaVlxSUtsTTRBWUxUeCsxNWVIcGJQbjQ5N2xsdHN4YUs0ZXVrU2xzMmZid3JsWTFsZ21qN0tCK2c1QXRZUkxwZi9rd0R6OWI2eENjUmlNZnIyN3c5WE56ZnJhR2dDQ2g0L1JuWldGckl5TWt6aVdFR0F6K0lWaW9WNjM5Y2NZVUpDUXV6c3lzck9BUERXKzJZcnJaR3JqZ3pqdXljNVdlLzBYYzFTUUFBSTgvZjNaa1NpTTdEV21YdTJvYlNTQXY2MW52UjYwMnpEOHBFelo5SXBvSDlrdDVYV0JjTXNhcTd5QVFhTWdIVkV5dVY3S1REQm9JZFlzVlRpRGlzVTR3eDVnTUZIYXpaaThlc1UwQzg3dUpYV1FDWUJEQzZrYlBBSUNBRGhBUUY5U2MxWjhUTWRRL0lNVVN3aXhQOWdTb3JCQTQ5Um5Bc1NVbE92VWtvbndvajJRU3RtQzB1QnljWlFQc0NJM2kwSlNtVThLSjF0ck9kWk1VOG9wZk1TRklyR015N3BpVkhkcXc0cmxWOFRZS014bjJuRmZDREFad2xLNVdaalB0UG8vbjN4Q3NVOEVMTE4yTSsxSWl3VTJDRlRLblVycUtjSEpnbTVkSFIxblVFQi9Vc1hXVEZQQ0RsUUlaWCtkUVdsUmwvakcyVVhySWtZYjI5SnNhUGpYbXRZcDRWRDZVSEhrcExvUGVucHpTdEZwUVdUQlozdlNVK3ZkQ2dxaWtaTnVqY3Jsa2tjY1hZMm1mSUJKczU2c0NjOXZkTHh1ZWNtRXVCYlUvWmp4UVJRdXF0Y0tvMk9qNDgzbWZJQkpweUMrYXdraEVtUnlUWVkyNFhMaW1sb3JtdFZzL3BxeWFRN2tZR0IweW1sLzRZZW9RQldXaFNXVWpyUDJLYVdwbWhSQlFTQWlNREFzYUIwSjZ6SGR1WkdNYVYwWW9KU0dkK1NuYmE0QWdKQWhMKy9GMFNpL1FBYVZudTJJZ1NaYkhWMTlKRXpaOUpidW1OQlVxOGRQbk1tVXlJV3l3aXdUNGorcmFnUnAxS3AvSVZRUGtDZ0VaQlBoRXcySDhDbklNUWFGTnl5bElPUTl3Nm5wQWg2ZENxNEFnS2NPOWR1QVAyRmx1VVo0U3JEc3BNUHBhYnFsTDNBbEpoRjl0T0UxTlNyamd3akE2V2Z3ZXJTWlVwWUFueFdMcFg2bW9QeUFXWXlBdktKQ2dnWVNCbG1Ld1ZhZGMwNkFiaEVHV1pHUW5KeXF2YW1MWWRaaklCOERxV21Ycml2VXNrSUllOEJhQlgxU1FXbWtBQ0x5cVZTWDNOVFBzQU1SMEErWS8zOFhLckU0dVVBM29ZWi9yT1lPU3lBWFF6TExqcVVtcXB6cnBhV3hxd1ZzSTd3d01CQmhOSTFBRUtGbHNVU29FQUN3ekJMZEUyUkppUVdvWUIxUk1oa2NzSXdIMWhkdkJvbEdZUjhjRGdsNVJlaEJkRVZpMUxBT21yelZpOENNQnJXcVptbFFCeER5UHI0bEpRbUU0S2JJeGFwZ0hWRXlXUmVsR0VXVUVwZnc3TjN0bHhNQ1BsZVJlbUdvd3FGeGRaNHRtZ0ZyQ01tS01pdXFMcDZOQWlaQldDazBQS1lFbEpUeWZRL05tTHhyc2JLWDFrU3JVSUIrZFNlcWt3Q0VBUEFTMXQ3Q3lHVDFNVFk3TlpVOHRTU2FYVUt5S2ZXcUIxTkNRa0hwWU5nT2V0RkZrQWFCUkpBNlY1RGt2K1lPNjFhQWZsRUJnZTdvS29xbEFJaktLVkJCT2d0dEV6MXVBcEtreW1RS0ttdVBocVhscFl2dEVBdHdUT2pnUFVaS1pOMWtEQk1FR1haUVNEa1JkUTRRcndBMDQrU0xJQXNBSmNJY0xtYTBuUFZRUEp4cGZLWnpNeit6Q3FnSmtKQ1F1eWtaV1h1TEtWdUFOd1pRcDZuUUNjS3VCQ2dBeWgxQVNIdFVLT2tZanpkZVJjRFVBRmdRZWtURUpKUGdVY0V5Q2ZBZlJhNERrcHpHRUp5eXFUU0c0bUppWHBuRW0ydC9EODF2ZWpTM1IwdU5RQUFBQUJKUlU1RXJrSmdnZz09Ij48L2ltYWdlPgo8L3N2Zz4K"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="35,35,35,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="40"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" value="" type="QString"/>
            <Option name="properties"/>
            <Option name="type" value="collection" type="QString"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer class="SimpleMarker" enabled="1" pass="0" locked="0">
        <prop k="angle" v="0"/>
        <prop k="color" v="33,150,243,255"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="bevel"/>
        <prop k="name" v="circle"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_style" v="solid"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="25"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" value="" type="QString"/>
            <Option name="properties"/>
            <Option name="type" value="collection" type="QString"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer class="FontMarker" enabled="1" pass="0" locked="0">
        <prop k="angle" v="0"/>
        <prop k="chr" v="A"/>
        <prop k="color" v="255,255,254,255"/>
        <prop k="font" v="Arial"/>
        <prop k="font_style" v=""/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="miter"/>
        <prop k="offset" v="0,-0.40000000000000002"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="size" v="11.8"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" value="" type="QString"/>
            <Option name="properties" type="Map">
              <Option name="char" type="Map">
                <Option name="active" value="true" type="bool"/>
                <Option name="expression" value="@cluster_size" type="QString"/>
                <Option name="type" value="3" type="int"/>
              </Option>
            </Option>
            <Option name="type" value="collection" type="QString"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property key="dualview/previewExpressions" value="fid"/>
    <property key="embeddedWidgets/count" value="0"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer diagramType="Histogram" attributeLegend="1">
    <DiagramCategory showAxis="0" minScaleDenominator="0" maxScaleDenominator="1e+08" backgroundAlpha="255" opacity="1" lineSizeScale="3x:0,0,0,0,0,0" lineSizeType="MM" enabled="0" labelPlacementMethod="XHeight" spacing="0" sizeScale="3x:0,0,0,0,0,0" penAlpha="255" barWidth="5" scaleBasedVisibility="0" diagramOrientation="Up" height="15" sizeType="MM" penWidth="0" penColor="#000000" spacingUnitScale="3x:0,0,0,0,0,0" width="15" backgroundColor="#ffffff" minimumSize="0" direction="1" scaleDependency="Area" spacingUnit="MM" rotationOffset="270">
      <fontProperties style="" description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0"/>
      <attribute field="" label="" color="#000000"/>
      <axisSymbol>
        <symbol name="" clip_to_extent="1" force_rhr="0" alpha="1" type="line">
          <layer class="SimpleLine" enabled="1" pass="0" locked="0">
            <prop k="capstyle" v="square"/>
            <prop k="customdash" v="5;2"/>
            <prop k="customdash_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="customdash_unit" v="MM"/>
            <prop k="draw_inside_polygon" v="0"/>
            <prop k="joinstyle" v="bevel"/>
            <prop k="line_color" v="35,35,35,255"/>
            <prop k="line_style" v="solid"/>
            <prop k="line_width" v="0.26"/>
            <prop k="line_width_unit" v="MM"/>
            <prop k="offset" v="0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="ring_filter" v="0"/>
            <prop k="use_custom_dash" v="0"/>
            <prop k="width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <data_defined_properties>
              <Option type="Map">
                <Option name="name" value="" type="QString"/>
                <Option name="properties"/>
                <Option name="type" value="collection" type="QString"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </axisSymbol>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings priority="0" placement="0" linePlacementFlags="18" showAll="1" zIndex="0" dist="0" obstacle="0">
    <properties>
      <Option type="Map">
        <Option name="name" value="" type="QString"/>
        <Option name="properties"/>
        <Option name="type" value="collection" type="QString"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions removeDuplicateNodes="0" geometryPrecision="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <referencedLayers/>
  <referencingLayers/>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias field="fid" name="" index="0"/>
    <alias field="osm_id" name="" index="1"/>
    <alias field="name" name="" index="2"/>
    <alias field="amenity" name="" index="3"/>
    <alias field="hstore_to_json" name="" index="4"/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default field="fid" expression="" applyOnUpdate="0"/>
    <default field="osm_id" expression="" applyOnUpdate="0"/>
    <default field="name" expression="" applyOnUpdate="0"/>
    <default field="amenity" expression="" applyOnUpdate="0"/>
    <default field="hstore_to_json" expression="" applyOnUpdate="0"/>
  </defaults>
  <constraints>
    <constraint field="fid" notnull_strength="1" constraints="3" exp_strength="0" unique_strength="1"/>
    <constraint field="osm_id" notnull_strength="0" constraints="0" exp_strength="0" unique_strength="0"/>
    <constraint field="name" notnull_strength="0" constraints="0" exp_strength="0" unique_strength="0"/>
    <constraint field="amenity" notnull_strength="0" constraints="0" exp_strength="0" unique_strength="0"/>
    <constraint field="hstore_to_json" notnull_strength="0" constraints="0" exp_strength="0" unique_strength="0"/>
  </constraints>
  <constraintExpressions>
    <constraint field="fid" desc="" exp=""/>
    <constraint field="osm_id" desc="" exp=""/>
    <constraint field="name" desc="" exp=""/>
    <constraint field="amenity" desc="" exp=""/>
    <constraint field="hstore_to_json" desc="" exp=""/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction key="Canvas" value="{00000000-0000-0000-0000-000000000000}"/>
  </attributeactions>
  <attributetableconfig sortExpression="" sortOrder="0" actionWidgetStyle="dropDown">
    <columns>
      <column width="-1" name="fid" hidden="0" type="field"/>
      <column width="-1" name="osm_id" hidden="0" type="field"/>
      <column width="-1" name="name" hidden="0" type="field"/>
      <column width="-1" name="amenity" hidden="0" type="field"/>
      <column width="-1" name="hstore_to_json" hidden="0" type="field"/>
      <column width="-1" hidden="1" type="actions"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <storedexpressions/>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field name="amenity" editable="1"/>
    <field name="fid" editable="1"/>
    <field name="hstore_to_json" editable="1"/>
    <field name="name" editable="1"/>
    <field name="osm_id" editable="1"/>
  </editable>
  <labelOnTop>
    <field labelOnTop="0" name="amenity"/>
    <field labelOnTop="0" name="fid"/>
    <field labelOnTop="0" name="hstore_to_json"/>
    <field labelOnTop="0" name="name"/>
    <field labelOnTop="0" name="osm_id"/>
  </labelOnTop>
  <dataDefinedFieldProperties/>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
