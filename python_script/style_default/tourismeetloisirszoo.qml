<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis simplifyAlgorithm="0" readOnly="0" hasScaleBasedVisibilityFlag="0" simplifyLocal="1" maxScale="0" styleCategories="AllStyleCategories" simplifyDrawingTol="1" simplifyMaxScale="1" version="3.14.1-Pi" labelsEnabled="0" minScale="100000000" simplifyDrawingHints="0">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <temporal durationUnit="min" enabled="0" accumulate="0" fixedDuration="0" startExpression="" durationField="" startField="" mode="0" endField="" endExpression="">
    <fixedRange>
      <start></start>
      <end></end>
    </fixedRange>
  </temporal>
  <renderer-v2 toleranceUnit="MM" type="pointCluster" toleranceUnitScale="3x:0,0,0,0,0,0" tolerance="20" forceraster="0" enableorderby="0">
    <renderer-v2 symbollevels="0" type="singleSymbol" forceraster="0" enableorderby="0">
      <symbols>
        <symbol type="marker" name="0" alpha="1" clip_to_extent="1" force_rhr="0">
          <layer enabled="1" class="SvgMarker" locked="0" pass="0">
            <prop v="0" k="angle"/>
            <prop v="231,113,72,255" k="color"/>
            <prop v="0" k="fixedAspectRatio"/>
            <prop v="1" k="horizontal_anchor_point"/>
            <prop v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTzI5VzNCYzU1WGYrMXU3ZDEvUnVJTUFDUEJPaXFJcGtLSXBTaVJCbVpGdFdiWWtTdVB4a1k4MVRqSTF5ZFJKNVNHcEpKVk04akNadUtaU3Jzb3BUeW9ueWROTWFpcXVVK1dwaWV5TWJZbVNQYkk4dGlRU0ltVlNGNHFpS1FxOGdTU0UrNlhSNk92ZWUrWGgyOTFFNDBLQ0FrRjBRLzJyZ2tCMW8zZHZBQXZyKzlaYS83VStVVlUreS94NC8vNG1zYXdHRVdrSE5vbHFnOEJHb0IyUk9sVGJnWkNJaEJRaVFBaW84ei9iL21VY0lBY2tnSnhBUmxWelFFNUZCbEJOQ0F3b1hGV1JDZUNLcWc2bzUwMzg3c21UWS9mOG15NGo1TE5nZ0s4ODhvaXRxaUhYdGxzUWlRbTBBZzFBWEkyQlJSQnBCSnBRalFrMEFYV0lSRkJ0QUN4RWJJelJXVURNL3p6VEFEMGc1WC9Pb2VvQW5vcE1vSm9SU0NpTUlaSUN4bEFkQnpLV3lKQ3Faa1JrUW1FRVNBWkVCbFExOTNSUFQrN2UvWlJXQnZ2MlgxTDVxR3BJUk9xQW5VQUhzTi8vOXpvUjJWVHl4U0xjOHYvbkorUi9qc3grbmN6Kzk5enJEb2pJQU5BTG5FVGtPdEFqSW1NWXI3cXFXWFVlOE9XREJ5TkF1d2U3RWRrQWZBWFZPTkNpRUVNa0pNYURGWmJUMEsydWR3OXcvSThNeG9QbWdLVENFQ0lKZ1YrZ2VsM2dES29EUjk1Nks3T2lkM3VYcVhnRFBMcHZuMDB3R01HeVlxcmE0QnZiRm1DWGI0Q1BBM0hNa2xzeEtJd0JTWUcvQS9xQUQxQzlCQ1JSblVBMUphNmJPWExxbExPeWQ3bzBWc01TM0FCc0F4NEJudmFOYnNmSzN0TFM4ZmVoVGNBZkZCNVRPQ2ZRaDhqTHFKN0NMTnNqSzNTTGQ0V0s4NEJIdi9BRkc2aFR4OW1KNmpwRXZnSTBJTklCckZQVnVJaFVsTGU3QXlaUVRXSTg0aEF3Z2NndlZiVlBYZmNza1BpZHQ5K3VLSTlZaVI3UXdpeXBPeERaaGNqem1POGpCQ0NMQ3hvcWxRYk1IOWM2VExSZFNQKzhDNWpsdWNLb0NBLzQ0djc5ZFFKTmlIemJON3F2KzVHdHRkTDNWaTRJT0FxdktwekRzdjRITVBUc3NXTVRLMzFmdDZOc0RmRFZCeCswQWJMUjZENS9lZDBPSEZUb0VKRTlxbXF2Y205M3AzaW9ubE9SZnVCTlZNOEw5TnRtcitnOWVlSkVXUzdONWJ3RW0wU3Z5TzlpVWlxUEEzYkI1S3JHTndjTGtTNkJMdUJMd0J2QVdmK2prT29wTzhyT0F4NDllTEFPMk9QQms4QmVnVDBLRVQrUlhHV3htR0FsSlFVakZQa0ZjT3hJVDA5WkxjdGxZWUF2N2Q5dks5Z2kwbzVJSzlDdDhDUWllL3l5V1pWUGkrb1lJbWVCWHdLdkFnTUJrWDVWOVo3dTZWbHhyMWdXUzdCQ29mNzZwMEFYSW51ckMreGRRcVFKT094L1BJUHhpTi94UzMwckhqV3Z1QWQ4NmRDaFBhaDJvZnBGb0J0b1FhUmxSVzlxOVRJQ2pBajBLTHp1d2JuZjZlazV0WkkzVkE0ZWNBUHdFQ0xmVU5XNmFtcGxXV25CckRRZFFFWk03WGxGRGZDZWU4Qy8yTGZQQXF4MjIvNjZpRHlNeUwrOXB6ZFFwUlRWLzZhcUo3UEo1STlRZGI3NTRZZmV2WHo3ZTJxQWYzUDRjTVJ5M1NiTDg3cUJMNGlwWmp4eHoyNmd5bHhVL3c0NEQvd0sxV01LRTgrZU9ISFBGRGYzZGdsV2pRdHNFWkYvQjJ6Q0xBbFZWaEtSTHdHN0JmWXA5S042SGlNTnV6ZHZmeTg4NEV2Nzk4Y1Y2Z2dFL2dUb0V0aExxYVM5eXNwaWFzcXE3d0ZuUmZXN3FJNGRPWGx5MmFQa1pkL3cvN1M3TzZhVzFTb2l1MFYxTjZyYk1ZTFFxdkdWRHpZUVUxUHUzSzBpdTlXeTJuL2EzUjFiN2plK0Z4SG5Ga1NldzdMK1V1RVJNWW5tS21XSWlMUWdzZytSdjFTUi8xdU1RUzd2ZXk3WEV2eFNkM2M3cW5VcThpZkFGb0U5R0JsOE5jMVN4cWdxSXBKUmVBZTRFckNzN3dDSnA0OGRHMXFPOTFzK1kxQ3RRNlJkNEZsL3oxZm9KS3RTeHZnaWo0aVlPdndSb0IzVGhybzg3M2UzUGVDTEJ3N0VnRzJJL0pHSUhLSENlakdxekNHQjZsR0Ivd3ljUC9MV1c2bTdlZkc3NnBGKzB0MGRWNUVPUko3Q05BWkZidmVhS21WUENOaWk4QlNxNjE3WnYvK3Vlc083SFlrMklMSmQ0RjlnUEYvVkFDdWZDQ0o3Z0cyb251SG1CSWk3d2wxWmduOTg2RkJFVldNMmZCZVQxSHlrcWxoZWRUaCtKOTRaeTNIK1dFU1NUNzM5OXBJVDFrdGVnbDk1OGtuTFVtMEltRmJJbmFodXcyajdsbnJwS3VXRnJhYjlkYWNHQWpzOHkycjY0UU1QTE5sK2xud0JFYkV0T0d6QmZ4WFlWODN6clY3OFBPRmVMT3MvcTBpM1B5OW5TU3paQUozSnllZUF2NGVwN2E3MG1Jc3F5MDlJWVl1Sy9MMVFYZDAzbG5xeHV4RUZIOFFNK21taFdsNzdMR0JqZnRjN1JPVGhwVjdzVXdjaEwzVjM3OGFJU1Y5YTZrMVVxVndFZmhlNGNxU241NzFQOC9vNzlsaEhIMzNVUmlTQ2FmOTc2Tk84YVpYVmc4SVhVZjNOaS92M1h4SklQWFB5NUIwMU90MzVrbWtrODAzQUY0RWw3d0dxVkR5L0Q4UUZqcW5KRWQ2UkFkNzVIdEJ4T25DY1AwWDFVYXBsdHM4OHFsb0hkR05aZnlLVzFYNm5yNzhqRDNqMDRNRUdOY1hwM1ppTmFPV0xDMFN3YkJzckhNWUtCaEVSMVBOd3MxblVjZkR5K1NWZDNnb0drV0NRUUNpRVdCYXFpcGZQNDJXelM3NTJPU0FpRnFvdGlIU2gybnIwNE1HeEkyKzl0ZWhLeVowdXdRZUFmWWpzdmNQWGxTMldiUk5wYmFWdXl4YWlhOWRpQllPNG1ReFRseTZSR1JwaStzYU5KVjAvMnRaR3BMV1YyczJiQ1VRaWVQazg2VTgrSVhIeElwbWhJVHhueFh2RGw0NXBvMjNCakFScHdEVEFMNHBGR2VEUERoeXdnWkNhV1h5cnd2aUM5ZlhZc1JpYnZ2NTFndlgxUk52YXNHTXg0NlZjbDl6a0pHNDZ6U2R2dkVHcXY1L0pqejZDeFdZTVJHallzWU5ZUndmdGh3OFRpRVlKMWRVaGdRRHFlVGlwRk9tQkFYS1RrMXo5eVU5d1VpbnlpYnRXWGwxSnZxcXc1b2Y3OWgwRGN0OWN4UFRXeFhyQXdrVDQzWWgwTGVVT3l3VTdGaVBjMkVqSGw3K01IWXNSYWlqZHpxcG51aE96NCtPSUNJbVBQMFpkZDFIWEZzc2l0bTRkVFYxZGRENyt1UDlnYVdreU96Nk9rMHJ4eWE5L0RiQXFERkROMXN6RDJNcWlYUHVpOG9BdmRYYy9pc2kzVUgyZUN1OWtzMEloYWpvNzJmcjMvejd0aHc4VGpNZHYrNXJrbFN1TW5UbkRoZTkvbi9UQXdDMi9OdHJlenYxLytJYzA3dHBGZk1PRzIxNDduMHd5OE1ZYlhQekJENWkrY1FNdlYvR0Q4WWVBdndKKytFeFBUOC90dnZpMlFjVFJBd2NhZ0haVXUxZ0Y4aW83RnFOcHp4NmliVzFZdGxrQTFQUHc4bm1tYjl3ZzJkZEhablFVTjNOVDZHSFgxaExmdUpGb2V6dmh4c1lGcngxdWFpSzJkaTAxR3phVUdMYWJ5WkFaSFNYWjEyZU1MSjh2ZWxqTHRvbTJ0ZEcwWnc5MmJObDdnSllkVlkwQlhRb2RQK251dnExMmNERkxjQXVxT3hBNXpDcUlla1AxOWF4LzZpbGlhOWNTaUppL0ozVmQzR3lXeWQvK0ZqZVhvMmJkT21LZG5jWG5JODNOUkpxYnFkKzJEWFVjc3VQajgxNjdadDA2NnU2N2o2WmR1MG9lejA5UGs3cCtuZWtiTndpRXc0VHE2d21FdzRobEVZaEVxTjI4bWZWUFBzbm82ZFBrSnNwcWV0b2RJeUp4NERIZ1Y0aTh3MjIwZzdjM1FKRi9oQWs4S3Q3NDRoczNVcmQ5TzdWYnRtQUZnd0I0anNQb3UrOXk3WlZYbUx4d0FUZWJKUkFPMC9uNDR6VHQzazNMdm4zRjE3Y2VPa1M0dVpueHMyZm52WDdyb1VNMDNIOS95V01qcDA0eGR1WU1OMzd4Qzl4Y2prQWt3dUN4WTZ4NzZpbWFQLzk1TE5zbVdGZEhiVFJLM1gzM29jQjBYOSt5L1F6dUVUYXFoMFExQ3Z6SnJiOXdBWDc2eUNNMllGbTIzWVZxeDkyK3c1VWczTlJFcExrWk94b3RQcGFibkNRMU1NRGt4eCtUNnU4M2V6QVJwaTVmeG83SGFYN0lWQnRGaEdocnF3bEsvSHhlTVNvV0tUNGZhVFZxdE1MZU9uSHhJbE9YTDVQczZ3TlZyRkFJRWFIWmo0SWp6YzBtRDJuYmhGdGFDSStNckFZREJPZ1F5TDF5NkZBSThKNDZmbnplb09SV0hyQU8wOG4ydGJ1aCt5b0g2dSsvbi9vZHBVZUlESjg0d2RqNzc1TzhmUG5tZzZxTW5EckZ4TGx6Ykg3dU9mT1lDUEdORzNGek9leDRIRGVkTGlhU0xkc21FSTBTMzdUcFp1RGhHK0RsSC80UVozcTYrUDllTHNmVXBVdU12djgrRWdpdy9xbW5pbTliOEo1ajc3Ky9ITi8rUFVWRWR2dmpndHN4Y3dqblBaUng0V1UxRU5oSklQQTFqSkZXL1BJTEVQYjNjak9aN08wbE16dzg1MnVkZEpyYzVDU1o0V0h5U1g5Q2hRaUJZSkRvbWpVRVpualJRRFJLdExXVlFDaFVUTGZrazBreXc4UGtKaVp3MHVrNTE4OE1EWkhvN1oxN2YwMU5TLzAyeXdWTHdYWTk3d25YODNZdTlFVUxlemFSRFFLZlo1VVlIMEN3dGhaN1Z0cWxrQkNlalpmTDRlVnlOL056ZFhXSUNHTGJoT3JyeVUxT1VpaWtCVUloUWcwTlNDQlFISjd1cHRQa0V3bWMxUHhkalBsRVlrNUtKMWhiUzdDMmRtbmZaUG14eTU5WFBTOXpEUEJuaHcvYlFJTUZYd2Erdlp4M2RxOEp4dU56OG43cFR6NGhQNDhCRmtqMTl4TlZKZHJXQm9BRUFvUWFHN0ZtR0k4VkNoR3FyMGNDZ2VKanVjbEowcDk4c3VCMTU0dDJnL0g0NmpOQWtYK2lFUC94L3YydkFvbmZuU1hYbXVQZFhOZU51SzY3RFZQVFd4Vjd2d0xxZWN4T3ZFc2dBTmJDVGw0Q0FXVFc4K3E2YzhweWhieGU4WFdXVldLUWM1am5lZlc4T2RkWkJkaEFROEN5dGdVc2EwNGVlYjZmZkF4ejhGOEhxOUFBbVZWT3M0TEJXeHFLRlFxVlBxK0t1bTZKSWF2cVhBTU1CTEJDQzdmSWlHM1BmZDd6RmwzdXF5QnNnWFpMWko4bE1pZlRQc2NBVmJWQlZaL0duRWUycXNoUFRwS2JWWE9OcmwxTHFMNSt3ZGRFMjl0TG52ZGNsOHo0T0c0MmUvT3hiSmJzMkJnNlE5a1NxcThuMnI2d1BDNWNYMDlzN2RxU3gzS0p4Sno3V3hXWUUweWZVWFA2ZkFrbEJ2anl3WU1SLzd6ZERXbytyeXFjVk1xa1JHWVFiVzBsV0RlM1ltU0Z3OWp4T0haTlRkRlRxZWVoam9PVFRKYklxTHg4dnZoWXNjUVdDbUhYMUdESDQxamg4SnpyQjJ0cmliYVdkckRtcDZjWERGb3FuTGlxYmtBay91S2pqNVlzdzdNOVlEdG1wc3VPMVhqa2FiS3ZqK2xyMTBvZVcvdllZOVJ2bnpzR3I2YXprNlpkdTRnME54Y0RGemViSlQ4MXhmUzFhempKbTRGZFBwbGsrdG8xOHNra3JpOG1DTWJqUkpxYmFkcTFpNXJPempuWHI5dStuZmJISGl0NWJMcXZiN1Vrb1dmVGdNaE9OYTI3SmN0Q3lSN1BNM0thMGtKbW1SS0lSZ21FUWpUdTJrVWdHaVVZaitQbDg3aVpES24rZmxLZmZHSWl6Umw3dGFuTGw3RkNJZU9sQ3RXTDluYnE3NytmOXNPSEdYMzNYWngwbW1BOFR2UG5QeitucGp0MTZSSlRGeSthMTg4TVFsVHhYSmVwUzVld2drRWFkOTVNZTNVKzhRVGpaOCtTSFJzam4weGlSNk0wNzkxTHc0NGR4U1c2c0llY3VuU0pxVXVYU3I5UkVVS05qY1RhMjRsMWRCQ0lSTENDUWZKVFU3aVpER05uenVEbGNpWGlpWEpGb0F2UHl3RlhDbytWQmhsbXJiNjlocWdNQ0lSQzJMRVlEWi83SE1HNk9xSnIxdUNrMCtTbnBoRExJajgxUlQ2UktOblVwd2NIamU1dlJna3QzTmhJVFdjbkRUdDNNbkgrUEY0dVJ6QWVwM2J6WnByMzdDbDV6L1RnSU9uQndmbUZxYXFraDRhTVdtYUdBVGJ2MllPVFRCS3NxY0ZOcDdHalVScDM3aVRXMFVHNG9FSDB5M3Jwd1VIU1E2VnpJTVd5Q01iajFLeGZUK01ERDVoY1pqUktlbWlJZkNKQm9yY1hCeXJDQUZIZEtDSWwzMkNKSHZDbDd1NmZZb1FIWlJ1QUJPdnFhRDF3Z0hWZit4ck5lL1lVRlN1em1lN3ZKemMrenR0LzlFZTQyU3l1WDQySXRMYXk5ZmQrajVaOSs2amJ1clhrTmZtcEtWUzFxSXd1cEY4OHg4SEw1VGoxeDMvTTVJVUw1QlpRdzRTYm1xamJ2cDE5My8wdVZqQllJdmNxS0tGRlpFNnVMOUhieS9CdmZzT2x2LzdyWWxYR2pzVUloTU04OHIzdkVXcG9JTll4ZnpuZVRhY1plZmRkcnYvODV3eWZQRWwrYW1xUlA4a1Y0UXJ3empNOVBmOVg0UUViNEdoM2R3Z3pWaVB1ZjVRbG9ZWUdvdTN0Tk8vZFMyVE5tbHVtVHdyYXVqWDc5ek45L1RvVDU4NkJLbTQ2emNTNWMwVGIyZ2pWMXhOcHVhbXZ0WUpCazE0UktaYlUxUE5JRHcweDFkdExkbXlzSlBxZGpadk5raHNiWStUVUtlcTJiU1BhMW1hTTJMOWVvZWxwSnBuaFlaTFhyakZ4N3R4Tkx5WkM3Wll0MUt4ZlQ2aWg0Wlk2UVFrRWlMYTEwYkozTDlQWHJwRWVIQ3hiU1plcTFnazBITzN1amdPNUl6MDl1Y0lTSE1LSUQxb3A0MWJMMk5xMTFOOS9QeHVlZnRyczRXNlJRQTQzTkJCdWFHRHpjODh4OE9hYlRKNC9qN3B1VVlFOG53SE81MDNWODBoZXVVTGYwYU9rUHZrRTl4WlJxak05elhSL1A5ZU9IbVhqMTc5ZWpISkZ4T1FGWjlTUEN5VDcrcGo0OEVNRzNueXpLRzRReTZMbG9ZZG9QM3g0UWM5WHdBcUZxTjI4bWRwTm01ajg2Q05FcEd3TlVNekJpYTBZVzBzQVJRTnNWZFU5ekpNb0xCdEVXSC9rQ1BYMzMxOVN1VWdQREpDOGRvM3hzMmVKdExRUWJtNm03ZURCNG10cXQyd3hrcXNiTnhoKysyMnplYy9sdVA3em56TjQvRGhibm4rZVdFY0g5ZmZmangyTkZvMDY1WHVTUy8vcmY1RWVHQ0J4OGVLaVVpUk9Lc1hJdSsrU241cml4bXV2c2VWYjN6STVRYitVcDY2TGswb3hjZjQ4cWY1K0xyL3dBcm1wS1dOOHFnUnJhMms5Y0lDbTNidUpiOXBrTHVwdmt3YmZlb3ZzNkNpWmtSRWF1N3FJYjloZ3J1dDcyUFZIamxDM2JSc1RkOUpBZGE4eGl1bDl3QmtnYVlNNUxoV1JEc3AwdXBVVkRCS0lSSWgxZEJCdGJ5LzI3cXJua2JoNGtlVFZxMHllUDA5bXpScWliVzNVMzNlZnllRkZvOWpSS0pIbVptcTNiR0gwL2ZkaGFncFV5WXlOa1oyWVlQTDhlU000VU1XdXJjV3lMTlR6U0EwTWtKdVlZUEtqajhoUFRlRWtrOFk0ZmUyZVdOYk5Qd1QvWGp6SEFjL0RTU2Fadm42ZFhDTEI1UG56aEJvYXlFMU9JcGFGNTdvNFUxTk1mdlFScWY1K2t0ZXVsVVRWZ1hDWTJpMWJDTS9RTFRxWkRFNHlTZUxpUmRLRGcyU0hoNHN0bnBFMWF3RGpOYU50YmVRVENZTHhPRzRtVTY1OXg3YWFLbHN2K0h0QUZXa1JlRWhWWStVNFZqTGMzRXpkdG0zVWRIWVc1VXBlUG84NkRoLzgyWitadGtaLzh4MXVia1p6T2FOTzlyVi9zYzVPT2g5L25QN1hYaU03TW1JdTZodk5sUi8vR1BDanpmcDZSQVEzbmNiTjVlYVV4UXBHSFdscEllQUhDV0QyZm00cVJXWjR1QmlKWjBaR3lJeU04UDUvK2s5SUlFQWdGQ0lRamFLcTVDY25GNno1QnV2cTZIajg4Wkl1dmVUVnF3d2VQODdWbi95RTdPZ29BS1B2dlljZGkvSFlEMzZBMkRhQlVJaElTd3R1T2sxalYxZXg3N2pzTUpMOWh6SG4wNTJ6QWNTVVNIWkltVFlkQld0cnFkMjh1YVNpTUgzakJwbkJRWEtKUkVrSnpFbWxHUDdOYjRodjJVTHRsaTNtRng4T0UycHNKTlRZU0hDbXZtOEc2bm1tU2lLQ09nNVdLSVJsMnpUdjNVdW9ybzdJbWpWRVdsc0pSQ0xZa1FoUzhJTE1xSkNrMDdqWkxKbWhJYU1GVENRWWZlY2RQTWZCemVYd2ZFKzNvUEhWMXByN2JHZ3cya0tNY2FjKytZVGh0OTh1MlFLNG1ReWU0ekIyNWt5eHNSNU1CYWQyODJZeXc4UGxhWURHeG5iZ3h4cUZQV0NNTWhZZjJMN2dzNURXQU1qNlhXYnVMTEdubTgyU3VIaVIzTVNFTWN4UXlLUkVna0dDTlRVRW90RjVEUkFvYVltMGJCczdGcVB4Z1FlSXRyVlJ0M1dyYVZTYXA2dzIrLzFUTjI0VWw4dko4K2R4VWluY2RQcTJRb05BTEVhd3BvWmdUVTN4TVhVY2N1UGpURjI4V0ZwL3p1Y2hueWZaMTRmWU5oUU1NQmdrMnRaV0lwZ3RNMnlNcmNVQTdLUDc5clVRRExiN1NlaXlwT0FCWi83eXA2OWZaL1M5ZVViUytaNXMrc1lOSmk5Y0tFa214em83emZJNGp3SWFmRU52YjJmTDg4L1Q4TUFEeERkc0tESDZ4VkRZdzlYNkJySGxXOThpMmRmSCtObXpYSDdoQmRJREEvTXFwQUZxMXE2ZEUvVk9YcmpBOUkwYkN3WkFvKysraXhVTXNzWnZuZ3FFdzlSdTNVcnc3YmZ2Nkw3dklTRmdFNnJ0Zjl2ZDNXUjdnVUFEVUpaN3Z3SmlXYWFMYlVZT3pjdmxGdnhGRnArZjlVdXpiTnQ0aTFsWTRUQjJMRWJ6Z3c4UzYrd2t2bUVEb2JxNk9kTU1Da3R0Zm5yYUNBOThqeWFCZ1BHd3NWakowbXd1YmhHc3F5TytjU090M2Qya2J0eGc5UDMzY2FhbjV6U2hpeC9nek1TWjBYc3lIMDQ2UGVjNjF1eDdLRWRFSW5tUkJodkxhZ1VXMWlPVkFSSUlFSWhFU3BLNGJpYURjNHVzdnpmUDg1YS9INXlOSFl0UjA5bkpwdWVlSTc1aFEwbHVjQ2FGL3VIMHdJQXhRbjlKdE1KaGd2RTRWbWNuZ1ZuNVNTc1FJTHBtRGRFMWE2aFp0NDdrMWF0a2hvZE5wV2FXNFFUQzRUa2FRV2RxQ3U4V1pUYkhyd2tYS1BRYTMxSU1XeDdVcTBpcmpWRW9sSFVuak9lNk9KbE1pUWcwRUluTTZlK1lpUldKWU04cWViblo3SnhLUnYzMjdUUi8vdk9zZS9MSllyRi9Kb21MRjVuMjg0eUozbDd5eVNUTzlIU0plcmxRdHJOcmFnakc0OVJ0MjBaalZ4YzE2OWVYbFB0Q0RRM1VSeUowL1p0L3cvV2YvWXpSZDk4bDhmSEhOKzh2bDV2ajdlemFXcXdGeW8xZ3RpY3o3MWs5ei95c3luenFscW8yNGJxYmJJenNxbndUMFBpZUo1TXBpUjZ0Y0xoa3N6NmJRRGlNUGV0NUw1Y3J5cVVrRUVBQ0FkT292bldyMmUvNVhXM3FlZVFTQ2R4VWlzbVBQaUxaMThma1J4OHhlZkdpTWI0RmxrUUpCckZyYWxEWFJXd2JKNVhDamtZSnhHTEY2VmgyTEVaODQwWnF0MjdGbVo0bWVmV3FVVmk3YnNuOUZiQnJhb29SOFh3RWEycEt2THFxNG1VeWxhQ3NqZ0YxdGlXeVVWWEwyZ082NlRTWjRlR1N2K3BJVTlQTlNzRXNMTnNtM05SRWZQMzZrc2V6NCtQa3hreDdhcWloZ1ZCZEhWMy82bDhWODNSQWNUamxKNy8rTldQdnY4K052LzNiUmQrbjV2UGtKeVlZT1gyYWtkT25BVmozdGEvUnRIczNuVi85YW5FY2h4MkpzTzZyWDZYenkxOW0vTU1QeVU5TmtSMGRKVGMrUGtmb0VGKzNqZ20vZVgyK1dZTHhUWnNJejJnMVZjY2hNenhjOXVvWUVXa1MyR3lyNnJJZXgzazN5Q2VUSks5ZXBlWGhtNmNDMUt4ZlR5QVNvZGUyaTBsbE1EckIrdnZ1Szg3N2c1dHFsdXpZR0xtSkNjU3lhSHJ3UVJwMzdpd1JDTGlaREpuaFlhNzk3R2RNL1BhM1N4NU9DUmd0NFBnNDZhRWgxai81SkpFMWE0eW1MeEJBTFl2MVR6L054TGx6REx6K090bnhjVElqSXppcFZERVBhZGZVbU9yTzV6NUhvcmUzbUhZcVZHS2E5dXdwVmtQQWJET1NWNitXdXlvR29FNVYyMjJNOFpWbEFycUFtOG1RR1JrcDlZRE56UVJyYW01NmhvSVVQaGlrWnQwNms4eWRNWHpJeStWd2tra2ppYklzYWpkdXBPV2hoMHFpVGkrZkp6cyt6c0FiYjVpRzlMdndTNXkrZnIzWTRONTY0RUR4dmlRUVFJQ1doeDdDbVo1R0xBdG5ldHBJKzNNNUUwVFlOb0ZJaEZCRFF6R0FLZVk5TFF2THRxbmR0S2wwRCtnNFpFWkd5dDREcW1wTVJPb0N2N2R1M2I4RVdpaGpDYjR6UGMzMHRXdTBkWGNUcXEwdFJyTjJUWTJaUk5yV1JtWjRtSWFkTzFuejhNTTg4TS8vT2JHT2ptSTBPblhwRXYyLy9DV2pwMDlqaFVKc09IS0V0c09IaThwbGRWM1VjVGp6dmU5eDlhYy9KWG41OGwyZDArZmxjdVRHeDVrNGQ0NUVieTl0M2QxRlJYYWtwY1hVdXNOaHB2M1pORll3U0xDMnRqakZJYkptRGEwSERwQ2JuQ1JZVTRNQW03N3hEYmI5ZzM5QS9mYnR4VDFnUHBra2VlVUtILzNGWDVobSszSVZKQUFpa2dKVEdBNUptVTgvVUZVOHh5Rng4U0lTQ05DMGUzZnh1VWhySy9XZit4eXFTcWl4a1VoemM4bUVBaWVkSmpNeVF1TGpqODFjbDFpTTJpMWJDTTJJa0hPVGs2VDYrKythMTF1SWZDSkJabWlJeVFzWGpDTGFuelVZckt1amR1dFdBc2VPNFV4UE0zbmhBclZidDFLemZyMHArL2x5cnFaZHU0aXRYVXR1WW9MNkhUdEtsbDZnS09uM1pyV05saU9xYWdNaFcwUkNsR2tKcm9pL3h4czVkWXA4TWxsaWdMV2JOMU83ZVRQdFgvakN2QzkxL0lhaDRaTW5jVElab3EydHRPemJWOUpxbVI0YVl1akVDWkpYcnhhTC9jdEJabVFFQllaUG5xUzF1N3RvZ05IV1Z0WTgvREJYL3ZmL0pqTTh6UENKRXpRKzhJQlI5ZmpMZFNBUW9PUExYNzdsOVVkT256YTZ4ekpQd1lBNTVCSUlCWDV2L2ZwL0M5UUFaVnM4TEpBWkhTVTdNb0lkaldMNWd4NFh3a21uY2RKcFB2aXpQMlAwdmZkSUR3NVN0MlVMOVR0MjBQbjQ0NmJoM084ZEdUMTltc3N2dkdBR1R5N3paQUxONTBuZHVFRjh3d1pUVy9ZYjMrMW8xQmlQNTVFWkdpSTdNY0g0aHgreTV1R0h6VmkzVzVRRWszMTlEQjQvenJXWFgyYnk0NDhyWmN4dkZqQnVrREpmZ2dzNHlTU1prUkVtenA4M2ZSdEFxTEd4V0FwVGY3S0FtMDZUR1IwbFB6Vmxrc2QrNGpqVTJFaWtxYW1rMnBBZEd5TXpOa1ptZFBTZWVBN1BEeEt5WTJOa3g4WUl4dVBGUkhhNHFZbFFRMFBSQ04xVWlrUnZMOEY0bkhCek00Rm90RGdxeE12bnpUVC84WEdtTGw5bTR2eDVJd2RiUUdoUmJxaVptQkN5TVJGd1dRcFI1eU0zUHM3bEYxNWc1TlFwb20xdGJQN21OMDFYWEZ0YjhiaUQ4Yk5uR1RweGdzVEhINU1kdXptV3JuYno1am01dzZHZUhqTUIvMTR0Vy81Qk5aTzl2V2FtNEl4QjVyV2JOK1BtY296ODVqZEZBejM5SC80RGRmZmRSK3VCQXpSMmRabXV1RmlNOU9BZytjbEpMdi9vUjZRSEIrZTJjNVk1QWpZaUVSdUlxR3JGblhCZW1OdDMrWVVYVEZRY2pSWlBOc3FPalptMlJYOEtRa0ZSSGQrNGtacFp5ZW1wSzFlV2RkKzNFTm1Sa2RLaG1KamNwcHZKRUt5dExTcWE4OGtrVTVjdTRTU1RqTDd6anNsYjJyWVprSm5Ma2JoMGFZNGtyVUlJb1dyWmdDMFZPQUUxUHpWbHBGV0xFRjJLcisyTHJGa3paMEJsWm1Sa1FYM2djaktmTEN6UzNFeHVZZ0k3RmpPNVRmOUlyOHpRVUxtS1M1ZUNYZnpQYWlUZ24vMjI0NS8rVStJYk50RDA0SU5HS2pYTDB5Y3VYTUJaZ2FSdG9iRjhKdEgyZGlKdGJYenBoUmZNMk9DclZ6bi81Mzl1Smo3Y29oMjBrckVCUjFYeDB6RVZqd1FDaEJvYXFOdTZsV2hiRy9GTm00elhtNldQSzV4VTVLeFE4NDZYeitOZ1dndnNtcHFiVXhJQUxNdEl3aXlMdFk4OVJucHcwS2k4SnljclFXU3dXQnpBc1lHTW1BT29WNFVCV3FFUThmWHI2WHppQ1ZvZWVxallEam1iOU1BQXFmNytPZE95N2hWZU5vdVh6VEw1MFVjbFl6b0tTZWY0cGszRU4yMmlwcU9Ea2RPbmNZOGVOVDBubGJuZm00OGNJaGw1OGVEQkd4aHBUTm1XNGhaTDR3TVBVTHQ1TTV1ZmY1NXdZNk1SaWZybmdZQUpPTktEZ3lieTlYczJVbmRCY0xBVVlwMmRwdWRrMnpiYURoNGswdFpHN1l4SXZSQ0laTWZHdVBUWGYyMVNMdWZPcmR3TjN5VVVKc1R2Qzg1UjVtS0UyMUdJY211M2JLRnUyemJpR3pZVWMydWU0K0NtMDZaSDkrT1BTZmYzbTZid0d6ZEtValFyUmVyR0RhTjFkQnh6MUZjaVFTQVVNa0xUYUJRckdDUlVYMCt3dHBhNisrNERFYWF2WFN2bnZ0OUZJV1lKenRtWU14d3Fldm1OdExiUytMblBzZTBmL3NNU0VRS1k1SFhocEtMQ1pJUnlJenM2U25aMGxMRXpaOHhraFAzNzZmQlBhZ28xTkJUL21EWS85eHlwL243Y0daTVZLcGdja0xSVk5TZmd6RzdBcVJTaTdlMDBkbld4N29rblRETzMvMzNrL0Y2SlMzLzFWNlFHQm93WW9jd2xTbUNrWitPLy9TMXVQcy9vZSsreDlkdmZKaENKbUNHWklvVHE2MW4zOU5PSWJadkJTYmM1dmJOY1VWWGpBY1ZZWXNXT1pnODNOQkJmdjU3bXZYdm5pRXZ6aVFRRGI3eUJrMHJOZXhaSU9lTDV0V0lubVNUeDhjZHNlT1lad0V4Y0ZSSHNtaHBhOXU1bDRyZS9KZG5YVjdFR0tDSU9rSk1YRHg3OE1hWXhhYyt0WDFKZUZHcWloNy8vZmFPZDh6dlozRnlPek9BZ3ZULzRBWVBIanBYRlBtOHBoQm9hYUh2MFViWjkrOXRFMTY0dGF2OHlZMk00eVNTdi8vN3ZGM3RLS2dsVmZVOUVMaUxEVy9nQUFBM1NTVVJCVkZtb0psQXQvN1ZwRnBFMWE2amJ0cTJrSzh4ekhQS1Rrd3k5OVZaeGMxL3BGQ1l0REowNFFUNlJLUGFGQlB3aDZyVmJ0c3pSQlZZQ3ZpQjF3Z1lHbURVNHVoS28zYnlaK3UzYlMzcDR2WHllOU5BUWwzLzR3MktpdWRKeDAya21QL3FJek5BUWpidDJtVFpOMnk2TzhGaXpiNStKN2l0dktVNGdNbUFoY2htUmtaVyttMFhqVHhwdDdPcWk4eXRmS1hucXhxdXZjdTNsbDBrUERhMUllVzI1Y0RJWjBrTkRYUHY1ejdueGkxK1VQTmY1eEJNMGRuWE5PL0doekJsRDlhcU5tVlJaTWI4dHNTeUN0YldFR3h1TFM0KzZMcDdya3J4NmxXUmZYMFhueCtiRjgvQThqK21yVndtRXc3aTVISmJmMXh4WnM0WndVeFBCMnRvNVE5bkxHdFVVTUdGNWNFVVhPTXUxSExGak1acjM3Q0hXMlZrYzl1MmswMlFHQnhrNWRXcitnVVdyaEpGMzNtSGs3YmZKREEwVjUrS0U2dXVwNmV5aytjRUhTdzdpTG5jVVJqeTRZbGt3SURELzJQY3l4QXFGaUcvYVZESnBQanMyeHRqWnMyYlB0L29PKzd1SlAybS8wR3RjSUZoYlMzelcvTVJ5UjJES2doRXJCQk9WRkFWYndTRFIxbGJzR2Iyd2hiYk4xU3BabW9tYnpUSjkvWHFKaUNJd3ovekVDaUFURXBtd3Y5clRNL1pTZC9jQTBJZUpoc3U2TEZkb1BKODVtQ2c3UHM3RWh4OHVpMUlrVkY5Zm5FTVQ4Q2VqMnBHSU9XNTF4b1JVWmd3RmNqT1o0dlNzdTUwQWQ5TnB4cytlcFdIR1lUaUZnMnh1ZFRwbkdaRUQraEVaK0dwUHoxamhUeVlGOUFNdGxMa0JBblBtOXVFUENGOVVMNnhsRVFpSGk0SlZ1NmFtMkJodSsvUDk3RmlzZU5DTTdVOWZzTUpoTTNmUGI0QXFOSmFENlZzdTlIcW82NXBSSU5rc251T1lPWUIrcTRDVFNwbFJ2cWtVYmpackhwdWVMZ3BPM1d4MlVWdUlPVWVGd2MzelNNb2ZSNkZmakFhaE9LUjhRdUM4cW02WE1wK1VWVHdmWk1ZUHV6QTRjbEV2RHdRSTFkZWJ5REVlTDNyVGNGTVQwYlkyZ2pVMVJOdmJpODAvTStWY240YUM0ZVducG9wekJkTURBMlRIeHN6VzRmcjFvdHdxTXpwNjJ3T3J0ZkQ5empCQThjZDBWSVQ1UVVwRXpnRVQ0QnVncUk0QXB3VWVwOHhuQldvK1QzcHdzR1FpVlAyT0hkejNqLzh4NHg5OFFENlpSUFA1b3NjcXpHSXB0amFHd3pmYkd3TUJBc0VnQkFKWXZtY1R5MEw4UTZ6dnhwUlJzVzNzZUp4QU5FcTRzZEVjNTVEUDQ3a3V1QzZ1N3pVTDdhUnVOa3QyZE5TY3ZKbkprSnVZS0hwVThVZDJOSFoxVWJ0NWMvRTluRlNLMUNlZlZFcjZLWVhxYVdBRWJ2YUVGSmJnc3U5bzl2enhZMDQ2amQ5S1FEQWVKNzV4STE0MlcxenlMSDg0ZWFpK0h0c2ZWaGx1YWlJUUN0M1JYcWx3T3JxNmJuSHBLeXk1SlJTV1pOOURGOGFERkF5ZFFBQnU4NzZGK1lEWnNUR2NxU21jVEliYzVLUXhXSDltakIyTEVkK3dvWGlFcktyaXBOT2toNGJtSGQ5V2hqZ1lXek96WVFEVXNvYUFFM2hlcXR6ZGVENlpaT0RZTVdLRjZhTWkyTEVZZGl4RzdCWW5sSDlhbkhUYWpBUDJKMnQ1am9PYnpacUU3NHhUTnlVUU1QdEtmdzlweCtNM1pWU0x4UEwvT083a05haVM2dTluNFBYWHkxTHJPQnVGcEdQYmI2T2FnSnNlTUllcGlBeGhrdEpsdXd4N3VWeHgxa3QrYW9yT3h4ODNnY0VpVXhEcWVjYWdwcWR4TXhteTQrTzR2dWZNSnhLNHVSeTV5VWxqYk5tc2lXeGRGODNuaXllaUY0T0FHUVpZOUh5Ri9aaS9qTnVSU0hFSWVxaSszcWlkNityTTVOTndtSEJqb3hrM1hJaXlGN25zRis3bHhxdXZNbkh1SE5NM2JsVENFandDREtHYVFDUUh2Z0UrZSt4WURzaTlkUEJnQXBFa1pXeUE2cnBreDhaSTlQYmk1WEowRkU0ZHZ3TUQ5SEk1Y29rRVRqSkowai9wUERjMlpxWU5GSUtFOGZGNUo5bmZLVllvWkxyZUdodE5jT01QbkF6NVFSQ3EySDd2U21GZXpXSy9EM1ZkeHQ1N2oyUmYzNEpIeUpZWlNZR0piN3o1WmxFbFV2SmJFNUZmcW9sTy91QmUzOW1kTXY3QkI0eC84QUVEcjc5T3VLV0YrTWFONWdndGY5Szg2eDl2VVBCbStVU0MxTUFBYmpwOVQxVXlYaTVIenA4UGVMdnhHWFlzUmlBYUpkYmVicnlrN3pXdFlKQkFOR3FPWk1obXlZNk5rZXpySTd0Q1RmVkw0RFUxQVVpUlVyZWgyZ2VzcVpCOEV1QjNqVTFOa2Vydkp6ODFWY3pWRlhKeWhYTTBYSDh2Vjg0YmRjOXhJSk14UVVnNmpSVUtrUjBiSytZZVBYOGI0RXhQa3krY3NGbEJLRnhEcEcvbVl5VUdhSG5lR1UvRTFnb3l3RUlDZHlYbXU5eHR2RnpPakJKZW9WN2xlOEJaTEt1a3AzVDJobU5BUmE1Z2t0TGxlZXB4bFlyRHQ2V3p3Q1dNQUxwSWlRRStkZkprQmtpaTJsY29sVlNwY2hkSXFtb2Zxc2xuangwckViN01EYm1NdGI2RUVTZFVxWEkzdUlLeHFjVHNKK1l6d0JTZWR3cmpLc3QzeDE2bFVzZ0JBNnI2amhvVmRBbHprbWZpdWhtZ1Z5MXJBbU9BRlNVeXExSjJPTUNFcDlyTFBLMGZzcENFNmFWRGg1NEhEcUg2ejViMy9xcXNjdjQvNEsxbmVucGVtTy9KaGRQdXF0ZFJmWjhLbnBwUVpjWHhnUGVCNnd0OXdZTExxKzE1NTRBcmptVVZsdUdLbUtSZnBXendBRWZnVmZXVkwvTnhxLzFkQXBPS2VZVUtITjFSWldWUjFmY1F1U1F3SXJkWVJSYzB3Q2RQbkhBQVhqeDA2Q3lxSWFrYVlKVTdveC9WYzBmZWV1dVdhbzdiTHFzZS9FL2dPTldVVEpWRkltYnBQUzZlOXo5djk3VzMzOWNadWY0RjROZXFXcTJPVkxrZENWWDlPK0RDWWdZZTNOWUF2OTdUa3hBam9UNWJPR0t6U3BXRlVOVU1JbWNVK3A4OWVYSk81V00yaTBveWU1WjFTdUFNbnRmbDd3VmJidnVpS3A4OVZNY3NPQnZ3dlAvSUl1Y05MU3ExSXFvZVpnOTRSbzJxb1VxVnVZaWNRZVE5akswc0tuKzhLQS80N1BIakR1QzgyTjM5QzJBVWVPelQzbU9WVmMzUEVIbm55Uk1uRnIxVnU3TTZyOGdKWHkxekNwTWJyQzdGVmNBMHMxMENmZzJjdjVNWDNsRjE0OW5qeHlkUUhWRFZNMnFpNDJxWjdqT09xbnFxT3FLcVoxVjE2TWp4NDdjTlBHWnl4K1UxZGQxK2RkM3ZBTWZ3eHl0VStld2lJZ25naEFmZjlXYXBuUmZEcDZudmVoakQreFh3L1UveCtpcXJpKzhqOGl0TXp1K09peFVMeXJGdXgwdmQzYnVCRFJpbGE1WFBLaUsvQS9ROWMvejRweHBOKzZrTnNNQkwzZDMvUlZWM2k4aVhsblNoS2hXRndtdkFlOC8yOVB6UlVxNnpaTFd6cXA0VWM1M2RtQk0zcXdycTFZdzVZbXNNT0tmd202VmVic2thdit6VTFOOEFyNHNKdzh0K3VsYVZKU0tTRTVGZWdkY0g4L20vV2VybGx1NnRWQjBST1liSWRWVC9YMkE3Rlhqd1RaVkZZRkp2NXhYK25ScUhzK1EwM0pJOTREYy8vTkFMMlBaRUlCQTRqeW5UOVFMT25QbDVWU29YODd0ME1LcW9zNnA2SHRXSmYzTHExSklOY01sQnlFeGUvc0lYMXFubjdVYjFMOVhzQnl2NklPd3FSVElDRStwNS8waFZ6eng3OHVSZE82ajRidmQ1VEtqcUJWWDlyNWh5WGNVYy8xQmxRVExBT3dyL0hiUDN1Nk5LeCsyNHF3YjQ5SnR2SmozbzkwU09xdW1HcnhwZzVaTlRjNXJXSzU1SS96TW5UOTVWVWZKZFhZSm44dUtoUTl1QmRrdjFKVFZIUDFTWDQ4b2lJNUREODU0R0JvNmNPTkc3SEcreW5EbTdncXQrRWRpQ0ViSkdxTFozbGpYKzRQY004QTVtRlJ2UXU3enN6bVRaUEdDQmx3OGQ2dkpVbndMK2hhcTJpa2cxVVYzZU9KaFp6djg5SVBMS1U1K3l4TFpZbHQ4YnFWNUM5VWQ0M2g4aWNrSS9oV0tpeXIxQlZVY1VUaW44UDhBTHFucGh1ZDl6MlEzdzZaNmVGSjQzcEtwbmdET1lYRktLYXB0bitXREtheWtST1Mvd0hxYjFZdURwbnA1bGIwSmI5aVY0Smk4ZU9OQWtJanRFNUwrbzJSZFdGZFhsZ09xUWlQUWk4cThEZ2NENUo5OTQ0NTdwUE8vMWZpeUZLZUY4VCtFZ3NBUFZwNlNDWmxLdk9rd1A3emxWL1pXc1FPcnNubnBBZ0Y5LzhZc1dZQ1Z5dVNQQTUwWDEzNnVxVlRYQ0ZVTDF2Nm5xeVd3eStTTlVuVzkrK09FOWJiTzQ1d1k0bTZNSER4NVIrQ0lpZjRBcDMxWFROTXVMSjVCVStQOFIrZFV6eDQ4dldkR3lGTW9oSmRJSG5BYnFnRWRSYlVHa3VqZGNIb1l3a2U0SlJFNzYxYW9WWmNVOUlNQXJodzdGZ1NaUDlUc0tYY0FqSzMxUHE1UVRxbnBXWGZkUGdZbmZlZnZ0RlovMVV3NGVFRlhOaU1nQThCOVJiUVc2RVhrU1V6MXBYZG03cTNoR2dIUEFMNEZYTVhuWUljcWtwYllzUE9CTWpoNDhXQWZzVVpHbk1RYTRSMVZqSW5JSFo1aFc4WTlEemFqSUdZR3pZZ3p3MkpHZW5ySnFwUzA3QXl6d3N3TUhZb0R0V05hZllwYmx4eWdUajEzdWlCRUUveDF3TmgySmZBZHd2dm1yWDVXbE1xbWNmNkU1VExYa2g2cjZKdVl2K0NEUUlTSjdWTld1cG01SzhJQnpxUFlEcjJNcVR0Y3hQOGV5V0c3bm8ydzk0RXgrWXBibEpndStMYkFMa2ErcmFraEVxaWtiUTJGNjJXdW9uaFBWUHdkR2pwdzRVVmJMN1h4VWhBSE81TVVEQjBLWWZPRVRJcklMa1grRzhlU2hsYjJ6ZTA3QjZMNlA2cnUyNmxGZzZNa1RKeXFxTTdHY2wrRDVVZlV3ZXJWZUlLV3FUVUNUUURzaUc0QTR4a0JYSGY2cGswbEUrc1JFc3hQQW01aGNhb295WG1vWG91STg0R3grdkg5L1U4Q3l0bGtpKzRCblZIVURJanRYK3I2V0JkV3pRQitXOWJLb25ncEM3MWQ3ZW00N2g3bWNxVHdQT0pjRUpzOTFSVlZmRTRqamVaczhrUzVnbzRoOFNWWHJSS1JwaGUvelRobkJuTlB5R3FwWE1TMnZWekRINlNZd0hxOHNJOXM3b2VJOTRHeGUyYjgvQXJRN0lsMklyQk9ScjZncDg3VUNNU0FrNW5NRXMyOWM2YjJqNDM5a2dKUkNEbk1hd1lDSVRLanFMd1g2UlBVc3FnTkhUcDZzcUQzZTdWaDFCamdmZjlQZEhST1J1S1c2VjZCRFlMK3E3aFNSRG93dWNjWHc5M0lEUUsvQ1NZWHI2ampIS0pOUzJYS3pHcGJnMnlJaU9mK01rM09ZWmF4WFRLQVNRN1VEa1FoUWoyb0xFTUVzMTNWK0JhWU9WUnMvMGxhd1JDVGk1eUZ0QURYalNSeFZ6ZmpIVXVVVUNvOGwvT010RXFvNmhsRWVqd0dUbUdWMHhDOUZUbkJ6MlozZ016Sm41elBoQVcvRjMzWjNOK1ZGR2xTa0ZkZmRCRFFnc2hIVmRrVHFCTnBWdGJCVXh4QUpZU0x0Q0RmL2dBdExhQkxWSFA1U0tpSTVZQUJqaEFPZTZtVWdJWUhBRldEQUVwbDQrczAzeXo1WHQ1ejhINm1RVTRteE5wNEhBQUFBQUVsRlRrU3VRbUNDIj48L2ltYWdlPgo8L3N2Zz4K" k="name"/>
            <prop v="0,0" k="offset"/>
            <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
            <prop v="MM" k="offset_unit"/>
            <prop v="35,35,35,255" k="outline_color"/>
            <prop v="0" k="outline_width"/>
            <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
            <prop v="MM" k="outline_width_unit"/>
            <prop v="diameter" k="scale_method"/>
            <prop v="40" k="size"/>
            <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
            <prop v="Pixel" k="size_unit"/>
            <prop v="1" k="vertical_anchor_point"/>
            <data_defined_properties>
              <Option type="Map">
                <Option type="QString" name="name" value=""/>
                <Option name="properties"/>
                <Option type="QString" name="type" value="collection"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol type="marker" name="centerSymbol" alpha="1" clip_to_extent="1" force_rhr="0">
      <layer enabled="1" class="SvgMarker" locked="0" pass="0">
        <prop v="0" k="angle"/>
        <prop v="245,75,80,255" k="color"/>
        <prop v="0" k="fixedAspectRatio"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="base64:" k="name"/>
        <prop v="0,0" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="35,35,35,255" k="outline_color"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="diameter" k="scale_method"/>
        <prop v="40" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option type="QString" name="name" value=""/>
            <Option name="properties"/>
            <Option type="QString" name="type" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" class="SimpleMarker" locked="0" pass="0">
        <prop v="0" k="angle"/>
        <prop v="33,150,243,255" k="color"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="bevel" k="joinstyle"/>
        <prop v="circle" k="name"/>
        <prop v="0,0" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="255,255,255,255" k="outline_color"/>
        <prop v="solid" k="outline_style"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="diameter" k="scale_method"/>
        <prop v="25" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option type="QString" name="name" value=""/>
            <Option name="properties"/>
            <Option type="QString" name="type" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" class="FontMarker" locked="0" pass="0">
        <prop v="0" k="angle"/>
        <prop v="A" k="chr"/>
        <prop v="255,255,254,255" k="color"/>
        <prop v="Arial" k="font"/>
        <prop v="" k="font_style"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="miter" k="joinstyle"/>
        <prop v="0,-0.40000000000000002" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="255,255,255,255" k="outline_color"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="11.8" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option type="QString" name="name" value=""/>
            <Option type="Map" name="properties">
              <Option type="Map" name="char">
                <Option type="bool" name="active" value="true"/>
                <Option type="QString" name="expression" value="@cluster_size"/>
                <Option type="int" name="type" value="3"/>
              </Option>
            </Option>
            <Option type="QString" name="type" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property key="dualview/previewExpressions" value="fid"/>
    <property key="embeddedWidgets/count" value="0"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer diagramType="Histogram" attributeLegend="1">
    <DiagramCategory scaleBasedVisibility="0" backgroundColor="#ffffff" labelPlacementMethod="XHeight" minScaleDenominator="0" lineSizeScale="3x:0,0,0,0,0,0" barWidth="5" sizeType="MM" width="15" diagramOrientation="Up" showAxis="0" maxScaleDenominator="1e+08" penWidth="0" opacity="1" backgroundAlpha="255" sizeScale="3x:0,0,0,0,0,0" rotationOffset="270" spacingUnitScale="3x:0,0,0,0,0,0" penColor="#000000" lineSizeType="MM" scaleDependency="Area" minimumSize="0" direction="1" height="15" spacingUnit="MM" enabled="0" penAlpha="255" spacing="0">
      <fontProperties style="" description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0"/>
      <attribute color="#000000" label="" field=""/>
      <axisSymbol>
        <symbol type="line" name="" alpha="1" clip_to_extent="1" force_rhr="0">
          <layer enabled="1" class="SimpleLine" locked="0" pass="0">
            <prop v="square" k="capstyle"/>
            <prop v="5;2" k="customdash"/>
            <prop v="3x:0,0,0,0,0,0" k="customdash_map_unit_scale"/>
            <prop v="MM" k="customdash_unit"/>
            <prop v="0" k="draw_inside_polygon"/>
            <prop v="bevel" k="joinstyle"/>
            <prop v="35,35,35,255" k="line_color"/>
            <prop v="solid" k="line_style"/>
            <prop v="0.26" k="line_width"/>
            <prop v="MM" k="line_width_unit"/>
            <prop v="0" k="offset"/>
            <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
            <prop v="MM" k="offset_unit"/>
            <prop v="0" k="ring_filter"/>
            <prop v="0" k="use_custom_dash"/>
            <prop v="3x:0,0,0,0,0,0" k="width_map_unit_scale"/>
            <data_defined_properties>
              <Option type="Map">
                <Option type="QString" name="name" value=""/>
                <Option name="properties"/>
                <Option type="QString" name="type" value="collection"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </axisSymbol>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings priority="0" showAll="1" dist="0" obstacle="0" placement="0" zIndex="0" linePlacementFlags="18">
    <properties>
      <Option type="Map">
        <Option type="QString" name="name" value=""/>
        <Option name="properties"/>
        <Option type="QString" name="type" value="collection"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions geometryPrecision="0" removeDuplicateNodes="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <referencedLayers/>
  <referencingLayers/>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias name="" index="0" field="fid"/>
    <alias name="" index="1" field="osm_id"/>
    <alias name="" index="2" field="name"/>
    <alias name="" index="3" field="amenity"/>
    <alias name="" index="4" field="hstore_to_json"/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default expression="" applyOnUpdate="0" field="fid"/>
    <default expression="" applyOnUpdate="0" field="osm_id"/>
    <default expression="" applyOnUpdate="0" field="name"/>
    <default expression="" applyOnUpdate="0" field="amenity"/>
    <default expression="" applyOnUpdate="0" field="hstore_to_json"/>
  </defaults>
  <constraints>
    <constraint unique_strength="1" exp_strength="0" notnull_strength="1" constraints="3" field="fid"/>
    <constraint unique_strength="0" exp_strength="0" notnull_strength="0" constraints="0" field="osm_id"/>
    <constraint unique_strength="0" exp_strength="0" notnull_strength="0" constraints="0" field="name"/>
    <constraint unique_strength="0" exp_strength="0" notnull_strength="0" constraints="0" field="amenity"/>
    <constraint unique_strength="0" exp_strength="0" notnull_strength="0" constraints="0" field="hstore_to_json"/>
  </constraints>
  <constraintExpressions>
    <constraint exp="" desc="" field="fid"/>
    <constraint exp="" desc="" field="osm_id"/>
    <constraint exp="" desc="" field="name"/>
    <constraint exp="" desc="" field="amenity"/>
    <constraint exp="" desc="" field="hstore_to_json"/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction key="Canvas" value="{00000000-0000-0000-0000-000000000000}"/>
  </attributeactions>
  <attributetableconfig sortExpression="" actionWidgetStyle="dropDown" sortOrder="0">
    <columns>
      <column type="field" name="fid" width="-1" hidden="0"/>
      <column type="field" name="osm_id" width="-1" hidden="0"/>
      <column type="field" name="name" width="-1" hidden="0"/>
      <column type="field" name="amenity" width="-1" hidden="0"/>
      <column type="field" name="hstore_to_json" width="-1" hidden="0"/>
      <column type="actions" width="-1" hidden="1"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <storedexpressions/>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field name="amenity" editable="1"/>
    <field name="fid" editable="1"/>
    <field name="hstore_to_json" editable="1"/>
    <field name="name" editable="1"/>
    <field name="osm_id" editable="1"/>
  </editable>
  <labelOnTop>
    <field name="amenity" labelOnTop="0"/>
    <field name="fid" labelOnTop="0"/>
    <field name="hstore_to_json" labelOnTop="0"/>
    <field name="name" labelOnTop="0"/>
    <field name="osm_id" labelOnTop="0"/>
  </labelOnTop>
  <dataDefinedFieldProperties/>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
