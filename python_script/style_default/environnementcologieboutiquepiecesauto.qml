<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis simplifyLocal="1" maxScale="0" simplifyMaxScale="1" hasScaleBasedVisibilityFlag="0" simplifyDrawingTol="1" simplifyAlgorithm="0" version="3.14.1-Pi" minScale="100000000" labelsEnabled="0" simplifyDrawingHints="0" readOnly="0" styleCategories="AllStyleCategories">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <temporal startField="" mode="0" durationUnit="min" fixedDuration="0" endExpression="" endField="" accumulate="0" startExpression="" enabled="0" durationField="">
    <fixedRange>
      <start></start>
      <end></end>
    </fixedRange>
  </temporal>
  <renderer-v2 toleranceUnitScale="3x:0,0,0,0,0,0" enableorderby="0" forceraster="0" type="pointCluster" toleranceUnit="MM" tolerance="20">
    <renderer-v2 enableorderby="0" forceraster="0" type="singleSymbol" symbollevels="0">
      <symbols>
        <symbol clip_to_extent="1" name="0" type="marker" alpha="1" force_rhr="0">
          <layer locked="0" pass="0" enabled="1" class="SvgMarker">
            <prop k="angle" v="0"/>
            <prop k="color" v="231,113,72,255"/>
            <prop k="fixedAspectRatio" v="0"/>
            <prop k="horizontal_anchor_point" v="1"/>
            <prop k="name" v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuT1Y5ZTdCZVYzWGZiNTM3NmQ0cldaYUZyQmpGTWNJWVk4QTF4a005aklkNlhOcnBURWttUTlKT1F6MTlUQ2FseFdBa1M4SUJDcllqM2ZnMXJxa3R5elk0SW4ya2FSa201QS9TY1J1bTAwbUpoM0U5S1VOZElKUTZpVkZVeHhoUVpLRUlXWTk3eitvZlo2L24yZWQ4MzcyUzAybTZiZDN2ZlB1c3ZmZmFlNi85VzQrOXovbUltZkhua1lpb1llWjI2QjRBTUhQcnIzTzUydlhRL1drOCtQTFMzdjVQN3RsRTFHNG4wT1VFWE40Mi9IcUF0aEd3aGNCYkdkakNSQnVacVNId0JnSVdBWUNCVXd3NlNVQUw1aE1OOFZFR0hXSGdLSUFYaWVtUHdYd1lUWHRvTWxrK2ZPdmVUeC9QL2F5TnhheDltRGFtcTVtTDFhWnAvRTR0LzJvSllCNG9ZSFdEbWdkcEZ1R1RObXJYT1QxKzUrNXRLOEIxTGZFN2lQbHRBSzVocHUwQUx4SUlBTUJVMnU0cUF3amdjbTh3TVVERUFBZ3lzaFF2VGdFNERPQ2JUUFNOQnZRMW1wdDdkc2ZlVDcxWTYrdFEzOGZHY0l4dWx2dXJXZFJqYVpaRjhLb0k0R3FabmpaNHRmcW1DV0V1dDM5cDkzWTZ5emNTOEZjQnVnR0VLd0RNTTlDSXFEQW9pQmQzY2lUaWlQNlZvNFdJSE1Wdk5lTFlYZ3ZnRElEbndmd01BNy9iTm5OUDdmbmxoMTdJaTZlMm9HYkp5K09UOC84ODB1RENPWjhDdUpiVk1qWlFZd001N2ZwZkxmM0MvSW16RzY5bG1uc1BBejhKOE5WZ2JDQ2dBUkhZaTFzUkVza3JZTmZkb2l5V3JrRDRwcFVVR2VTQ29OWUdvZVF4UUVSOVFXWUdBeTBJSnduNEZvTitHOHhmYW83enN6c1BIRmhlemJqK3Y1TE9td0RPYXA5TmcvZHp5VHQ0eXkyVGt4ZlBYd3VhK3hraXZKZkFWNEpvbm9FR3FBRFJlVTlWdUZ0alBRQ0RXb0JQQWZoRGF2RWtNMzdyMk1LV3IrL2R1L2N2akRDZXN3Q3UxVWFZWnN0TWN4Z2tId0ErYzgrZXpXZFB0WCtEbWQvUHdQVUFiUVRRa0pPRjJVV0RPd1FrS25iZlVDbGY0MWp0QlIrWlMxVjl1bjdwcU82N0MyNEJPc21FWjRudzc5Yk5OVS9ldXZlaGwzSmQ1OVBCK1BOSU13dmd1UnFtWStWblVhazE0WHZvenAzWE5xQ2ZKOUI3QVd3RGVNS01oc1lrVHgyQ2xNRmk3SGtDVHAvMUtudDV0VFpIdndkamN6Q3ZaTFVBbG9ueEVwai9QV1BsMTNiZCs5aXplZUhPWWlQbmRDN2FwM1p2RmpsWkZRS2VpMmMxSzBPWk50dUQrL2J0bTJ3K2UvUW1BdDdQaEhlRHNabUlKbXFDT1M4MElsak9HOElkaHo0c3ZHQUFEV3UwWExJTDZvR0NKOUloWVd4ZjIzVXMxZGhVYTlSZ2NabUJZd1QrTWhpZlhUaHkrcWtQSGp6WUc5OGgyL3BjUU9SODNROENPSlBFenNqNGFsWk9GamFnUDJqNzl1M0RSV2Rmdm9HQTJ3RytrWUROaklKMjU4bjBDc0k3a2xmdXhFdmx3d1NkU1FUR3BLbHpjRHl5U1I0R0ZvWkQ1QURPcGM1dS9sb0dqZ040QmcwZVB6YTM1VC9QWWlmV0JISTFLR2hqTk4ybXI5RUQ1OUVKT1pjMHpWazU4RXU3Ym1MR0xqRGRDR0FUZ01tZ2FWWkpnam9HWWd4bVFzL01xd0ZueVVZbGJ4eG9CZW1RS2tKZnU4K2FsMDNPaEpnQXR5QWNBL0FVTXoyeSs1NzlYNWw5bEZhWHpwY0RPU2lBczhMcHVRWXF4K3JZdjdUbnltYVpkd0g4WGdDWEFEU0ppRFJsVmhCdjFlSnlOVUVhcENzWExGclYzV1ZVQkJybE93b2FzdEZaMi8wOHRmK1E1Mlo2WHVGL21aaU9BUGpTTWpmLy9DUDNQdlR0N3Q3NXMrTm55WitsbmxFRVBCOU1ybGF0RTFGejRCTTdOekUxLzVnSjd5ZkNkZ0R6VldIemhwS29RWis4MU1Eb3VHdW9Gb016KzB4UktNWUtSeDBLcnhaRmtsSEVzeWVWWHMwUDJJbzlKNlNQcWpKLzFLc1BBT2dNQTRjQi91eGtaZVZYUDN6L1k4ZVIwbHJ0dWxsVTlpd2dOZFVHWEkwQW5ZdVJLdmNldVhQWGpTRGNRYUIzZ3JHcE5ua21LRURmaGhxaXMzeDFFRlM0dElJZXJVZW5NV1BUcTNjVG9nNzlldm81b0ppN3A0c29MaGdqaTNtZDQ1N280T3BnZ0x1MlR3RDRHcUY5Y05jOWovNm4vNXRobWg1QXVSVzBhdVJhTGUyWWdEOXg3MGUybm5sbDVYWUczZ2VpU3dtWW5EZnZZdVkwNW14US9ENUFxdGhEbkFCWVBON2VocC9GSFhPZW9tTFh2Z2swTEM5d3g1VTg1YmdsOElzRStoeE5GaDdlc2ZlQkk2K0dRem10N0tBQW5pOG0xcEwzMkYxNzN0V0M5d0w4VGpBMml2Zkl4UmJxSnJPZjV5VmcySU9OL1JqTDY4bVV0L2ZVTmpSN0RnNUIyYWxlNWJQazViQkxIZTFxZlZnZEhjdFlTVXl6TXlpZEE4WUE2QVFZWDJzWWQrKzRkLytYOFg4NXJka0xQaC9CeUU4dmZYakQ4dGwxSHdSd0N6cGJiOUxkeVlOdDlrK2NkOHZyMnBLYU80R3RlYTdRTXVVVG5ZRHBIaTBRYkwycVVDTFdPNWduZGZic09Ha2s5Nk1JS3p1NzBhME9Mc1c4N05YTTRNQnp4VndHc016QVlRWStzM3g2M1JPLytPQ0RwMnJ6ODJxbFFTZGttbUVKWU5WUjlLRXluMTdhYzlueU10OE54bnNZMkVLRXhxdVFEa1dBdUlMckU5aE5sOWhENVp0T3ZFbVRMOHRsSm9qTHdRUkNRTms4K1VFb0RkeDZwbVAvbmtteTJiTWxEQ1RLMGJ2ZXFqK3pNNU1rVFJvTnc4Q2hyTnF2TVdiWWtSSzFZQndqd3BlYXllU3VIWHMvZGZoY0locTFOSXMyWERVQ3JzWVZId3l2M0xIekJxTG1iaUo2SjRBTnF1b2NqYWl3em9aeUtsam9hbnJUT1JpK2JKOE9RYUFzcTJaRHNkbDFuajlIazhzTzUvVnJFZ3FKU3c2bEhoSzd6QnJpVld0SWcxeElUd0w0S29IMjdyejc0YTlNMDJ6QU1BaGwydG9PVE85ZUZzQzF4SFNrOHRyMldhYmRmOGZ1OTRINEV3Q3VJbFc1a3FLVTlMMWJkbVFlMFN3dlZwV2hTeGhKZFlsNDlIWXVZRnV5VmVPeC9LbUVWTEw2SGJJenVRaEdiN2RGNjBiS1QvWkczQzhFSUNhSmp4N1VIUjBSU0FhV0FUeEh6UGZmZHM4am56OGZzZDFwMy9WekxBeXpsdTIwSWNhV2xwWW1tNWVQM1VyZ25ReHNCOUQ0SUt5UFozbDF1L284czZkV1U3YmNLSUZoekp5blpsVlNjV04wdmZwY2FHYjBhcWlOSW1BK3oxUjFQNi9IU3llWUxURU9nL0daeFIrY1BQQ0Jnd2YvWEk1OHJma3d3bXFja0FjKzlySEZoWFduOW9Kd00wRGJpTG5SWVFqb0lWOXJlb1FMRFRsUU1FaXJlN2N4aHRnUGdWVHlrbHBqY0djbmx2YnNFR3RjUEQ2bTZKR1VYU0E3OGkwQ1lXcXg5QkRrOHlyQloxOHNtM2RxM1ZMc2FkV0pjMEphbko4V3dQY0IvcmVUZFdmdnZuWHZwMDlpSkswVmpLb3ErSHh0emVTOC9VdDdOamJMN2YxZy9CMFF0cXBhN1lqVGdDU3g4Nm9RTXVCMUo4UmJiRjNIcUsrQ0hXMDQvVnhtVXNXTFBCMVVtS0QzaW1pS25pMDNjcnk1dW96WWhJUjgzNEwza2s1TDEvSUU5VFFrVlBoeTlVeHJBeEFONE8xckJvQWpZUDdpWEx2eThSMzNmL3JFcXhtNHBySXl6dHY1THArZVdQcm9sclBMWngvZ2JpOTNpMytnaDVMa1plY2lvZ3I2Z0RIaWhOU2NtbXBaWkNHSmVOZ1gyeWlXTlFITEtaaWQxUmI3TlEzWEhwMlZHdXJYbXBFWVlBMy9hejNvVUIvSENQZ2kydmFqTys5NzlCaUFxaE95MXVqSXErS0UrUHhIUDNuYlpwNXJIZ2J3MHdBMjl3U2xLMnhkOWtheXJPaE9sNHhJa21WMTlXWFVLbi9VL25GcXZ5SzRQc0NyemdSY1NFWjVLWk9aZ210MlhxOHZHVDdHbDhmQmRrOHN2M2E0SVRTWDBWWjVSeGdEMVJnK09DMTA3SGhNUTErK0hRUHdKTFh0SGhIQ3NUUUxrR1dhUm02NmdUcG40VHY0VC8vcFJtNmFCOEJzd29lSzRhM0dPRVdQamFpN1QzN0NYYm1jVjhoN3VFRlF3ZEp5MG82WGoyQW41a2toVlhYU0lyTUlramc3VlBKRW9FcGRMQ3JPRXNQV245aHE3cHVHa0tSOGRwUzRTQWk3dGtUSXBKL2NOZXc3cUhUd2RHQ2diQm1HeVNsNUROb000S2Q1cm5udzRhV1BiTUtVTkNZN2NpL1RWSitablNXSkpPY0tQL1hSank2ZW5weTZGOERQZ21pejljNEZYZzNlWEo0TlREYzBjUUIxY3AzVWVTRHBxenBIUzI2eTVKNm5NeGI3Q29tY3pEcEI3VGtmNWI1SGNxS1NKMlZaOHFCNW5TQVpjbnVCN0xiVlRDQkplYkZsRnZJS1BCSlI1Smx0V2ZuREhSUnkzVjh2a1lUTkFQM3MzSEo3L3ovNytNYzM1T0U1MTlSNDlQTXA1eE5STXcwcEQ5NXl5MlRkd3BrbEJyOFBoQzJ1dEtJSjJNU0FEYnBLRzFJM2RZUGpCY3ROUWhZaUluYUNiRWhDN3RDZUNyU09hK0F1cUVWdkFWaTJMUURUdW4wVlpnNE5XOWpIMFNoSFpkV0lrQXJZRzIzM1RaVkFha2l0Q2tVekVTY1pDUm5NY2kzdGVBVnI2MXBORm5JTlNvQWNuUmI3MjR1VDAzY3RMUzFOYWpJemExNU9WUlRyeHFjZnhSWWRQdFRZcVI5YmZ5c0JONE93VmNXQllEYUg5TFFzMjJqeitMb1FFY25wTEM4VVl1UG8xTW0xb2xDNWhnMThNTTFjdTRKQkxIeDVrd0J4QVZnL2ZGbTdScGxvNzBQNTdnTTIwZXkwQVZ3ZGxFcEVUVjd5Q0xySXZEYndXc1g0N0dNL1FZU2ZBTEp0UWhLVHlNOFJzQldFZjdCNTVkaU9XZVRGNXdYT2sreE1sZHBjeVpEQWRqc2MyTWxFMjd3aEs2c1NUdFZBYkJTRHNNNmdOM2dRNmRMN1VnM1pzaGQrdFloWjdRN3RNa2g1QTh6RjY3bzhLZ2hZSmxWTkFrUitwVDZXQ1lmcGQvWm9xYjAzTzg2ck54Ymtka3h5c0VLTFBZZWlqajBmM0FXUm1ZeE8yM0lpV09qRmJsVmJsUjByZ3BMRitmRXNpa291SkplQStjTUg3cnp0WmxUU1dGeXdSdCtOWVRLU1YxT3hwRWZ2MkhORDIrQlhBSDVMRjJTR0hWbEM2WnphS0RDazhubmREVWMva3RlYnM3anRCTVF3VGkvbWwvSzZQdHJpNkczaXc0VS9RcHhOOHFCU2FIVG5rRGVVVXI5dGVMeTZrUFdVNHFXaVBjSlJHc1NBTmx5ZlhKNTNpdEE5RnZwdDR2WkR0OTF6NE9rUmJtZEtNOWwvWTFMOTZhVTlsN1VOM3czd1ZWMTlaZFZuNGJQSzBCY3dUNXRWVXN6cml1ZEZZMXR2M29DT05saUhqRm1jellnM0o4Q0hNK1F6MnBQV0x4WjdUNXFRL2ppZ055ZkJJM2Rxb2doUXoydG10ODFHVU5zeWVNRkVZT0pRVnZ1a1RCUVVsWEZoOW9Gbk5Udk15YkU4UWQ3Q2N3UGdLbEN6ZE9DZWoxMktHZElZQWxadnpBS2p6TngrZXVuREcxYVcyN3NCZmllQUNZbWFsVmxOTWJKU0UwVG91Q0NRRFdXUEViTmNnamFPTUJCUENYYzUvZmU1Rkx2TWEwTGZsTFRIcHVyaVpGTlUyNlExRnVNZXJzOWlMK2F0UUlNOGJVUHE1MDZsa2x0TXhubFh1cE1qY291bThPSHliY0NjY2lkRGVoUitUY09XT1dCUnRRVVdWVWZETUFDNmhpWUEza21uejl4OWNPbVdSVXhKTmZ0UVVvZ0Rqa21xUCtVaW44dG4xMzJRR2U4aFlJT1lyMW1IY0RHMk5VNVZWcFdvSFNJcXgrQ1NldmFUTGVyVU95czlXMDRtdlV3WFFjdElmUXdaMitJelZwd2ZNOHFwSUlLYk1ITHpDNENKZTNtOWNkTjg4MUtsTFY4L2lOeFkyUmlhczFMR1VNV3FtQlNoRDFLK0lKNVRuN0p3RGZIY1FpSUwzWFI1VWFWN3ZpMmJOekR3VTZlVzEzOXdGbThYR0FBMkpCVE0yMjYxNDFZQWNPRE9YZThDNkY4eGNEa0JqWmtWdG9vTnJjeStnc3RUYlJwUWpXMjB1NFpkRldTQzUrdldsU3B0aUZUWUJCaGRNSHFNTDZUNllYWG1jRW8ySW1MYkhTV0xNK0ZSYVVvYjVPNnhGalZrczhkQkhUUkpYMnE4K0tZcG5zS1JJMk95bStQN3BBY1hrTjhnNXNFQllFWkxoT2NKN1MwNzd6N3dWQjZTV1JLaGhHS203ZW41OU5qU3g3ZTJ5NmQrSGNDN0FacUkrdXI2S1FvRGhselNNUUQ1WEowTnRJSmkzRFVhekxONmZCNVRGQTMvRElmYzg1dnluajdMaXVRaDVRL1JUY3VyMVRWTVZ6KytxZ2R6RTkzYThxUmFEd3d1RDBnYXpldmtZa3AwWndtLzBrd1cvdjV0Ky83WmtWbU83L2s4dlJnS3I5VGd0VjArZlR0QU53QTBFZVVwNmt0c3VpNHZDVU5nM3VlNXJndkVPK0N6dkxTcVhaNnZULzcxK3RKclBkTkhTN1dHZUptdTFnY3ZNSDFlZUpESHdGOU5uNWZ5VVlCcVBVMkx0ZVRvZFRJOXpHNWwreWVUQ3M5TTdqVURuVDE0UGErYzJqVXRGbGdEdVNZSGx1WDdVTEQ1d0MvdC91c0FiZ2J6eHNnVWFWKzhzSVNScks2MDhzZVBpS3JkT05Fb0tpT29OclVUa2RRdGF6M2s2aE5VNXBUWGxlcFFrY1JMTEk2STByaUFXRWNIb3dXYjJ1V0VYUXpuL0RqUFZOcUMxZU5kWi9KdFN0TmNiR2JIR3psSHhoeW1qai9uNVlWeFZqZEU2eFZFSTNRT0RMbjdia21GZVpKZThrWXdibjdzamwwM2RUUjFMVHBvQTQ2cFlBK1hqMzlpeDZibHlkd1hBTnhFQmYxOFBLdVRBYmZ1dlBvVFc2YXZkSTFPZXBpRFlWcGtHcDNkMXpXYjFHMVdQYjI4L3JBQlBZcmh2SGluZGdTcVZycFd0a1pibzRpNWRZcmh0RnI2VU1yUEFXTVo0S2VvNWIrNzg3NERneWRuZXFkaHh0UnVka1JXbXNrSHdIUTk5RmtPSDV5TmdVOUJHQUtLUndwREQ3alBRUlR6REVrYnNOWHVwU3lqSFVwSXd3bWYzbFB2bVdPN2lpSUlOSUlPZXMvUmgzL2V3SEI1RkhoMDl3UjF1VnZFN0pEWE5HRkVZNzlnZFl3aC9ZSWlyKzE3UjdvT0pHSzhNSmcxdm4vOXIrNUdhY1dIYzhBVEJxNXZHL3BIdmVrYjJaNmIrVWorUTNmZGZzVWNyL3dIQXE0RXVmTjdEQTF0bE1ZMHIzcm9OT1YxQzhrTGc5M1hJUjl4T0dnR3VocFM5c0pGcU9IWHE1OFhCbUtBVHRHOG1qZFcwNng1bVVMVjJmUzh2bnIrd3hWdWZ1WWo5ejcwbk9TUE9TSTkreThUU2Q0RUszdUlzRDNIb1FUbGdzMURGZjlOYkVNZm5CWnlPRUNyZUtXNlJDb09SMWpCc2lLejdUaVVYSDFlaGVVOHVIdHE5V1RlSkkvclpYME5uSExxN2NaeHlPMFN4dmpySFdicnBib2lkN1ZRenZkcUxJdC9tSmZ0YzlUdUNqV1BPQ2U5WnpkckRzaUJYOXAxRTdwajlmTjJLc1EvRWxrUVRKa21EMEhHS2tmR0RhRTZzbDZmMVdrd09zb3pYR3pNWU15VGxSMXlUSUlUVXRyU1U4NnViV1BGcThJaUFGeitPYjVEbFdJbkpSVkk3cnVwYXNkZlZwSEpkSkJERUtiUzRSd2dpRVZrNVVQL0FiK1ZGNGRiVkZKY1dLRWFFRkFlNWplcnhFNlRFMkVld0hzZnVYUDN1L0xHUmMzY0N4THAvMG5lYi96Y3p3R01uUUF1OFFYWk1TYXh0STdKNHAxUnBPdjR0QldNMGdGNE5SNzdETmtwVU9obkNrK1pDZHJKcm9Xb1pRaFBYbDI0UERVZjRHaDBaOEMrUzE3WHZOdTFVQVJuWFdzcWZhUmQwdm8wL2tobHgwYmJRTGhXbm4wczFlK1M2SGVwdS9SRFBsT2UwcGNiZnFjbDdMYVV2OW8zQXJMclpBNmthYlBRakEwekFHd0ZzR2Zmdm4xVHp4b01obHNrLzd0WGJmdnJZTndFVUhpSTNQZFBvdk0yQmpvcmpqSDJjMVE2REVOUHdKYTE3NHAzT0x4bVVJRkJRTHN1NEl6b2NNQUpLeEIySExRTlJSTjJ5RlQ0OUNqaVZvdUVPVHJIeUN2SXFPSTZGaU9LS1MrdWFxVnpkWEJvbzRLUWpuKzlkdVZRNm1UWVBIbDhLMUt1MXlIazR1cXpuaUJzbmZxNzhoUU5FU1lBMzdUNTdORnFXR2FxRnl4RUIyKzVaUUxRVGlaczV0UkJmK25SUzgrbitSWERuVkRtdkk3T2hFSFJ5L1hNRUswcnBNTW42ckdnbzlUVGhYMVFUb2lrVmE3b3lZYVlraStyWHBhMTJwUHVPbHRlRHAxSTdHSi9uejBwYVY4aW9sa2JRdWRnMVVHTkhYd1FKUE44NkJ4b1BZaklxOXJWOVlHQnZGTHkyV0hsTDNSR3pBalhXK0pjZGpNQnU1YVdsdWJkR014MkdFR0U4dlFsNjk4Tm9uY1JVME42K3JJSW1HcFpzejJVYWMxemc2SDBrdGRIQ2lFMkpXZUNFd1RJM1JPQnpLb2dwenpXeXBpcnc4Kzd0UjNMZG5RY3luV2IvbWwzWVlpWldyOWRmZGFHVkJFeFJuamgwYnpZdlBEY0c0UGVzYlpNSUdvbkl5N0sySG45NWhjRkE1MXN2V3Z6MmFNM2FtN05CdlN4dnNxSmwvY0QyT1FNRHVOVHJXOEtnaG56bEpsS2VNK2pVZmVwNHNEdTlFdFF5M0R4UGVFRFFRVkwxZWFZbEIwS1dRV3VyTFR2ZHpQOFlvb3EwOXFYNlJZblJDUkdkMm04a1o5VXJMVnJhckpyM2psU2ljNWNhd3JxWEp3RzRkOU1CZDg5MWpheTJjRndHaWNXc21aTDM4TEpheDlHUTFHOVdra1J6STVtRXdIL3BNZVVTNzFuTmVWei95ZDNYTXZNN3k0MHlHeXkxN3Rranl6YVRBVXNkQlBDOFh0MkJ0ZzZ4K3FFdUVlTzFPR3c1dlE0ay9jMjFaZ25FMmJuaEFnUDl1eURNN3VET2hNYTE3N2duamdoMGxkUjFjN3pOdFhveGs0TS9hSmVPeFpNZlhzOHpNNlUxQjhjaWVTOCtPU2RwK0JBd1d6b0lTM1VxZnVpYXN2S0RQdjdDWE1TNXdDb1llRGRqOXp4NGV0NmpKWFVlT0VMNkVmTnp6T3dXVHFSQUQwNm1IbDF3eTFhTnhCKzlZUm5PZUNFczB5S0RrekpVM0dXbGUvbHRTeFhRVU1mR0xkNkhWSkVtOENRRVhHZjF2ZER3aDJHZ0thWmZPZ21JS2hvQWxjZWdoWU9KVzJzUEpMSjdrZ2EwSUM2N2xiNUZ4WjZhYlA3aUcxWjRmNDArRXNLZHEwWFlLRmo5MG1PU2lkdE0yanlEekdRcWpzaFR5enR2dVRNTXY0cmdPM1pBR0szQ3JwNU5aVmt6elJJVE0xM3hJVFB3TStWRFJZaURMRVExWjQ1QjBYOXVFSmRMTXpvRnRhdng1Vi82YnBteTliWHJ2cjU1MWRlK1ZGNzZIOTlDMGUrKzBLYkVhaDZwR3hLM3VLR0MvQzZLNjVxdGwzMitsWHpjdXFWazNqaE8zL1FmdmZ3ODIzdGlGWVozY0U4LzYxR0YxTXNOVXczdlgyNUFuQjRmdEw4bFE5VmZ0dHVBblNJNXczRXN5djRhUURiSWk4RmlkZ0pFYm1tUElnNWRkWnB5N2kwUk9RODA3cTJYS2F0TjlJdmV0dDV0Q0oyRkF0aDNmd0NYbi9sbTV2WFhmSG1nY0ViVHNlUC9Xbno4dmUvMXg1NTZVK01kWkVucW15b2hVVnB2QWpkL01KaWMrbnJyMmplOHZiclY4M0xuLzN3Wlp3OGNSemZQZnlkaWtoa1FiUDd5cHEvRG93bmFyWit4RlpxZVFvenJxWkJRZDEydHVYM0VORy95WTdJSkRrZDJMZHZYN09aOGZjQm5zVHpmUDZVcytlVGROVER0Q2l5dXVjenZBcU93MkovUlgyV3p4eFVEVHNocGJtWVY5b29aU2Z6QzVoZlhEUVRBR1lPK0R6Sjc5aGtyRnRZUkRNM1YxaVJ4ZUw3Q3AyM2NQUmRLbk44U04yVGRldXdzSDY5dHBIYnpEeEsvdnlwQmN6TnVUQnNNQ09rRFR0dXIrTWsvUlNEMDB1bFc4d3M3Y2tlZjZuRGthbzJzNDBCRVdhUFJJUzhDa28xRTJiK2gvdjI3ZnUzNkg2Z1cwRXZQSmpPek8ybU0zOTZMWml2QTZoeE1nUmtBOVNucEZyWnFVck9kTTVHcVcwSEFRanZoakYxQzFQTDNuRmhSTWZFT3h6YUxPbW52L1o1VktIdnJ0bWNJWUk1SEVCNTZCN09NWEdEN3h5WWZFbzc4eUxmUlFpSGVJbmpBeDMzcm8zeXZYSlBWNHNETXoyaFJMNE5na1UzSEs4QXV0Tk9iUFZvRzA1ZDZUMktkRUFENXVzdU9uUGttaHpxQzhldXVvem1id0cwc2V2UEVKQjNqZWwvYWRYS2lnaWVaZUV2b0JucG1pMzhkeDBNNFJPSGhyMGRqdVJjcUlCN3BBU2lvR2N2dkpLWEZ3WkpIN253VVN4NzNRa3BQUWpSQXBaeHFCK015TFozelJiUGU3WlNMemsrWllHR28xd3lOcjQ4MjVONFVrZWxhbmhsR203cklWVktaZEpEVWV5dTRjd3Z4a1pDODk3Y3h5Q05qOTUyMndRTmZncVVIMVNxZmVtWWtlZzhuRndFYlBlSjNFQVVPbGs0M1h3NVJCTTBjOWRVUHYxdmNyQkhSYmxPRHNFUTB1VDcrUk9saDRyR0pJdktFREczbytJV1VLS2ZNckpsNUJ2S0MyM0tBcGN4RVNTVWR2MGlWOFRyYUJRQlE5VkJsTlJXbDR5b2xHMThNaDBjbmZNR0doQis1c0NPSFdIN054N0Z1aERYQVh4bFhNVU9DWjFBbVZENmhpWG82K2txd1dTUzFjdWhEcUZ5T05wTFBaa09LRHQ4dW5ubzNPT3M1eUhEMnVmSXQxeHpqY0Z6U0lNOEp3Y09xSThacHp3NXdTTFFnVEF2R1RWeTI1a3U1c3ZJdTgzU3dHKzNYdWxLWERoM2JkZ0xCa3dGdDBRL0JjWWl1ZmZmaFM2NDFXZStBZW1FaEJVcjZsVHpCS0VRYWN1SXlNNEZGWFdMSXFUaG10eHVReGlEVEFkNDJQWUdmczNZOTZxdXF2WmNHeXg5WUlhK1hxcW9zNDQzVTlWU1grYWw5aS9mODd6NWllelVaMFdGU2psdm5xUitkTWhkYUdVU2ZhUTh5RjZaWGQwWThQdmh4b3RPUktXc1g2Y2xlNUhuOEI3UFV6eW5SZmlib1BLTWIwSXgxYkc5eVNtcU1PV3FFOExPVGlTL3p4c0hRUThQaU9CelVWTkZlTlVycE53NTc1aFkyVEVuSkt2Z0drM29uOVFyRG92d29TcU5TamNvNU9zNEpGNXEvK3B0cHlFVjhIRWdvSmdqWmIxNkhxcEt4ams2Q3RDVkhZN29aQlhzRUs4Q3djWS9oN3dpOXcwemZyS25nb21vMmIrMGV6dUFxeVBQdGhMVmlQQU5TTXVoSDdLYWhaeVUyYWdTbENuSTZZcnNjR2hGWG4wN0ZJc09COXY5Q2dMNlR6L0pOZlNKQ0VobUxnamFDZW9IdzU4Y0F1YURxK01JbVBOOWlsdGZaZmtxeXJsMlBmQkp2OWpBUTBCQUhTaFJwVm9WdTZySGpDQ3g0YjJ5clJ6RVVPdFFpU1JkZldEZjdmcE9tWW1vMzBmdTNIVWpnQTF4MlVTeGl1RlhGeUpSQjhGWkNCMU1BQ1FUUm1waWRIMWtweElRbm5hekh3TXNnODdtQVRNUjFxMWJoNTk0dzVYTkJSdkgzeHE3dU9FQ2JOeDAwU0RxMWZJa3pjOHY0TEkzWE5tc201K3YzbDl0V24vQnhtYnp4VDgyMk40WThxMmJYOEMyN1pjM3k4dG5SOXM0ZStZTWpuenZSYno4ZysvcDdvMFhKWHNzd3NySUM0b0VKRVJEcGZpRVVEdGVPMG81KzZtV2w1U0lvbEpvQVNiYTJDNHZ2d3ZBYndCZGdMQXROSDhWL2pVZHZuMzJRbFZVYmxrRmZVL0tNZWE0OEtLczNxSUlXMXBwOVhWbnRjMHZMT0l0MTE3ZlhQSVRyNnRRV21ybTVyRGhnbzF1MENJS0RrMDZNMk5oL1FaYzhkYTM0YklyM3JUbTF4aG5YaGJYeHpmY2ppMEFUek8vdUI3YjMvaG12UFludG8veWN2TEVjZnorVjU5cFgvN0JTK2lQWW54QTFBU0ZlNlE5amtTZFJidk1xZnVSc3Vqd1VWVjI5L3ErdndZUlFLQlR3WS9jdWV1R25nT2tFcXpHaDlQcmpzQkx1eFIwRElaVkYvSXNZcSsvS09UcFJOV1FURmJYOGFacHNQR2l6WGpOVm50S1lHd3kvYjFwRXk1cGJtNE9GMXk0Q1JkY1dFZlpXWVZuMXZaOEdjOG5FV0Z1Ymc3ckw5aUk5V1V4K2Z1K1hMZlRzZ0UyL2tDWUM1YUpNcnUyQXdQdlhtZ0xzUS9zRUxSTVZIZndOd3AyNFFhaURwa1k4a00vVG9SdkVNcUdpSnJINzl5OURjQVY0ZWhRRUhidmpiRy9BVGxhRk93WndXUnZYMWlSVW9kM1FsZ0h3NFJhamNoeVNZZ1NhZ1BmVldQZWJBNHkxeWJMZitZMGk5Q2NENXJhL1pwOUt2biszNml0cURyUm9VVXhZMlQzUmpVQ0pMek1zWHlvbDR2SnhIcmQzVFNObDNyaDhNcFV1NnBTb2lzK2M5ZnViVUE1RDdnQ1hBZGdmbkM0d252dVBONTI2dE03SEFMMTNwYjFlOEdHbk43bWd4bjBZZ2xUTE1OQWlYclVCOTV2WStXUWl3NXJFdGFzbGoxZEZ1S2EwNURybmVaZzVEWnFiV2FoRzJvckw3aWE0K1FkTVprclJUQjFra1JRVFNEakUyTGRqTXByZitYYTdqbTBVd01ma0ppajBhRFFFY0M4dU14OEhWQVFzQ1YrQi9kZVZ1bVJyaEptRVFxUmxlSnh1YjcxNlhWQVl4N0JJdm5pa0dqOUpVOUZkc1NJcjAxZXBwbDJMZC96L1ZySUpKY2ZDcThNdFRHR2NOMDRjYS9zTkw2NlpBZHRMY3NKTVVsb2lOMi9VcWN6c3lTL1BHaFVCRGphL1JxQUpnNWxPNkNMTkVJSG9vYUozZ0dJMExWNGUrSWpEWmFnYmxsVkFsSVYyMDg4VzBFMzZ3Wlg4aUlkUWw2MlNUcTZXU3lxUEhIbnVndHlycW0yR0dwdGo0V0xWdGxpZnlxOW13b1oyMlJyMVZScCtNelhMbGQvODBGZ3p3dDRwQ3N3OVRaQWorVHoxY0hKRVgzbmVkTHpPUEloc1RxL2VwS2RHRUlCY1UreXZ2NjZNaXp0clRGbHRWdXptVmFUeG9SbE5YVk1LN01hUjJtOHJwR0ZTalVSRXVFWmExY0VLeDQvOEZWMHN1RWdNRnc0eWU4dXJ3R0E1dUI5ZXpZQnRMMW83VkNacW5SR3AvZUxsTW9SSlRCRGZqRlNZSjE5bmdGbUp3aUEyZytHZ01WMmM0NEpxZjNBV25kSFBENHhOY1FibTlSWkozcVdzdE9FZEVpdHo1SnFkWHNic0o5c2xsWC9CRElPSDRDWlBiMjI4MTU4YXZFQUFDQUFTVVJCVkFYRnNKbFQ3T1o0Szg5RHlFa0E2UElubGo2NnFUbDlxdDBPOEtLb3o4Q1ZtV1dnaEVpZGpwZnRubUxLTWxRRmN4RlVRVHNTWkN2NlcrZzFIaWhXWG1GY2pHUFdQQXdibHluTnF2TFdXdGNZM1RRN2RJaW5NZjZHK2pNdXhISHZ0bnEwam5vNWc3WDBGNys2SkVvWkYxaXROdFo3REN5ZVhsNjViTUtNSzBSV0pkeWhNVGRsSHM2M3pYWkRFVkNXT0Y1ZDZvTmpXeEJQUkUzbzRwclI4S1hMN2RzMjJadXRlYmcxbFF3QUwvL2dlemp4Wnorc2pSUW1rM1c0YU10V2JOaDRZYldlb2JSV3UyMW90MmJXZHFvb0tmY1FNZEh1K3p1ZUlwY01MYm01ekhaZW1udUZ4RDRpZDJubDhnbVl0Z3VOVG5ORjJxbDJnTXp6UitpSnFBb0VYRkV5b2JMcVRCU04vMnJjdmpjY1k1NW1qYzVQOVBQLzYvZnhuVzkvcy9wbWlJMmJMc0kxMTcrckVRR2NGdVJlUzJBNmwxdTcwMUVSeVBLM3Q4c1VaTW9MSHhCSDErVXpYTUI1ckV3c3l5b1RpUThGT0d5ZkFIaDl5ZXZoV3ZlVUc4UHY0MExjVTVjWDBESTRLcVQzd3hvcFM0akxaN1hiTE50MGZ2VDZxN2cyOFVQeHMwREhqQi8rNlEvYUYvLzQrZFlObWZiam9pMWI4Y2FyZnpSMUcyNDF5RFZtUzQ0RnpGZnZsSVRIdEt3dHdNdFVSWFQ2Z3NWcW80LzNJODZ3ekxzSERYZmZ5citoQWRFMmU3YWhieWN3RTFoK3A0ek15MkY1RlFVVk5zWFpjSytBOEY1dTEwUlpsMjdGZDRQaU9pajFLWDMwdHJOelBBdnExYTdGTVVJWm5IalFZdHhlUEI5ZThSaXZQbTlXRHo2YUdiNGYvUWM1dTIrc2VKSXB0UjdSZks2OHptbVBKUk84N211V0pWc1E2cHd5dGpYZ2Rxc2M4dXpCTmFGekpFQjlKNFF0cXM1RmYzZkhndkpxOGROS2FpOTJqTmludHlTaTdhZmh6NEtLdWVQOTVPc2QzRTBJMytQZ0R3VXh4aEJweUN1ZFZWakhZcFZlQ0djVHhsSld4czNYQjd0SGpwalNDT2hINnFxS1VzcFh0bnJxdlc2YmR1M3hsZ2FRMy9WTmhDcm1JdmtpM1NVdm1RRGFuSHZSamo3TWs1aG4rVXZScVNCQUhqOU9uV090UDZjeFQzSUlQVXhZVUhHYzZsWU5FdDFRcUdmSUhLamxyUWJaVm1jbldraUVVdDRRZlJRWWE0dDdkS0tmTXA5OXVuS24zNXpKenRZR2hDMmd2cjJRVFFpeEgycmVPS1VpSWpCOVRFWGZablROY09pSlFYNVFuLzN1OVBzM2cyUEM3bS9PcWRtWlkyMVU2NThpWEJuWnBxbmFWYWw0SHBnbmd0OVA2QkZ3Nkh6aHkxZVFVY2VZRzdCYVJzYW9FNVF0RFlNMkR0czhEbmUwa1pKWHZrZVZXRlNtckJ5SDFScktjL2FjdjZKS2hxNUxuYVJ4NjJ3MXlKSlZzSjFqN0EvYldvUnRta0NON1NtUDBjL1V0NFJjT2hmbE02Q2lqTEk5ck9NS3NxdkJFTklpdW16dDllUWd6NVdyeS9UMXhvYUErU3pub1hKeEJZb3hKeEZ1ZlJPVWw4K0FtRjFEZVhISU5BZkJJNWRiQkxSRDBXUnpjUjlSMTd6REFXZ2JZdDl5eGNDY3hWNDdsL0RKckcyc3FxMWt4dmdYS2lsQmQwZDFsUDY0bzVWU1FUWmtGT3ROUkRKcXBzeHhObXk4N0pUNjV4c0E4N1ZDVnJuc1dqaGhZTlluMkFTVk9oa3k2ZlpZWXJhZnNoS2RKTGNUSXVXem9Fcm1tSG9jT3lyVnM5K0MxU3hvSkQxMlRWYVFaeXdtT05UbVdEcVhiY0o2aGNtY0lKdExHZDJlc0RqWFZJOVZpUjJwbnFTVXJwaFd5TGlYUDBWMm5HQVM1aWRjQkhEUVV0TGZuYVhTZ1h4Y2lFejRVSUtPYW9PNElLMndxSWdvd2UzUVdoRDhkQU11QkI4NzVUbHVXNXc4ZVFMTFo4NVVleVJwWlhrWlowNmZTaWFBSVVXN3NvS1RQL296L1BEb2tkRjZtcms1TEN4dXdQekN3aUJQQUxDeXNvTFRwMTdCMmRPblJ1dWJOVFZ6YzFoWVdJLzV4ZHJQOVU2M21YczZMOWpaakJpeEhsTDdQUU5LblU4UFpRSXZTZjhEalBudzR2RmU5V0s0YWx0NjFCUmk2NmtLbGx3LytDN1lMR3d5cHRsSHh2eDBXRWR2SjJGNStTeis0QnYvSFQvNDdndGpYVVBidHUyUmwxNGN2SC9xbFpQNHcyOCsyMzcvVHc2UEJxUFhiN3dRYjN6TDIvRGoyOTh3aWxxblh6bUpROC85UHY3azBCK044alZyV3R5d0VaZGY5VmE4N29xcktuZHR5cnR2TnFLeXJ3Qk1HK1ZzT05WU0JibWRyZWhhSGV6SGhJQXpBTkl5RW1RVHBQTlNUUTZSN0d2WEVDdkNLZHdXbFMzMmhOQjBRdWlacmdpWHYrWW8vdHJocEZwWGxsZnd2NS8vZy9ZNzMvNW15MXBRZVBHVkdWOSsrQ1NkUFhNYUx4ejZvNVlPL1ZIWktkSGdrZTg2THJwNEs3YSs5dExteDdlL29SbmJFVGw3NWpTK2UvaFErei8vKzMvVG5SZms1blBTOGJYSXFKVGI5SnJYTkJlOTV1SkdCRENmaU83WmdOSlEvQWo5TnZUeUZCa0phNEpkbytIaHNvWnNaeHAwQWhncUZkZzBWQ3MySGJzZEVZWmp0YWphWWhUYUpCUmw2NEtkZW13TGhxNSt2YXIxUWhwKzdwQ2JPSzFyNlV1ME1WcHV6WTUwOXFRM090VVRwN1JoVldaWEJyVW5taHpXWFMvTjZpRElXTlRKblNEcEM4M0wyRU5zc3I3MkdHMjdGdWVzS0tET3lna2pBaStTMlNiMzYxbnoyY3VRRjFaM2JjYjJtWVpWQUtONWFzOFB5TE1WT25Jd3Q4aXRGdWIrR1ZLbmVvV08yTE0yTkpCbVB4aFovZWhSelFaVVo0QXNKT1JmYjVQM1NjMGZpYmFMbE5DemJiMytESmtSSTBrZGhHZ01XVlhlUEhITGtxTDVNNTUwR2NNL1VLOTMzWTRTTy9FQ2txeTZ4U0tmK3NPSVhpekpiNldTZjJaSjIvRHpyZGZNWnhvQ256Q3N6MnRiT2w0ZVJKRkJJR2pVWC9qUkFYWGJVWjJjdW1zWkZIWm9pZ2pZdm0wdDd1WWhUM2wvNjZzVHdKNW9PRlBCWDdCbndBMFQrNEkwSkhMRGdqQnM0OWFlcjZGb3lwRG9oVGhsQ05NNDFsWlk4cEJ3aFNwRkp6QzlNNkR3QzFKYWMvM1VtSitGVmF4ZzRicDNkalF2YWswbkdnS09hbW1LbFFsZkxPcENKOGwxa0NTblU1RnlCQWVhMTlWQXVXSnl3Nm1RSElWWDFDOTdQbklYWEdKbXRBVUJsVXVwaHczUkZTSFlIVEJ5WUp2Yk1GWFR3NjNCTkJwVTdyVlJxeWtlZmhwTHcyMzFsMHV2WGZaMzg2WGZ2cE9SeWRyTG9TdUZ3bFhPRlJxNkFUL1NNTk1SRlN5L2tyeUNsMkh3eHBMc2hDaTlESmhLbHFrN2h1NFIyK29UWkluYlVYbXQrRW1ZWm5jUkVkcTJqZjNRSmVDZVEzWUxSUHBZYTdmU1dMUTVLeVJyT3lsanFyM1BlVi9sVDFQQVZ1c0lRa3ROS2pTYy9xRmJ0S1piKzU4ZXI3eTlYVEZqckVVUlh3WkFSeWNNSEZVZ3B0UTU1N2wyUitNajg0b29CRlBSTExGQ09FKzNIS3QzdnpPc25yVkhRdVZCVUpHVmp5cC9sZFEwRFM2NitNZncybE92TkVQRVJBMmFwc0h4bC84VUovN3NlQ3NENUgzTnBwbkR3dnIxbUt3YmZ6Zk14azBYTmV2V3pmdjNMSWI3ZG5TK3dmemlZbmZDbWhrdHQ5MWlXV09hbjE4QU5YSHg5bFBGcEZJVW94QU0wREZXQ2tEZTMrTmxRS29ocCtuMGFPaGdGTUJtV0VXem96c3lJZUFsUU9SSWExSzFLSDlOcmJzalRuRHFWbmdqQ2lhQUNaUFFzZE82NVBtTGwrd3JsWkZLNDVrNnpkeTkwK1V0YjcrK3VmeXF0dzRpQURXRXBtbndqYTgrM1Q3L1A3K0pkc1Y0RWpGY1dMOEJiM3pyMjVwTExoMS8vOHo4NG1KejhTWGJCbm1TejRYMTYvSDZONzIxdVhEVFpqQ0F0bDFCdTNJT0FyaXcwUHpZdHN1cU96WEtSeHFCL0lnRE9hMGtZMHR4VnNOZm5YVUZoNFIzS1YvSSs5UE1ZdjU4ZjBLTVA1YlQ5a3JydjNqdlNSb3FBdUVCVmxhQUdJVytMaTVsOUNGMHgweFBwaGpWMThlSzhUeVdpQWp6OHd2WTlyclhEeUtSVDk5NTdsczJnU1RxdnZzK3Y3Q0kxNzN4emMyYnJ1bi95TS9RNmVXeEkxTUw1UVZEMjkvNDVqVzk3R2phcWV0cWhFREt3a3laT29XL3JBMThMak5rRU1YN2NwbzZQMk1rend3ejR6c05BNGVrSFRPSnpONFR1MG1FaDhoSmg3YzlnYW9OQitSVkpjWFpiQzhPbGtkUXlYNE1aam5pVk11clBaams3OWx3eG9PeFEybXRlN2UxOXNkNFgydjlycVd1ckxzZW93dEM0SnpGdm1VNnBPNGxlY3lVc1MrQzJhRlIrZDRjYWhoOHlJNENDQ1M3cXRSZXN6cXNTWGt2aWZETDJrYmdpMlZxeTBBWHU5QnRUU2pieVV1eTc1VnVhdDVVSTMrQWhtMFJ5Tmpub1IwNmlid2E0WmwyZW1ic05QUVFUYjRYN3V1bHFPZnVtczBWQXlvQ1k1TXNuM1Y3enBhcEY5d3hSSFRYcFEwQ1FEeDNxR0Z1RG9Qb0ZPQ091N3RmUnBRalN6NDJGTDNXN3JpKy9FNkZIRVlvRUZ2WXRDQXlhUjF1dEh5UVZWWmMrZlJlZFFoNHd1WGxTSC9sZSszY25ZOFhFcUR2UzZrTyswZ2IwMDdIRE4yZlZrZStYenVSWTA1T3NMQThGODZpa3UyRnpzNVJVYXl0emFBTkRFTk5sNVYvckJyVmxSMVBSVjVQemkvUWk4M3UreDQrVHVEREFOd0RLQ2h5VVJnbWYrS2xRS3FzdXRKNHowd29nbG5rMHQyalVyZE5mUWhvOGxCZWY2U0drR1ZXUk9SU1p4QkM5QVZ0V21obDZQNWFqMlBOY2had1RMaXBQeG5CQVJBa29pcTlsSXI3UmFvbGZSd1ZESkJ0bDBaeEhVb2FSeno4d2IwUEhwZmZiUGltbGhTaGNramsxbDNzaG9SWktJWUR3bFlTaVhZV3VKWTYvV0VFQkNFWVo5OVNGbzdhcE5TRTBvN0R0enF3Y1hCaW1pYllXVENHYk01ZVgyYW9yMGEzR3VFR1RGenNyMVlVY0U3Rkt2T2xjVkl1V3M2cnNBaGEvY2FsUHE5Q0FUQjlFNUMzNUJOOVF6ZWFJMXpwWDFQekpVOVZhcFo2ajhXc05EcGdUaFdQaldIa2dxcjVubzk4YlN3TUlBVXowSnJCYXB5TzhEU0QycDNGSkppV1AwUTMrMEZYd3kwQXhTU1NhSVFycS9XNHVLelBWc1BZcVZ4WnBLSWRPOFlzQXRKbjNwd1FzYWU3ci84REtHL0hha0JmSTZDdENoSGlTMmZncEpsTGFDWFlvT0hYTkl1TkVPb1V3NURoYm1iL0puYUdNQ29ZUHZVTWNwZHZWZHRSYzIrS2p0V1o2Nmg5ejdROWIzc0svYlMrZU1RZks1ZlJSazcvT1B4dzJzY0RDWVY3MFNueDlhYWtRc1lWR2pmdmFvdHlDL0N6Z1B4TXc5emNzd0JPQlZYcjVhVHNZSWlVTTRzZDUvWXI5UTJhd3BCNzdCRUVzMVRGR3lPcnU2aCtjb05sUW12SHNIby9SSjI3V2pISWgySnpvaGE4SFZTNHFveHZyS09HUkRuUDh5SFhZNDdHOEE1S0hVM0hVTkJVWkxIUjFKNW1xT2Z2RnJVQWlaVDFkcC92bXowMkVScnozRUZFMlJhMm4zY1Y5MU56a3prVHdCMTdQL1Vpd00vYlc2aWdOcUI0VGtTeVdsZ1IyUmhFNTFRd20xSHFNVTNya3p1MlZXZXJ0TE1YU1YvVDRKZ3VLMEYrSzA3N3RvcndSUzF2NjQvL1JIUGwxVzl2M25UTmRjMmJycm11ZWZQYi9uTHo1cmRmMzd6NTdYKzVlZVBWMXphYlhyT2xXbi9OSmh4eVZvYjRtcGFtZWRaWjRQTWVkWWNSZG9wSjd0aDVUQXMvOWVLM1pQTWtZbWNITVZobFF3UzgreGJiVjlxVVgzS2UzN0h2NGU4RDVTMzVoZmIzQUZ3RDFmbXc5N3lvMGF1UXByRWxlMyswU2JvZlJGbGRBY2dwTXBRM2pQd3FOTTFPNFFkZnBQNmhOR2FvUy81VmIzc0hycno2N1UzVGRKc1R6ZHdjNHZYYzFEcnpEc2dzN1VxNWFYMFlhemZYMWJzUE44Z2hQMTZab0dSaUR5NlJMcmJuVENueVphVjlDdlVWMHFkWmZwMlZpQm9pYWhqNFhRYmF3SVNnWUZreEJiYTBYdG5YOVoyV3h6R2xNYk1OakErL09nUVlsWUlxSjlUSXI4V1lhcWd5cE81OEdTTEM0dm9OdU9EQ1Rmb1RDQXVMNjdGdWZnSHI1cnNmaUY1dGZMRkdNNVNtOFZpcmMwaTRWN1ZMd3ZsTFgvZzhpWUdML1l2dHhUd0puK2tHaGRhbmFOd1MwZTlLYWYydHVMYVpld3FFa3hrMm9WT2ZKRm11UXQ4N0k4N2VaeU5OZDNVSWZRZm5Gb1p4RjRZTWZuaVlLMjBOcDNFRDNXaFdFemM4SDJrV3ZvYktBS3NVdEg1TnBSS2Y1UVhMMUtoaFkwSzUwYnBGSlpzMk1EUE90Yzg0MFV3bVQwdEovYUhxUGIvODBBc0VmRXNaTTN1MUV5cVdTbHpNejF5UThyOGUzT3E2NHoxaVFjZU91N2lhVlVVNzE3N1FrN3RmRy82aDBFZzI0bXRJTmFzYW5GVmdadDNQWFkwZ1RZc25Wdk1xT1c3RFVRcENwdFI3eEQzL1FoMFlCeGorSHFNNHBRVUpuVktNczZiOStOYk92Wjk2b2NTZjdjY0t1MHJwdHhuVWluR3BHbGMxcjBkREg4U1UvSGh5dXJ1V2t4Qm1GeERuZ2UzaHFnNmFSOEJhR0dSb1IyTE1LWmhtcTlYb2N4cFMvZWM3VFVQQWFoNGladVZqV04zMGRKRUttMXVQZmxZUHdnTG5NaGNHREhBeUl2RTZiMks1bmdCQUMrQzNxZmFEMWFXM1h3TDRsTDQ2UVplSUd3Z0dSTXhKZjhiZGRaWmh4OXQ5SEV6b0NwTlJlRGdNakRiakJxUnZBQXpiVWRrcGlGMmNqbnF6eFB1MFh6TjZ2ck5zNTUxUG9lNk5IYnN4MWtaN0Y4RWNNclhwN2xOQnRtcTN5ZEdMRFBsMitWVEw3WmVZdVZVbnhCZHZqdk96QVA0dzFrY0lKMHlOaTNCTFZsMXc2Y21FcWdmRVR0MkdmY2VLcWVMWnFlVVBoU1NtMlhtekJIV0g3bzA1RWJNR25qVktzSXJ3emJRUVU3blRyMFJESzI0TVZWMDVVMG9jVHFXR3kvTjBxUjFteEVubWZsbWk1NDdQWC96MUhnSXljMHRFemM0REI1YXB4Wk53UDZrdVhvM1phMWE1cU9Bc1pMWmlLQWlrTGd5SWNFWnBHeHhHcW0wVFdwb2w3Rkd6djNMZUxEUzFOb2FFVS83bFVFMytIQXRVRC9FekMyK0FHK09CdTE2M3NBT0VIZytoVENXMzRobWJnVVlBYzh2ZzM5cTdkKyt5NDc5UlNSUklaTVp2QVRpaG1wN0tvNWRzUHBJNUZlUjBmckVDMmJvYzNYQ3hJYXkrZnV5S3k4TkxYQVNhNDcyYWViMEdqM0lXMUJrcm45TTBSMkhXV0YvdGN5MDhlWHM2TFA2a1htTllpeUtvTWNYNVk1djNBSHhhMnVlSmlSYlUvd25tOWtrcXYwOHRuM0lhUmgyUll3dGJ2ZzZpWjFIMmh1VnNIeEhadFRvaHJtbERYS2VPUFhQZFdwQkhQSWxjUjlnc2p1dzVjZW1BN01tTXBUSDdMZ3Y4TERzWHVkd3NnclFXbTIwTUlkZVNQQ0RJdDg2czl6b3lqNllzZk5OS1lmNklZUzhuOElaVUtldnNTVDNEYVdRdEFjOWU5dHozdnE1VVlnTWE4blZTdVcvZnZyWWgvRHNDTGF2cUxzaG1rdVY1alNnbEQzVDQxY1N1a0Jpd3JHam5PK0tGMGh1K3RTamtjSm8xSERJTC9hdmgyZVkyejBuWVppNXJUa1c4MHBxUWNXejhQdUk5blhBUkVsY0wwWEpEemErLzd3dGZVTUdUcEZ0eEhoclh6ZUhKTTJkeEI0RHQ0QUVyUWlYQ3BKMDVtV25rQnBxRVVZdVE2NTZITTVEMVJMWFBFNUx5dWJLeWdpTXYvVWtMOEhuNU5mTy9LT25rajA3Z3hQRmpjTXU1bjhJYzFUUUZ3UjhXRGdXSEJKREZlVkdkbGROTGN4UDZrbGU5K2dtSGdwSUpBQWZ1MlBVd0NCOEUwY1FMVmd3MHcrQldlU3hzaUZvcGZKc1FXV1hxNExpK1N2M20vUFE3MmpRTk5teThFSlBKdXZxQS9IK2FWdHJ1SFlSblhubEZWNnphNi8yZk5pM0o1VmRKS2dJVmZqcTlxMyt3ZHVabEFKL2VmZStCajJiMEE0QUpSNDlYSlpPeDhtdkEzTTBFYktXQ1pGUzhXaEVibFM5MmFwYmRTUmUyUG9tdFlQU2lQaEpzRjRLdVBKYzYvQUF5Mm5ZRko0NzduOWh5OWlWa0ZTUFZYVDYxYlpGbjE0a2ViWCtnSTh3bnBQQlFIZWhScVJ0SlhjUnhzT0N4NVplbE9iVU9mM0NqT3NhZVoya2xheTh0UmVrNzFGSWlYOVlQZzZ1WmdHTm8rZGRxSUFlNE9LRHVoaFFoM0hYdlk4OFM4R1ZZd2VMZGVQMWVOdDlVQzdOR3k0VURqNXdRQVNiYkhkRVhGVUhPaTBWOWJxZUpiQ0Q5a1hBZjVJYXM5alRJN011U0hXendKMGJjeWNBeWdHNVBHMlVqM2JPUjg3dEJLbnc0ZTRsa1pOd01GVDRzY2FMeEJ6SXNQeHdhRGZ3NWZvU0NJdis1YjEwbGRkdlh4VHVpclJwYU1tcWllRk43M0tuWTM3bnR2Z1BCK1JqZUNjbEV6SjhGY0F3Y24zT2d3bnc4dTFjNjdjNmZzU0lZUndiWkRxV0tkeVo5c05pZ3RGWFVjYkF6cE9zSWNVYWROSEl5NG1LU2VSQTlYWDF3WFo2ZnpJck1SV0s3ck5VZmVCM2lMWDNubEdOaUdtbGlQOUo5dHJ4ZWZXNVF3MzU4TlpEUDd0UFZwMzgwL3hpNC9hd1hPR3ZQN1FXWEJvSmtNbk83ZU9UMFUyQitHdDBlbnFKKytDdHF6RFBKMWoxRlBzZS94SWx5b0xDL09sVk1uVUNLa01sQlZTdXJhb3ZsV0lSWFpYSDRvZ0xLS1UrUHorZEFFNjg1NVVla3lHWHI5K3E4Um1Ic3Q1MkZyMWN2QXhRY1FQbVQydTNsaVNyUE9aSEVxK0FDU2kyQXB4ZCtjUG9yWHYwQ25XejF0dUs4YmhiQ1d3NGViQUU4Q3VCb1o5aTUwODUrVklvdFFpVjRyT3FNSWtJVm1TcDV1WUt3bHNxVjBGVUV1NHk0ajBhcXlpRGJveGFsNDJWZHpRbklGSmxnZEtEZDkrVnNLdnVpRy9mRDYyWDlnUG42ODcwd0FtRngrUlJ4cnJQUEMyMUFLcWYreGNaTjI2cDFzUitDZFRNR0FsMlBuQUhDVVlBZitjREJnOHRBbEMrZmVqc2gyVTMrOFQ5NDZjc01QQVhHTWhkQjY4RExnVG14N29Db1dpMDBHdG52aXFhQjkrcTJsQlkwSlpzdUhhUVFTSzUxMmgyL2tpRXJLNXJTV0htcktLcWNQdUpZZlgybEtIWEEzUjlUcFo0M0VkMGM2RElnc1ZCeUZQZEVud1BzdGZyWTgyYkxibHB3djdiUXRBcTU1RjdXTW9DblhsNTM4VmNLVDBINHFCeUNCdHlKYUt2TWhBOEEzdmVGTDRCQmp4THdmVDk1Ukg3Z1hPZDZQMmZwcm91NzFObVQ3cFk2RXU2TW5uYktQTzlzTkxNWFdCRFN1THQ2MHE1SGdVOEo5WGpNN1YvRjczMnhTeE16a09wdGtQSllRNko4MHNqeXZDRDBTMUl1Ri9SektWLzUwWi9BSC9zYUt0aE9ka2NjU2xmZkVVTHppT3o3WnVIcnFlQ2EvZWVKZDkrei95c2dmQkZFWjZKWFpKNldJWXl0d0U3SUhJRTRHOVFmV01IQVBDeWR1bVZGTS8ra1Z0bmt0dkZ3dWo2ckxmTGZ5ZWRGOFRGc2NHclpjWnRSbWF0NThTby9iV2ZMMWh0a1BrWGFpbksyNzVTcHJWMlBwTGxYc2MyK2tnOWhLWVl1MXI1UVJpNFpPTVBBdjk5NTk4TlBJNldhbVZmVnk3WFVUdkFJbHpkcGlhMVUrdC9seERrcmVTejgyd05GSWh6ZWJrRS9rSm1GUnpMOUVhNTB0NmNLdkRJSzlidFppQUl2bG1uTTc2dGZVNHVVeXZveDhmVjVwUjlycnFWdW90V01jSHpibUdYTzRuTnBNYS9QUmIzTkdrK0VvSzdjMkdVTldNVCtVRHVoaHdlYlNhbnFCZWVZSUFEczNydi9lVEQvQ3dESHhjNWpFVVRBeFlKWVZTWVZ4c1BUYkNWSXFwdmpXUjBEV2xhRmg2TFJidXM1cnQyK1hSaHRRcUUzdUs0cHZyU09PTGJSNVZVd0tjeUY2Q2VPTkxtTXl4aFQ0aldCTmNIMERjZGFhaXE4Mm42MTliemdTb3U5UVE0emNCeUV6MzVrM3lQUFoxbnl2b1ZId2hDZjhRY1RmSjVVTWxsWitWV0FmZytNNVk0WEh5ZXlUN1dzV0p3VFVzYVppMENWNTA2UTdUdGl0eGJkK2kwUVJneTE2eUs5aVFqSlRvQ3pyZUt2QTZIY0l5L1JNVVFobnlYY282ZkVtSjM4bVdyVmgrWmRmZUoxOVJhWG56ZWw0MENsd1hOR256RTNMajRJVHh4dUY1SHNXNmdHQ0U1NUR5d1d6ZU5zckJpbWRzNG1sc0g0NnZMYzVGK0xqWmNkV3RlV3lsUnZKOFE3SlJrSlAzei9ZOGNiNEFFQ1hvVFlZMlhRZGV2TGhXcGtiQ1BUME44S01SbGlmVFZhbUJpUEpGUTZUSEdRRE1TYzJNcStrZ2hGSGxudVR1SW9XSlYvdG4yWEpvSWNPMVJUeHJKQS9CT0JNaDc5L2x0ZHJvdHVvTG9JZzZ3NHFDQW5tQTFtQlFzVDJaWkJmSmdJWUgwd1hlc3BZSUpjdE15SExzUXdPYkppdTkwdkFsNEVjTy90ZXo5MXJDUHZPN2ExVUV5QVJ5RWVrbG9BMkhuUC9pOFQ0Zk1BVG1pQVdHU0g0ZFNUZS9UU0xVMVJueDVGYkNpU3ZhRmphSUtvc3VXRnhXc0J3dzRJU3RzZWNheFBEOCs2c2x4NDl1L0UxbGtJZERBVWgvU3hMd0FLWUlFL1RvREhvUUM1RGdpb2VrRDBMQ2szQlBpOTY3Qkl3MWg3dTdUa2hQRU8wT3pnV3Bnb245b1dBYUFUUlBqY3JudjJQeFZxcXNoUC9sNlZTazlRM1VhWkxEek13RE1NTEdmVnFTZGVpcjdzR2VCNjBFQTZabUdXRUNySmVxdmt4Y0VpeXlQTDA4aWVtQzBWd1phREZRRENubXBBeGNSTXQyMWRlQzU5TlJra1hSeTk4YXJVRitoY1ZLRC93OC9zdXlZZFNtWkFQRkhrT0RabG9wUnU0V2xQTXVxblRuRGwybDZic1F6d013dnI2ZUdoU01wWVhqQU1rVkxOYlNhaVpzZmVCNDRBdUJ2QUlTWnFoZW1lOHZLTFNQTkk2b1pzOGNvQ3RpQXFoeXAwQU5rUHBxQ2ZDM0E0dEpBRC9BYklob3djcHNUeFZ6T0FUQmtxajVuVUJNU3AwWExIQXljNzZwalgwOGhXZHpwZDA0L2VVUnF4VWh1YndGbi9XT3VNbkhyMWEvRlJ4MFFweXM0Y0lLQjdrOFloWWw3NndDY2ZQcHI0Ym9hK1YwL0RqS0dndjliVE1uZnZmNW9adndMbW8vb01RRUVmVXdQeTFKY1RHQ3FDVk9DaVE1Rzg5a3psS3FyNmdmT3hTQ2ZnN213c2ZJelFRNU5YUDlhT3F3elIxTzdNVDQ1MFZqTFFlbTBWbjJlcDVJWDljcCtrZ2xxWW85OCtpcm5RY3l6eXdxK3EydHdEVWNtbFBXZWZkSEpISm51ZDFCOWwwR2QyM25QZ21ZN2VuSXNzTHpVZ0Exd2dXanMySXJtNTh1WFQ2NTRnd244azRLU012c2NMRVo2ZUp5WWFrYVdNdSt2dEhFb0NZb3pFRnkzS3dISE1JVG13UUlJSXJMRkpOOElDR0tFdUdXRnl1andFd3ZWdjBrK3Fwbk5kTVVsZENXc0Nta2VVOHQ1K3FzK3QwcDRwNDRqUzhEaitQSlVKWHo3RVNxNG9FMDRTNGNuMkpEMlJReTJWeHEzWkxKRFRucCtZbGg2LzV4Y3ZXVDU5OXRjQXZKdEFFMytTMlJ5UTdvdW9YVm1kMFdiS1V5RjVxT1JYdTZaMHRacUc2eHZLbTRXWFdmTnFkWTZYclhLZzQrWHVEbmUyMTBhdHZEOW0xMi9INTRYNVd3YncxUHlrK1lVUDdYM29SY0NFYjB3SU00QUJBK2NCYTRXRzBvNjcvdmtSYm5tSkdOOEcwSWJ6ZVFSRkt0M0JDRHJIbzRtSC9aZ1hxVkdoSzdTVitKWVFXMzFVb1NGSEU5czFEa3RaUldpWGwvbnc5YkhQOTh6WExENmpxOTdKd21lc2p5U0hZRlRMTTBFT213ckthczdrRnN6ZjVuYmxyZy90ZmVqRkhGN0oyN281WlcxYkpSd3lHSWZTN25zUFBFTkVEekQ0RUFOdE5veFVpNVVPbWRtY0I5dWRXa2tUeHlGUHRhcUw4SGdSTUNORmlPMEpQaEVwY29MUUxma3NkcWIyNUFBdHUvNUV3WXRpN2VrcWl5S2RXTWx4T3JzeVV5Q2tKSEUxejF1NFlwWlR6YjdleEUrbEh1MlhzNTJMTEJ3R2NQK2UreDc3YWo1WVVJdjExZFR6NElub0drVG1Ba08wTysvZS8za21lcFFZTDhrQTFRREpvdWQrUlZlR1JXZFVEcVZ5Q2xIWUJMT2NzdW03Qks1MmhqOHFYNnR2REVnQ2Ryb0psY1hFNFh0R3hYNGJlZEZwYWZjRFBhVEdhWktNWkdkV2svZDRQUUk0SG0zdEJvTlQrZk0rWFBueUVoTTl2dnZlQTc5Wnl2VU9zZFFPbjg2MEV6TGVsMkVVOUNHY0g4Njk1Z2tDZnc3QUVmRmdBVy9vc282bnlaNTMreDBLMlJKVXVqQ3RPam9TejZzZEw3S1QySFp5aDdXSzdNaVlkVUF1eCs0cUhzWWdudGJ2djV0clJZbXVsdHoybzJnQWg4eEIxS1N2SWVUang3Y3M1QXFQZ0JkMHYxeGpLQ3MwWlZycENJRFAvWER5bXNlOG9BMDVzTFh6cFo1T056enlTcHJGa3hsTEI1ZHVXVHgxWnZFQkVHNEcwUlp6TkZtRmlVdm4razZJbjdpaFBMdEQrbW5DS0tCaFEwcXAxUC9EZVFxdU5icGFtdDZHbjROa1hUcHlQZ2JnODVOMXl4Ky9kZS9qSnpOSjFvWkRNalM0RlJmYU93ZmhBNEFQN1AyVlU0c3I2KzhBNkl0Z1BpYjJrSGJORFdCRVNFTXhXeE8xUENudjYvQjFwN3dwbXNxWDRKekhCVk5VRFpJUmplVXhMUGFaVktpM1ZPMzM4UHE4Sk5nYnB0TTd1YU0ycGtONUZtb3AxMGpqM09uZVl3Qyt1RzdsekNleThIbkJXNnZjVkczQUlTOW1ta2NzNlpZSEhqaEo3Y3JIbWZBa0NNZjh3WU5rbGNXNFhMbGQzYzRDWkVCZ3FwWGRpTlhRd090NnQ3NXJCeFI2cmNtQmhXNzdVQjJDaWxrV3RXelhBWklmZTliSFZFM0JhMWYxRmNaZWpicUJTUDNxZTdHZVJtcnhlYW05YkhJRTI1QmRubzdyTVlDZlJNc2YvZEQ5bnpuUjNSOTNLb2JTVEU3SWF2VDZXR1BNM082OHZSRW50QUFBQ1FOSlJFRlU3OUZqN1dSdUY0RGZZT0NvM1NNWFR5ckJZZzBhc2hNWUxXQUQ1RGRmYlh2RXQydWZRYkJ0Z2t4M2N4RUFhenNJT1h1N3pxTnE1UUMrdHVVK3RaeWJZRjJISFgvZXFyVWpaaklPanQvQ0U0Znh5RHdBM1RINzJKNVBVYmdTbnZyZGorN1IybU5NK0NKYTdMbnR2Z1BIaG5ZNDhuVk56V2JocThZQmF6c2V2c0ZhbWlhSWUvWStkSnduemNjSitEeVlqL1FHQkRJZ01qclprSzg4a09RRWxOMGZYN1U2SEU2bmlDOE5jczh1aXdvTUprSlgwTzhoUjFYbUhyUlNjSE44YXovSTJpWi9UNjZ0ZnZtQm5rNk8vYjRSZVUyTnVERlJRY3l3TXN3L2ovUnVESlFGenFXT0FQak5kdExjTHNJM3ExQmw4Qm9UdnE1UFlWOTEySmljRnVFZVkvRHhwUTl2YU05TzdtTFEzMk5nRzhDTmVYRmhWSjBENGZQYzQ2Q2plV3N2Mitka0tFOENKUDVPTFcvVytnYnllcVlJdzE0Y05OYkdyUHpaMFN5WFdqQy94SXpQblQwenYvU0xEejU0Q3BVMEZLNnIwUTJGOUtwYmNiVWc0aXpHNVRRQkJJQXZ2Tzk5elhldnV2UldBRHNCdnB5Sm1qQ1dFc3ZqVGgxMGFrbFd0YWlIeXJhUjNZV3BzQ3pjdFNsT0FsdFFLTlRGN0g1a1o3d3U2NFBSV0I5eW5sUlJzOWQ4M2ZGK1gyQUMweldHVkx0NGg4UG5TZE1FYmtGMEdNRGppOTg3K2RqWTg3em5NMDhGY0szQ04ydVMrZzdjZWR2TkRQbzRpTjRDWUtMemtGWjdHRmo1eXRDVHpDcW9wYXlhTjNvRzBRU3JreVY1VmtXd0lFOW5GRENsVXlUS1orajZ5WUxSRktyTWJmcTJ2WkQyNmJ6b1FRV25uaVNXTUlhdkZienM1bjhad0xjQjNMLzczZ08vZWI1QXgrZVh0bnJhZEtxRDRRUE4vblBzMU14WTNtMzNIUGc4YzNzTEEwOEI2Tng2bFI0dEdjYXBrMFV1MloxOVJjNG1wRkFzMnBGU0tjbFJxL0NBZHVBMmZhT1VUZnBmelEwUW9hbHQ2UFZEMGtiVEFYeTVYMzdZTHl0TFBkVlhFVDV2dmZtVExQVitpVjFxU0VoRUowSDBOSWcrWEJPKzJweVBCWmVuK1JJOXVhbHQ2VXcxSEtkczJjMFNoRHh3ejhjdXBkTm43bWJ3VHpHd0JTaWRjOXRxd2Q3T3huZjVSYVljaFBiSnF6dDJGUTIrS3EvZjJPRGRQR3BUbFBQVXVyTXlIbExLVmsyK203NDdJOUtqdWF1c0JYQ1VnQ2ViaFhWMzdianp3WmVHdEdCTkhyTEFEWjJFbWVyQVlPRFo0RmthbjdXUm9YUnc2WmJGVXl1TEgyU21XOEI4T1JGTjZwWmN6Y1JmZXhxekNHZDNFOWJTeXF2VnhxeGwxUjVaWnNJaEJuMkdmOVE4c2VlaGg4NE16YTFQdFZoZUZzYlZSRTJZMHh0U2E4VFRoQzh6TnBZM3hOVCtPMis3QWFDN0NMZ0I0STA2cUdMNEJYMWMrMXJ6Zk9QRWpPZVZiMnlxT2s3b21JTXpkRDBnNWh3UHVTTFptWkpmNDJXOExKeDgxZW9yUzVqb0JNRFBFUFBTem5zT1BMTWFVTW41UStHNkdrb090VUhGT0o5WmdtZmQ0MXN0emNINzltdzUvUXJmem95YkdiZ1U0SW5hZVY1M2tCdFc5blloMGdSRUo4UW5jMHk1YU80K0dnMWg3aGpXRE4yckxSTGZ5dlJrNm5VMnNlL3JEd0RMQkx4SXdPY1cxdFBESC9qa3cwZG5CWlZadEdDbXkzbEQ5d1lQSTV3UEwzZ21OenkxdC8vTzNUY1MrQTRBN3dTd1NaNEY3dUZWRVRJNTE1ZVBIQWtSdSt5NjEydDBPY1FUQk5FOTJlNHhWREkxVDdNR2hGanNOL1ZvUjBTNmRrSlUrT0lhdjZsbkRObnRPUTdDN3dGNGNOY3Y3LytkYVhiYnRIUXV0bUdQemlQZ3JBM1BlbSt0b1ozSFA3bGowM0l6OTQ5QjlINENMZ2N3bnllOS94NW9aQmdvZE80aG00UTRPY1JTUmFOK1JCaTZjeC95TUVCWHN6Yjd6OEhVWkxRdWw1bVluU0Q3UkFEakRCTU9nZkRaZHE3NWwzdjJQblE4VUZUbXA2dHlPaHF1RlFHcmNjRHphZGV0VlkzWDdqMzBTN2RmTWVHVlhXRCtXUkF1QWRNRVR1aEdrV2hBYlVtcTUwV2JzQ3ZyYlVjZ1N2aDQzblM3czdRMEpPTVJVbWZvcjFheURPQUlHUDl4QmMzREg3bjM0ZWRXNjBnT2hWRFdXclpHQjJENG9hVHpvWUxQVjNyMHpwMDNNalc3d0hRamd6Y1RVZmw5a3pIbllDQXZxRDVKQS9RMWRLbVdoNk92NVkwNU1LSGlZdGNPN0w0RWFFeDVIVHN0Q0VjQmVvcEFqK1JYcEkyRnlUek5OT0dhQmlDcjhSVldKWURubWdmTTN2bDh2Vy9mUGx4MDl1VWJDTHdIaEpzSXRCbU1KdGhrczNvSUk0NXEvNVpIdWRXa1BrcE5SOTJ4dktpV1E1M2RPQjBIOEF3M2VQelkzSmIvN0g4VUVCaEdwVmxUTGovTi9wdEZaUU1qS2pnM3ZOYTQzN25ZRDdYOGd4LzR3T1NWMTY2L2lZQi9Bc2E3QVd3R1JEV25OQ0NRUFpXWHRzSUd5NDhKK0l4bDdGbVB4TVNBdlRobVB6QjRHWXhqQlB3T3dKOTllZDNGWDhtQ0I4eU9ZdWNTYXB0VitLcE95QmhUUXgzb3hxeGUrYXgxckFVTmZmdjdQM25ydFlUSno0UG92U0JzUS9mVFkwMXhVem9mMUlWcW5JTWFoYUp5eUtGdXkzbmEvTjRDU3ZYVTdNUittejNIS0ZCbU94UmdjQXZRTWdFdk1mTVhtZHBmMzMzM284OU9tNGZ6bVpkQmFiV3FOL0E2SklDemVFUkRETTl5YnhiR3grcnpaUi9kOTdITnZIejZiekR6TDNBWHZ0a0lVS09QYms2cnVPdG9INEZHN2JmaHZPZ2lUWE9CeHV3QnRvZUxHQzJJVHdENE9vaCtmVzUrM1pNNzcvclVrVmxBWUF5SlpxVTczMjNvOTJ3RHpvcG9ReFhPZXEvS3pCbzliNkg3alovN09ieDQ1U1hYZ3ViZUM4TFBFT2hLRUJhNS9LZ2gxWTR1OWVZOUlsWmRMbXVJMlU5eGw2SldFUkJzV0RCazk2ZHcwUUowQ3FEbndQeGJMVmFldk95NTczMjk5cXVUdGJSVyszek1BNjYxNGVtRzhtcDFFRlVDMFdPTkRWVXlLNHFkaTlxZHRWN3AvSUVkT3hwY09IY3R6K0U5QVA4a2dLc1p0QkhNRFFHOUhaQ2E2dk9wRnFKQm9qQXhHbnVPYjZDMEJaMWJBcDhBOEMwR2ZydHQrVXZINXkvKyt0NjllNWRycHMrc3RuY3U1MmxXbzZscTlmZzI1SDZ0N0tBVFVtTjZxRFBUOGxjak9PZFNicldMNUxHNzlseTZ6TzI3d1B6WENMZ0JSRmVBZVJGRVRTOGljMTdUa0dpemVMWUY1Zmg1QnA0QjBYOXBKcE9uZCs3OTFBdGpmUnBMYTEzbzAxUXdZTUlYZWpnRFNnNnE3Qm9DenRyQjFkcHdhNmtmbU4zdFh3MGZuN2xyOTdabDV1dVk2QjFndkEzQU5RQmZ6c0JpMXdZUTFIQjNsUjc0cmlUZEZyVHk2ckIwUitwUEFqZ00wRGVaK0J0Tmk2OU5RTS9lZXU4ajMxK052VDNrQ0l5Tm42ZXYxVCtVTjJ0YWt5Mi9GZ0g4aTVvZS9jUnRHMXVpeTlEZ0NpSnNCOVByUVhRcE0yOGxZQXZBVzVob0V4TWFZaXdDMkZDS25tVENLZXBlMUgyQ2lJOENPQUkwUjhIOElvai9tSUhEYmRzOFAybFhYdGg1LzRFVHErWHRmQy95V3YxeXZkcDJobXkrR2wybStULzF5RGNVTXhXYXl3QUFBQUJKUlU1RXJrSmdnZz09Ij48L2ltYWdlPgo8L3N2Zz4K"/>
            <prop k="offset" v="0,0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="outline_color" v="35,35,35,255"/>
            <prop k="outline_width" v="0"/>
            <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="outline_width_unit" v="MM"/>
            <prop k="scale_method" v="diameter"/>
            <prop k="size" v="40"/>
            <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="size_unit" v="Pixel"/>
            <prop k="vertical_anchor_point" v="1"/>
            <data_defined_properties>
              <Option type="Map">
                <Option name="name" type="QString" value=""/>
                <Option name="properties"/>
                <Option name="type" type="QString" value="collection"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol clip_to_extent="1" name="centerSymbol" type="marker" alpha="1" force_rhr="0">
      <layer locked="0" pass="0" enabled="1" class="SvgMarker">
        <prop k="angle" v="0"/>
        <prop k="color" v="245,75,80,255"/>
        <prop k="fixedAspectRatio" v="0"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="name" v="base64:"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="35,35,35,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="40"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties"/>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer locked="0" pass="0" enabled="1" class="SimpleMarker">
        <prop k="angle" v="0"/>
        <prop k="color" v="33,150,243,255"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="bevel"/>
        <prop k="name" v="circle"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_style" v="solid"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="25"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties"/>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer locked="0" pass="0" enabled="1" class="FontMarker">
        <prop k="angle" v="0"/>
        <prop k="chr" v="A"/>
        <prop k="color" v="255,255,254,255"/>
        <prop k="font" v="Arial"/>
        <prop k="font_style" v=""/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="miter"/>
        <prop k="offset" v="0,-0.40000000000000002"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="size" v="11.8"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option name="name" type="QString" value=""/>
            <Option name="properties" type="Map">
              <Option name="char" type="Map">
                <Option name="active" type="bool" value="true"/>
                <Option name="expression" type="QString" value="@cluster_size"/>
                <Option name="type" type="int" value="3"/>
              </Option>
            </Option>
            <Option name="type" type="QString" value="collection"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property key="dualview/previewExpressions" value="fid"/>
    <property key="embeddedWidgets/count" value="0"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer diagramType="Histogram" attributeLegend="1">
    <DiagramCategory showAxis="0" sizeType="MM" scaleBasedVisibility="0" sizeScale="3x:0,0,0,0,0,0" diagramOrientation="Up" penWidth="0" labelPlacementMethod="XHeight" backgroundAlpha="255" height="15" width="15" minScaleDenominator="0" spacing="0" penColor="#000000" penAlpha="255" spacingUnit="MM" lineSizeScale="3x:0,0,0,0,0,0" maxScaleDenominator="1e+08" scaleDependency="Area" barWidth="5" opacity="1" minimumSize="0" enabled="0" backgroundColor="#ffffff" direction="1" spacingUnitScale="3x:0,0,0,0,0,0" lineSizeType="MM" rotationOffset="270">
      <fontProperties description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" style=""/>
      <attribute field="" label="" color="#000000"/>
      <axisSymbol>
        <symbol clip_to_extent="1" name="" type="line" alpha="1" force_rhr="0">
          <layer locked="0" pass="0" enabled="1" class="SimpleLine">
            <prop k="capstyle" v="square"/>
            <prop k="customdash" v="5;2"/>
            <prop k="customdash_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="customdash_unit" v="MM"/>
            <prop k="draw_inside_polygon" v="0"/>
            <prop k="joinstyle" v="bevel"/>
            <prop k="line_color" v="35,35,35,255"/>
            <prop k="line_style" v="solid"/>
            <prop k="line_width" v="0.26"/>
            <prop k="line_width_unit" v="MM"/>
            <prop k="offset" v="0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="ring_filter" v="0"/>
            <prop k="use_custom_dash" v="0"/>
            <prop k="width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <data_defined_properties>
              <Option type="Map">
                <Option name="name" type="QString" value=""/>
                <Option name="properties"/>
                <Option name="type" type="QString" value="collection"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </axisSymbol>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings dist="0" showAll="1" placement="0" linePlacementFlags="18" priority="0" zIndex="0" obstacle="0">
    <properties>
      <Option type="Map">
        <Option name="name" type="QString" value=""/>
        <Option name="properties"/>
        <Option name="type" type="QString" value="collection"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions removeDuplicateNodes="0" geometryPrecision="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <referencedLayers/>
  <referencingLayers/>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias field="fid" name="" index="0"/>
    <alias field="osm_id" name="" index="1"/>
    <alias field="name" name="" index="2"/>
    <alias field="amenity" name="" index="3"/>
    <alias field="hstore_to_json" name="" index="4"/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default expression="" field="fid" applyOnUpdate="0"/>
    <default expression="" field="osm_id" applyOnUpdate="0"/>
    <default expression="" field="name" applyOnUpdate="0"/>
    <default expression="" field="amenity" applyOnUpdate="0"/>
    <default expression="" field="hstore_to_json" applyOnUpdate="0"/>
  </defaults>
  <constraints>
    <constraint constraints="3" field="fid" notnull_strength="1" exp_strength="0" unique_strength="1"/>
    <constraint constraints="0" field="osm_id" notnull_strength="0" exp_strength="0" unique_strength="0"/>
    <constraint constraints="0" field="name" notnull_strength="0" exp_strength="0" unique_strength="0"/>
    <constraint constraints="0" field="amenity" notnull_strength="0" exp_strength="0" unique_strength="0"/>
    <constraint constraints="0" field="hstore_to_json" notnull_strength="0" exp_strength="0" unique_strength="0"/>
  </constraints>
  <constraintExpressions>
    <constraint exp="" field="fid" desc=""/>
    <constraint exp="" field="osm_id" desc=""/>
    <constraint exp="" field="name" desc=""/>
    <constraint exp="" field="amenity" desc=""/>
    <constraint exp="" field="hstore_to_json" desc=""/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction key="Canvas" value="{00000000-0000-0000-0000-000000000000}"/>
  </attributeactions>
  <attributetableconfig actionWidgetStyle="dropDown" sortExpression="" sortOrder="0">
    <columns>
      <column hidden="0" name="fid" width="-1" type="field"/>
      <column hidden="0" name="osm_id" width="-1" type="field"/>
      <column hidden="0" name="name" width="-1" type="field"/>
      <column hidden="0" name="amenity" width="-1" type="field"/>
      <column hidden="0" name="hstore_to_json" width="-1" type="field"/>
      <column hidden="1" width="-1" type="actions"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <storedexpressions/>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field editable="1" name="amenity"/>
    <field editable="1" name="fid"/>
    <field editable="1" name="hstore_to_json"/>
    <field editable="1" name="name"/>
    <field editable="1" name="osm_id"/>
  </editable>
  <labelOnTop>
    <field name="amenity" labelOnTop="0"/>
    <field name="fid" labelOnTop="0"/>
    <field name="hstore_to_json" labelOnTop="0"/>
    <field name="name" labelOnTop="0"/>
    <field name="osm_id" labelOnTop="0"/>
  </labelOnTop>
  <dataDefinedFieldProperties/>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
