<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis simplifyDrawingHints="0" styleCategories="AllStyleCategories" maxScale="0" simplifyLocal="1" simplifyMaxScale="1" readOnly="0" minScale="100000000" labelsEnabled="0" simplifyAlgorithm="0" version="3.14.1-Pi" hasScaleBasedVisibilityFlag="0" simplifyDrawingTol="1">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <temporal startField="" fixedDuration="0" durationField="" startExpression="" durationUnit="min" mode="0" endField="" enabled="0" accumulate="0" endExpression="">
    <fixedRange>
      <start></start>
      <end></end>
    </fixedRange>
  </temporal>
  <renderer-v2 forceraster="0" toleranceUnit="MM" enableorderby="0" tolerance="20" toleranceUnitScale="3x:0,0,0,0,0,0" type="pointCluster">
    <renderer-v2 symbollevels="0" forceraster="0" enableorderby="0" type="singleSymbol">
      <symbols>
        <symbol alpha="1" type="marker" clip_to_extent="1" name="0" force_rhr="0">
          <layer locked="0" class="SvgMarker" enabled="1" pass="0">
            <prop v="0" k="angle"/>
            <prop v="231,113,72,255" k="color"/>
            <prop v="0" k="fixedAspectRatio"/>
            <prop v="1" k="horizontal_anchor_point"/>
            <prop v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTTJkZjdSZlZYWGdQL3Y3WGw1Q0NMOWlDSmhHR2lOU29ZZ1dMYVVNWWhLcEtIWFU2VlJxVzZlelhCM3JXT3R5SEpmTG9SUmZYdFU2WGEzRFZGYmJzZGJWZG1vN2lnNWpXMGRSSVlub1VLU1VVbjlBcElnUVFnakpJd2toSkkvMzQ3dm5qL3U5MzNmdXVYdWZjKzU3RDh6T2V2bmVlODQrZSs5enpqNzd4N25uZTcraXFqeGJJQ0k5VmUwdkZqZXVDKzlGcEFlZ3F2MFVuZ2tUbTFjRFp5bTZBVGdMNVBuQW1jQWFRVmNEYTBCV0FUM1FGY0NLUWNzcGtDbUZQdWhoZ1FPS0hCQjBFdGlqOEJDd1M1QUhHTzN0NHBwYkRxWDZYY3NmeXV4OVdtMUtvY3Q4TEFTL3BJM0VDcmdRSmd0aHZCUzQzbldXeDRUMFZDNWRCNzBMUmVWbHdBVWc1d1ByZ1RGUWdCNUlRS0VlSjRudTZ6c1oxTXpqS1JwUzZBOXdwa0YzQTk4Q3ZxUHdqNkIzQ2JmdVlieFNMSmhmUUEwZUN5aUxsVGJHODhicjJZS1dBaDR2WUNsWHFaTEZlRG9oUGJoc0EvUXVFM2dsNk1YQVdjQVkwS09sYkUySVZTOEg4WWkyMnlsQWYzRFZyNVNTWFNDM0FWK0QvamVVV3grVThSKytnanpUc0tRS3VGVFdNNllWcjJCUEdSdGx2My9GQ3A2YXVSRDBaMEV2Qjg0QldhVURoYlBzbUtWZ1N0UG1DYlpDS3UzMnBXVkJlUi9vSzNwRTRENkZyd0JmRWs2K2kvRy9uVEthVlhJRWxxM1lDeVRLY20xTERVSUpqK1BDQXBZT1RIWVFycjl5bElOVEwxZmxEVUwvZFFvYlFNWUVIU1ZqNVdCeFNyUzBaVU1MT1V0bEhSOEF2b2owL29iVFZ0ekp1NzQ0bStySFFxR0xnaTVrenF5eTQxNEJ2UUM3b1lCYk41MEpYS253N3dUT0IxYUJqaXIwQk1tNlVNOHFlWFdMdFhZbDBMUzgyaGVZQlRtcTZFNkJ6OURyM2NpMTIzWjFTZGFXRWxKV3NJdUZQQzRVMElMc2F2cnNWVDI5ZC9MbG92cFc0TlVLWndxczBNQzlMZ1pDZDV0VExFL0JVelM2dEd1MjF6NVYxcjFQNFNhQlAxTjIzTG1VOGVJenBiam1uQjZ2Q3VqQ3hPdFh3SkhMb2Y5V2hZdEJWc3Y4ZG9nSk9VdTBVQXRvNWNWaGVWaVhvbHVhNUJqeDZCUndRTkhiUVQ0cG5MUXRGU3NlTDdBa0x2alpTRGdhWlZ2ZjFJUEpMWXErVStCaTBGTVZ4cVRReVpXNnc4VzR6YVhpbVVsVXJMSnBoVU1DZHlQNngzclM5QmZsUGJkTkwwaG95aE9PTHR0Z2Nadmg1L0ZnQVZPZDA0bk5vd0piRkgwSGNKRWdhNmkyVDRhd2xFb1RRMmlkTE10bnVjbGN0a3hVVDRjeWV4ZHlXRDZyMWViMzdTTHloL3FpTmR2a3FzK21ZN0NTeGY4TWxoMFhDaGhDUThDSnplZXA5dDhsVll5M1RtRE1VN1hGV0xoY3JCYmo0dENJeTU4TnErdFl6MmxnTDdCTjRmcmUxaDEzTC9haFFKY0hBSjBlTEJ3UEN0amVPTjY4RnZnMTRCY0UzUWlzWEdvYmwwc3V2T3Y2SHFPc2hONWkzSExNczBEbW8xUmJPUDlMR2YwVEdmL3FaSTd2VXUwVlduVkRtY1BIb3lVS1dCSVRwQjc5cEo1aHhrOHNoRTFiZ1BjQ0Z3R25VbTBjSjZGVWNieXlrcm9TM2lWMWk3R1VGbTVCMno3b0llQXVGYm1lYzAvL2dyenBoczV1dVZDOExMMVczZkZpQWZzZmZNVTZtWk4zZzd4ZWtRME00cnlGVE13Q0ppbExNeTZ2WlV2RmdDbGFYUzJobFhHSDl4NHZuZjkvR21TWHdPY1YvcUMzZGNlZXBVd3VyTFplUGN4YndlTkNBWm5ZY2pub2U2bWUwWjRNa3JWNnp6WXNkVHozVENaT0NaNTk0TERBblFnZjVRUGJiM3FXUldqQkQxY0JKNjQ0RmFaL0hmaEY0SnhxVzJYeGsxT3lEMmZoZDl6NjZGU1cybHhlck5LV1dOZklrazREOXduNlY0ejEvNGlyYnoxY3dMNElPbHZNSDVZQzZnZTNiS1N2MXdoY0Nhd2xpUFVXczNHOEtKa1dRWGVoOGQ1aWxDcm1FMEtCNHZkQjl3SmZVZVFqTXI3OVBvZThDZFlqMHBJa3BOT1RrQzdQK3p5QjZySVFyNzkxOHlhaC96NkZTd1E1dVV2SFExaUlGU21sOThPR2xFTFhrTm9qN0JCdkhnWnVSN2pPY3NrbHo1b1hFeWMrdXhad1l2TW82SzhvdkFPNGdNeVRqQjltUEdVbEdqbmVYZVVvNVpGcXYwU2VZcHJxZ093ZkFwOWlmUHZ3dEkyMTIySHRhaXgwcTZiWUFvSzl4UktXaDIzRExBcEF0MjRhQTM0RDlGZUJzMEZHWWVsaXJHY1RGaFBIZGVWUlVyNlFQVU9qYkJhNFgrRXZXREg2TVhuL1Y0OTJsN283Rk84RGd1MWU2M0pMQWV1eS90YkxUeFZtcndhdW9qcjJYdEZqNGFzL2htZVR4ck94YUJhemg1bGFJQm5GN2l2c0Z2aTBMcHY5aVB6bTE5M3ZyblNCNG4zQVorUVl6b2Uyck5FNUhSZjRlYTJPVENWaE1SdkpKWkRLZUQyOHBVNU92SHBQU2F5OXdLN0pTNGRNdVErNkQ3aVJrWkVKZnV1V2ZVdjVkQ1MrNzNrVk1aSDQydnFNeS9qUWxqTjFUajhvOEdZQzVVdlpYSW11cmNCN01TQU9EWTE0aFhoZU1xRFJuMFd6SkpHSXI2MStXeml4RERHOWxQTEhjeEY4OWtET0JIbXp6dlUvek1UbTlaWmVXQXBwWFZ2ZXNZRmJFZ011cEl5Snplc1VQaWp3Um1DMXl5VHNGQXV6T0NYV0lHVlpTMks1Vkp6VjFlVjE1UUZwL0ZRLzQvWWR2Y29oaFJzWmtXdmt0N2J0OWJaU3dOZUxHTDhvQ2VteXhWS1hOKzYzWHI1YW1aMFlXTDRpNVZ0S1dNcUVvQXV0Sm02cHMxOGNsQ1pDcGE3WVVPQkRBcCtHMFhIR3Y3b1B1b2RxS1h6emtWZU5YTUlreHVsdnZmeFVtTDJXS3VISUtwODYxNHVCMHZndTVxZnhqU09RSjdObnZWd2VIY3NzSE11RnA4SUNyMzFzMFlPMnB5cGNCYlBYYVBYRi9jN2ZKMDdoRnoxelZkVitUQ1F1VTlWK2YrdHJWd2l6NzlQSzhxM0owbzN1VTdHVzE2WXJoSU0rSDJzcDlaZklZMTZXTWxzSlFSdW5paUpUZmF3bjJwajBSajFHblVVckxBOWpXTS82cGE2anY5V2dieGIwZlV4c1htbUlVcldUOURQOE1FK29vVWdCTGNLdGhPTlBYajRxSFB1UHdGc0UxcFk0bmh5T2xRU2tYRXdKV0N2ZTVDVWdDUUU5cFlsbDhvTDltb2FuekxFU3BSS1RITVJ4YWl4akxGZFlGNVN2QmQ2aThPdDg3TFdqTFI2Smc2eERlb1loYzdPVDhEN2NWSTdMaGdRZlBla3R3TnVCZFZZSFBWak05a1o0YlZtRDBtemJ6NDNUNEdYSlliMm42RFhVc3M4cmlhM1dxUVFsSlVQWTFyTG9xVDQwUjBVQVdTZndkZzVPL1ZJREwySDVyTVFreEM5NlYwamRLRTVDaG9RbU5tOEIzZ1ZzakdrdTFtSjVrTEtLT2NYd1lDSHhtWlZ4aG5nbDJ6RGVGb3FIVjhMWGFtdkpFcXQ3cHF3SGJGQjROeE9iTnczckRjdm1RWXliZE1FbCt6OU12T29jNFAxYWZTRjhhSnB6N2lrMWdLWXNIZkVLWEVwbm1WS0tVdHFmWEZ2TldHUFA4cFh3amNmR2MrOXhhQkR4R1pWcXJ0K3ZFNXZQYnZISnhJRXhMQ29KNlgvb3NwT3BUclZjS3RFMzFVcWRXczVDZUhncGVxbnRpSkpZcWlSUTk4cXN3RCtlK0ZRZlU5WXFOUVlsY1hJcXBpNnRHMXlQQVpjSnZJOFB2K3JVaHB3Wkw5b0s4eFo4R21aQ2Vzb3IvNVBBMVlxc2lRZmVndHdneHJGS2Fvc2p4YTlVQm85K0MwYVdvYWVlZ2F4OVBweTJEbGFjQkNPajZPdzBjdlFKT0xBSEh2cytQRG1KYWorN0NITGd4WHNwdWwzNUxRMGRuUVErd25sci96dk85MHh5eC90YjJZeEhCSWplU3ZYS1RRSnZvM296UVpId09VVkpyY1lVblpoZVNwN2NmYVBOeURMMDlBM0lDMzRTK1pFZmcxT2ZDNnRXbzJNcmtWNFA2Yy9DMUZOdzVBQWNlQVFlL2k3eS9YK0FBNC9RM29CcDhnajVXK09RM0RveFlnSFBrM2hqWWZHd0ZuWUtoMnFmOTIzY3UvOHVZRWZjejlhWHpxd3N1ZXVCVkJIcDZkWXQ2NVgreHdVdUoxTGlFb3RreFZKZTJ4Z1d1M0tMcmVNSkp5Tm4veFI2M21YSWo1eUxubmdhMG10SExLcUtpS0Q5T2VUd2Z2U2hieUgzN0lBZi9CUE10TitTa2VNUCtUQWlSSXk5aFRlbUtTVUxTVm8wWXJZaG5zS3NWSytSZXp2ajIzZDdJbnZRZUlEc25lbHJsSDNzdFQzb3YxM2dNZ3dMV3FKb0phdlZBM0V5aVM0eG9zZGpTR1BWYXJqZ1orQ1NYMEJlZURHYzlCeFQrUUJrc0Zrb3ZSRTQ5VXprdkZmQ0pXK0dGMTBLeTA4YzRxVVNtTEF1Wi8xRHhGQ0J1dmJmdTdia2kyV3NQd2Rsb3dxYmdIZHcvWlVOZlNoSlNPYXoxdEp2d3g4NHRnbjRKV0JsVjVmcjFjVXJjNkd4VXcwbFZ0aTFvc3RQaEhNdlExNytlbmpPOHdoM28ydHI1L0pWaGRFeFpQMTVNTElNK25Qb3ptOGdjek9tMVlrbnMydS9TeXg1emx0MDRldkY0VlM2OEJZNWVPd1dZTnNRcDJCcnhqeEM0MjQyZi9DVmEwSGZBN3JlMithd0lJVWJ1NTBZdjlVMk1CTWh2aFZYaFRSaXl4ZTNyWEFFbnY4VDhKSXJZUFg2b2ZLcEtsYW9FcGFGeXFtOUVmUzVMNFNYWElHcys3R1crQ0ZQUytaay81MzJZWWtZOVZac0Y1YkgxMWFkWmFublpkUjFxTDZYRDI1WjYxaytxOXg4WFVKOG5MNjJmdHFYdHpCd3ZiRVFWZ2VzY3N1VXAvQkxyR2hPbGx5aU0yeC8yblBoUmErQU16YkN3T1hXaWxYLzFXV0FhUTJIdUNPajZQTitISDdzRWpoaC9udFhZYUxrV1pSVVRCZkw3TVZ1MXBqRXRFUGU5V2VzdU9HOTU1NEhkYVBBWmZUMUxaN2xpL1VLT214RTY4U1c4d1Y1RzhoS0paWGpSVFRhZ3JwdGw4TDFscFM1N1RlOEZKNzM0ekE2bGtlT1FFUmFWbEpXckVMUHVnQUNLK2k1eEJZOXA5d2ZUMC9sNXR0WkZpd1ZFbGd5V3g1TDVxbXVWSGdiRTF2T2N3V2hxVmRsRzlILzdhZDdWSzlIR3o1cTZ4STNlTzZRcU56a1hjaW5hMGJYNG5IQ1NmQWpMNEtUMXhaeWpHalUyWENzaEtmL0tLdy9EM3FqTGRrYWVFWmRMbzROeTBJRnMxeDVLVDNQTTFtVzBjRHBDV3hVOUIwNjhmcWlWWnc5UGdQQWs4c3VBWDJqUms4N1lpaXhiS21nMkVwd0Y1dmRXV0RHUjZ2WEk2ZXRnOUZsZVY0RFJRdi9odGx3bExTdy9FUjR6dm9xczg3SVpsbWE4Tk9LRTYwd3BFc3lGN3RkSy82MFlsVXZacVY2dThYUEMwY3VMbURmVGtMaTR6Tk1iRjZCeWpzbE9HSVZXcHA0Z0N6SVdiRlVMTGRZeStqeGEwMzJLV2ZBaWFlMUxWaWdiRVA4S0M2TUxWOGpSaFNwbE8rVXRka0ZhbG51MUtlMVlKc0taS2NxSVk5NExLdzRNc2JMZlNxc0FYMG4vL1VWalZjbld6cldPbFp2SEx1L0ZPUnlrRkhMT25WWmJTR1VLbFl1c1ZtTWdqYXN5TXFUMGVVcjJ4WU1HZ2xJbzcyaG1EVitlTS95RStHRWs1TUp3RkNPaFB3bEM5NUtZS3c0TDZSbkpTR2VWWXpsY1BveENsek8wNk9YRE1zQzNYSmp3TmFCZzYydlhnRzhTNkh4K2d6TFRLZWdKTDdKbGFkb3g1Q3l4bTdia1dYUUcybldHekZkWEI4cXBydEgyQnVCRWYrcHA1ZUVXRGlwR00ybUlzVThyUExZM2NhZ0VVNmd0Q2NENzZ4UFVIdmZKMG9lU0ZWbUxsYllKTVlUajV4QUM0V1N6Qy9GSDhwaXdGYlozQXowNTVwbHpzYXptV3lrOFBwek1HZi90a3dxZDdYY3BSVUQ1aFpjT2o5MlFwS29MR2RaRGZ6S0NsWXZHbTFBbVFXY2VQMllvRzhUV0dreHN3U3pJRndoVnAxRkw2NWJWSFpiMEZZQk9mWWtNbjAwdStGYzMzdHhYM3d2SXZEMFVaaDZzbGp1VU02VTU3QVV4YnBQR1FzdmxQSG1PcnoyUW9aZ2theFVlRHUvZjRXYnZKcFBRaW80Y2g3QllZTjRCWGlLWndXMVhkMXEzUTZhSzk0YjJKTGdQbXRsbnRnTFJ3NmFTVWRjVnQrSHNWNHI3cXZwcTZKUEhVUVA3Mi94amIyRkZWZVZ1c21RWmx6dVpheWVrbGxXTGVkeFFrc2NoQW1qb0svbTJOUG5RVlBINnV2UitxWVYvOUYvSzNBcVNFdlpRa2J4SUtsVDdna2VnMmZXVXl2UzRwKzlYN1lDUGVrNXlJbXJZZmxLOUpTMXlOZ0pGVDBuRWFudnc4dzNma0lTV2tiVndjKzFuckFLMXArSHJqa0xtWG9Lamp5T0hEa0FzOU5EbWF3K3BzYlJHdWN3RHJNV2ZnbXQyQ3FtWWxFUE41THBaTzN6Vm9GM20wL2JnZ0dlVjhMZjNuUW15amVwZnJUWkZiaTAzTVBwb3F4ZHdhVzUvRVE0ZlFPY2VUYWMrVUwwT2V0aDVTblZVNHNUVGtLV0xhL2FCOG9VeDNlZHlnQ2RtVUtPUFFsUFA0VWVPWWhNN2tMMy9ndnN2Yis2bnBsS0trdWNDT1RHejFMb0VweTRQTGVZYysyQ3NsM1EreW5HYjlrYkd6dnpOSXdxcndQVzFULzA1NjJJZUFCS2xLalV1c1hRVmVuYlpWSnRDRzk4R1hydVpkVWhnZVVybTNpUjIrMENMcjVJWlZrSDFwWFROOERHQ3l1RmZQamJjTy9YcTdPRFR6em0wM2I3MUtYLzdYb3JQdTlxQ1dOZWNmbUExanFoL3hyZ3oxdm5TNk5ZcDZkYk40MHBmRW5nTWcwZXU4VmFYZExKV09EUzFiUVFtdDRLQnhEcG9XZThBSG5aNitEY1Y4Q0pwOW4wQ281YldWYlJpdzJ6UEZUUncvdVFiOThDLy94bG1IeDRLTGxuOWF5K3RuaGs2ajE4THhHeGtoWFBjem4xZldDYnN2eGZ5L2hOalZPNmpaMXBWZTBybkVlVk92ZWlnSEw0bVF0TXJXRFlpMjl5WUFYbUlRMlBuZ1IvckgwK2NzbFY4T0pYb1NzYjM2R3BhSG9ieUlQcnVENVd2akFPREdtRWJVMGVJc2dwWjhDRlA0dGU5SFBvNnZtdlZGdmpIZGZGaVlYbG9sUGpWOS9IWGt6dzV5ZldDVXRwRFl2ZFU3aEVtRDdIL0Y1d2JSWUhqZjZ0VkQ5NzZncnVyY3BZa0xoOU9DQ2xxOVFiL0JSdVkwSk9XZ01YL2l5ODRDSllmcUs3WCtmZGUwOUJ2TFp4TzB0cFcvY3JUMEhPdmJRNmg3anlGSmRYaTRmekNlMndLTFhZNDdtMVhMTlZIL0swNXJjcGk2NkEvaHVoR2U2MW52dHE5ZGI2eGh2cmEwYU9memZ2aVhBYkZnbDdZRW9HcVFSL3lLTTNVaDJOZitIRnNMTDVMblJyRHkvK3RIRGo4bFNkZGUveU9IRTE4cUpMWWVQTFNMNFRKQUZkRjNjTnNTZnhMR2hzSlVPZTNpSUlvQWU4UWJmK3pJcTRzR3BZV2NEenBITEJyZ20yM0Z4OG4yd2I5Y29MaG1PSU8yYkZKUzA0OWJubzJSZWhwNnh0dWNRR2JjZTFwcFMweHJkaVFXL2pPc3RqOVhyMG5KOGVucHl4SUxVUVU0dWJvTTVTMUJLRnF1c3R4YlJ3WXg3QStURDNvckMrY2VJWmVBUFZsMHhjZ3JtVmxiS0lYbHNyenJGb2hyaXBBSGtJTDNnNXJOMVFXVUxhcnRXRCtKUkx5cFhHN2NMMnFkalNjdEV5dWd3NVl5T2M5V0tmUi9RWlg1ZU9kL2hwZWJiNHVyNlBqWXcxZDVZTWd6YytqQ3I5MTVreElOZGRNcXJvNVlyMnZNNjFpZm9NdmJhYTB6YURkcnhxUFdqZ2pTeER6enk3Mm1pbWJlVzhSTU42Q3RLUXkyam5XVDdMT2xvOEduRFM2WERtQzZsL3JjeXpOdkYxNnI3RXUrVENtUzUxc1pFSWVQUkFyOUNQWG13Y1JuaHFiSzNBUzJ1QjR3bTNPdWNwaHIwQ212VmV2QmdKYks3dTFDb2YzcDk4T25MS1dnZzJsaHQ0VHFJUlA5bnd6Z2VHdU43V1RKeEJleGF5d1dQRktsaTlEbDArL3hvK3k5clg1ZkVZeHJqeFBCSFUxNS94dGFkWU9ScTUrNEZTdnBTank0Zkh6dWNWY0U2MmdLeW8yWWRtT3FVSXNVbTJPaHdQQmtHYkZIanhaU3lIMlhiVmFmT2J2NlJkNTVCZXdRbVhVdkJjZHNxNkRncGhiQ1VNdG90S0pZaERFUytHSXlpM2tncUxibndmSzJvOEo1NmJydHJKQ3AzclhWYmpod2NRTm1NYzBmY1l4WEdZRlE5NHNXUnBIT21WcFdLT0lZeWRVSjN4Qy9FTWk1WXJzNnlocUVLL2ovWGtaQ0U4V21Xank1RGxKeENENXlvdHE1VmFuQ0c5K043eWFpbSt1WmpUMEptZW9LK3F5Nm9ZOFBldkdBVXVEaHRZc1VlWE9NRXJTN24wcnZUaXVvYThXcjEydHdSYUJ3aWlPTEhsWG1lbTBPbWpxUGF6bVcvOGxNVGkwVHBmcUF5VjJ3cUhRclRDa05xZDE1aGU3TUZ5WGlnMlRwYjNNK1MvbUluWGowS2RCVS9OclFiT2pwQmFIWWlaNVpRbUJHODFXWEdIRjA5NmRDMThtWG9TbVptZUx6ZE9yZ0JtN0JmZnR6Nm5qc0NUazhqTVZDditNN1BiZ25pemNUL3pOQnc3VXBYaGgwRzVKTUFhTzA5aFkyWDJGSzJVUjRiZk9jcXgxU0wxQzAvbStoY1RiTC9FRGEyZzBoSXFCVllINHZqQTYwQ0twanRRUnc3QzAwOUJjTW9zWmEzcXY5Z2FoWFZERjNuc0NlVHgzWEMwK3BsZHkvMTIyWWh1Wk9EOXVlcnc2ckhtVC9oYWxtYlkzaGliRUNlVklLVGFlL2d4RHkzOG02ZXBvOExNUmFyYUg4UjgrbElkUFB1TkJZOVhoT1VPUEJmaHhTV1d1VTY1NXk3OGhtV0hKK0hnSHBpWnl1N2xXWllvaHFGbEEvVHgzWEQvSGRVcjJReTgrdFBidExZT0xBenBIenVNVHU2QzZmWnZCZWFVSUlXWHMyWjFPOHZJbENxeVpVRmpJekhRcVI2REhaZkJqd2JxUytwM0hhUUV0WVNLb1NSV0xMVjJPZmRyV1FFSlN4N1ppVDZ4UDJsRnZhdzBkdEhEc3RtbmtmMFBvdCsvRS9ZL2lNN05KT004YTEvUmZTNnNDb2YySW51KzEraFRmUjFhbTdqZXdodlNONjdqdWZBc2JEem5zZWR5Rkt3bEV3MDhBZVFsbFF1Ky9zcWVJT2VubkYzTTFLcVBoZlFnRk5DenBwYWJzZmlGYmVQSkFTb2xlZlJmSUZDUzJOV21EaE9ZZlBmY0I3dStneHg2Rk4zMWJaaDh1RG5CUnR4WXVnV2tNMU93NTN2dzhIZGEvYXV2WXl1VFU2Q1lUcW1YaXV0elhpbVV6L05NVVZCeWZ2L2pMNlBIc2VtVldyMXlZMGpFRXRhYzRNeTFOa3EwdFRxc3dZcVZxLzVMQmJ6eEpBenhqaDVDN3Z2N1Nra0N4WXZkWk83d3dSQnY2Z2g2L3pmUlIrNnRaTnIxYmZqK0hWVlduSGpXYk5Gc1dVYnR3OTc3MFozL0Q2YVBtWXBsaFNrcFJWTURMeFU3eHNhanhJcUcvRkk4RFBrM3lxRVZLM284UGJOUjBNYVBSMHRFMEJMUVU2Wll3TGg5TEZncWRyR3NxYmM0UXBrYS9IZCtIYjMzYTNEa1FOVXZRN204ekxpaElMUFR5TTZ2SXp1L2dVd2ZxMmcvZFJENTdnN2svbitvM2dGb1dEdVBaZ05YKzNEb01manVEdVFIZDdYNlpZRTNsamx2NUNuVlVHRjE4SmZoSDlLSXZacG5iYVB5TVk2TmJ1alJsdzJ4OEo3QUtUT2N0b0NDUnRSRHdXTTNHbmZFc3dLZVRBMzU1bWFRTy84Ty9lNTJlT29RNGVaeDBaTVAxZXBWdS9kL0UvN3hDekM1cTFtLzUzdndqMzlYdWMyWnB4djBMV2dwYUg4T0RrK2kzL29LM1AwbDBINDJqakw3aVcwaHZmREdHOE5VQ0JWYjFiQk5PODVMaDJ5RE5odEd0bTdhZUFYdzJxUVZTVEN6UGlNbXBtblA4YkRLTGF1YmlrbUgxek5UeU81N3F2dFQxcUpqSnlEU1M4Wm1xb3IwNTZxdG5IdHVoVy84TmV6OUZ4djU0SjdxT1AzS1UrRGswNnMzSVF3T0U3aXhwaXJNemNEamp5QjNmaDY1NC84Z3dUdWxjLzJ5eXEySnozbXBFRitDRzIvc1BTK1ltNnUydklJZ3Q0MXMzYlRoelF5ZWd0U1ZYdU5VQjczT2xkeW4rRmgxSlM2K3RWRG1aaW9yOWRqM1ljVkp5TXFUMEdvUWhnMFZxbGhzZGdhWlBnYVBQUUMzZlFhK2VXUGpTME9taFhweXNvb0puem9FcTA2RFpTc3FKV3U0WlVYN3M4anMwM0QwQ2ZqK25jaU9QNGQ3ZHFCenM2M1l5dXBQVGdtdGNVbkpIZGZGT0pZQjhXaVZKRER6YlJUZ2U2UEFtYkV3Y1VOTDQxTkN0MFVTczhSeUsxNUhMVjVXbVVWM1dLOTllT2lma1QwNzRibm53TmtYVmQvWFBlVU1aR3dGTWpzRFR4MUU5OTVmL2R6Q1E5K0dvNGRhZmZmazRNZ0J1T05HdVBkVzJQQVRzUEhDNm0yckswOUZleVBJMDBlUlEzdGcxM2ZSKys5QTluMGY1bWJOV01ubDRkem5jSEl4bmNVdkhFTVBQOGJKV2U1SUdkZUtidDMwWmVEVnVRNlFLTytxZ0NrbEM3RzdydGpVZ3NoT1ptOFUxWDVsQVRQOG1qM0swNjllZWlUUW55MVNMb3RtcWl6VkxyV0E2L3E0UDZtK1d0WXN4OE9TYWREK3BsRWQvSzZ2T0kxekhjNkUzRWxjTDVhTXpiNjMwaXplT1I1aDI0WkY2ODhXSzNRT3J6VVpnNWNlbFM2YVVzVkx1VUV2enZiRzJJS2NOWXZMNGsrdlhYQzlwaWZPRDB0YnJ0SWo1cTBRalQ3RHliSGF4dlNWOUVCWjViSGk1Z1k1NWhuTHUxaUlGNUZIdDdTc3BENGU1N1NSU005dkNxOExUUWRuVFU5aGxhV2Q4ZW9wN1VUSmdIdnV4aG9JYnlBOWZPKytkSkN0QlZWcWVWTjR1Y1VXbDNueWVoYlBvbWUxQ1JlMWRXM1JUTGxpNzlQU0ErTisxYWdFNzMxT3JmeFV4NzA2TDQ2d2VLVldYUTRueGl1SmswckJIZ3NCRWVxVE5pbGxmaVpnSVdOaTNZZnRIUmZwOGlpaFk4SDhIQ2tDWXoxZ0xPY1Nxd1kyc1pScjlHSzVISytRcDJmRkxIZU9jWjBMcEszN0pNZ0kvT2hMNENmZldHWFNpVjZrNk9aNFdsYXdhMTl5aWxTNlFLeXdLcVRoZWFaVWpEb29IeHRsOEtNeklVS3NNTEZDV2NKYjFpZTMrbkt3a0pVWThxdnJVOWF4azF5bnJVTXYramZJQlpkWDM5azR0QmYrNmYvQ1A5MVUvVlFyL2tLdzVMYmNsZWZHclRtd2VEd1RWamZYSjY4K0xhOEFqSWx1M1RSSDlDWUVTd0hqT2c4OG5LVjBpeVd3WkFyWUc2MStQK1NscjRGemZycjYxY3o0cWNhaFIrRzdPOUJ2M1l4TVB0UjYxVytKako0c0M1bUQ0d2t5OHZaRnQyNTZtc3p2Zi93d1lDRmJFYVZ0M0xyUnNlb1ZIcXVlQTJ1ZkQ4ODd2L283N2JuelgzRHluaGVqTUR0VFBTdCs2RzU0NUh2bzVDNWs2a25vejhMVUVaaWVXdFFXUzFFZk9wYlZrS3FyNjczWVhxTXlxMTI3alNJd05RcE1FeWxnRnlzV0V2ZmE0TlI1MEdWQ1V1NmhrL0s5K0ZYd3IzNFIxcHhWMVlnTVB4WE01OGJEWjd3MTd1Z1luSGsyZXNaR1JIVitvSGZmQzdmK0pmckFuVW1MYkkybHB5UTVDNTl6MVRrRjcrcHFQUjZwZW1DNnA1VUNacG5uaEVxMUtYSGI0WFdYMVdzRnlMbGczUno4eVlmUkl3Y3FTemN5V2oyOTZQVmM1UnZTQ3M4QkRwUlJCai9Mb0wwUlpHUlo5WWp1NEtOWnhiREdVckRIVUJMNGNaa0ZLV09SU215OGJaY2NqemErb01oMFQ5RERIcGtVNDY1UUtxaTN5cjAycFlPZkM2U1ozSVVjMmd2Um83alNkOGg0M3lOaGJnNE83eDhlWmppZTR6ZHYvRkpqWE5vZlo3NE85NEFEWHBxZFlxekJYeGNCWWloVnpCeUVDNlRMTnN1d2JtWnFZQVVQbHZOTW5QMGIxaDE1dkRxdTFiZC9KK1I0Z29VYWwwWEFaQTlrVXVMa3VBQTgxOUFWdk9BMU54aGVrT3haUDQ5SHcrTHVmeENKM3RXY1VqTHY1VU9OdXNQN0c5K2VXOHdrbDdidHlpUGxhYnpGN0JtdFV2NkRPWm5zS1V5V05peGwxRVc0aFdhQW9WTFZWaStYY0tReU93RFovMUMxdHhlV1JkOGI4UlF5eEd0ODMrUHd2cUVDV24zUHhiS3hSMHFGUWluNlhwdVFycGZGV3JpcGtLWkRmRG5aRTJSZnFtRk9tQnhlcmswdVhndkJTeVJTbHJoTFpzbVRBMnMxZmF3cGovRkZwaGFmNEF0UFEveTVXWGhpWC9WbnlPbkpYUnJMV25XbDR6S1UyOEV0VWR3Y3pmRGVpUUgzOVlBZnBJaVVKaUpkeWhiYTNsTHNuQlh4QnRYRVY0WEpYZWhBWWJ5M0Y2VGVIZE93bElQNFR3ZngzMExpWFd2UmxPQ1gxaTJGRWJIYVdvdmM2UDhQZXRCL01LeEt1VldKUG5OQ2VSWW5hNG1Nc2xTaWxGdjVHcFdGbjdINzFzbktEY2ZmNDhobHcvRzFpQXppdnoxbUFoZjNJd2VsbG15cG9DUzhTa0UrTjFBVWZiQUhQR2cxTFAxY2pEQ0psZEdBV09sTEYwQnBYV08xVHo2TUhIcTBkVExhK25xbHA1UkRLL2pFUHZ2MUhmaXhyM1h0NFZnMGMrRHgwT2pQYWxNU202Zm94UFVDRC9aZzVRTUswNVlWWEV3YzBLV2ROUkdXREo1YjhJTDJsRHl1RlpxWmdzZDNWeTgzaXR0R3I5aEl2WENJdVZuazhENzB5ZjBtbjFoaGNsWXhsMkRFTkMwbFNDVVBZdnpGWVV4SmxoelRzdVp2NENPbVFSN3N3YXFqQWcvNmlEN3pFa2l0Y3Fzc05VamVoS1dDYm0rU3JENE9KOHpKaHVOTU42eHJmVDc1ZU9WK2pkOEp0dUxUY05Jc3NEeVE1d25Da0tOa0xEMG9XZVFwdlFnOVYreTlCTzVYbU9veGZrTmZrZS9Vdnd1WEVtNHh5WWNsc09WUzQvaXNTNWtsZzZXUWx0STE0c1Q5UDBBUFBkcW1hYnpWd011STlmQythZ1BhZ0REMDhOeGRUbG04L3BXMnRjS2ZFcy9uS1Z4dXprTitsYWJwZDNwYmQ5QVRrWjdBUDF2Q1dZUmkwOTdGTXNZZHpLM08wbGl2eE1wNnVLWmJPWElRT2JpbitsSTZiZGZiYU8rOWl1T0pTZ0ZUTVZjOE1aWThvUlh4NU80YUwzcDBVcTdXV3Z3V0hZdWVZNW5zdFI0QUFCU1JTVVJCVkRHL0hid2ZrTHVBZnNvRmhBUnllS1Z1cEFacllpd2xMSTFEYzY3WVdnamg0aEx0VjhlcTZ2MDc1KzBHM3V2Y3BEL1kvenU4djlYbjFDUmFjVnVKcGZmcVVtNDZiQi9UaTJuSDF6bEkwYWcrcFErOXV3QjZxdHJYMGJuYkZaMHRuK0l5SVhKSlFjb1NscXhNejJWNGs1R2oxN2dQNHNEVVV4RHo1VU5QSHFoY3VCSC9lY29TMWx1V0k1WXY1NEZLdlZScURCYmlibE0wZ25HZmhXVjNEbC9SS3l0bkQ0RGVsNkhiQ2JwWXlwTEV4Q29MQSs2d3pMS2FscEltRmZYQUkxVU1OemZybm5oeHJlSVRqOEdCUjl4d3BVVEJySHZMTW5veFk0azN5NEVsZTV4WUxEQXYyS21NSFZEVmZ2WFRtZSs1clMvMGJ0Y2dFYkdFNkNwOEtlVGNSS2hvSlltSlJhY2tkcXhCb1hxMTcrTzdxN044Mk5iUDNRYzh2QTg1dUtleENFdXRzaXVQUTZla3JDUzVzTUJTWW9ucVNzYzFXaUMzeS9qZnpjTEFCUStLdDRQMlV5c3BWTVl1Q3BaUzZtSGNsYUZaR2lESCtKWXNKWEV1Z0V6dUdqNFZBY3hIYy9FMXN6UHd4R1BvazQ4WHlSUExabG5xMHJZcGVsYmMyNFhPVW9HaWZVRnZxZS9udjR3MDJ0OGhNQld5czdRL3BRZ3hidU02R0kyWVRpN1FuaGZlTG9zVk9GYnVXQzV2VWxzTFpmSWhkSENTR1RBZnViWGVCWDNrY2VUZ284amNUS0luYmZsRCtjTHJuRnUyOEVMRFlmMTFCU3Rrc0l3SVViMURhd3E0dGI2Zi83bldsYlA3Rk83MkNKV3VnbEpCdkRvdlByS3lxUnJmVStCU0YyRzVPQVhrcVVQSXdVZUcyekdOTnQ3dmpEeXhEdzRhZTRpMEp5b1hxK1hHM0Z1UThUZ2w1MlFnbEdWdGN4N0pNaUpodlMydjNBVXlQQUk0L1BsMCtjOS8zeGZreTRMMHJSVlp1bkxjNEhnbzVmdzBsRmlobUc1OW5iTjJ1WVZqQmRqaHRVRDE5dExKaCtHSmZXYXlZZjJlQ0U4OE50eUF0aGFEMXcvdjNwUFpxay8xeGNJcFdhd2U3UmpLNGt2dGczNlo4ZTNEN1lHZXF2Wmw4SHZCQ244THpIWlJqRnlkVis4cFVPd2lVM2d4dUlwazBJbGxpZWtQOFNaM29RT0xaaDFNRGQrNno5eDgvR2VGQlY0OEZ0ZVhRRW1zNXZGczRBMDByM1IrVXdiQzh5VHpPREpMVDc0UXRwdi92ZUNxNFU3Z25wS0I4RmFpNTFZYmthVUtFc1NEOWFlMVluTVcySXJwTEN1Y29tM3hHZFlkM0FNSEg0SG9KZVRtRDkvVTMzNEw0cjlVckp1S3NVUHcrdUVwaG1WVlM4YzVscWNFTCtkSkF2Z1dJeU03SmY3QmFoR3BYUEg0OWluZ0MwRGpMSkkzV0JaMGRkazEvVktvQjlDekl2RktyTXN0UEUrR2NOSjBjRHBHQjlzeDBMU0VqY1RrMEdObS9CZnlpUHZxS1dPTTQ1VmJ5aG0zaTVYVmtzbnlBaFp1U2IxejNRZitScTY1WlhwKzV5V3dnTU5DNFg4UE1wVldSN293VGsyNHl1QXZvcDhDajE3SzdZYmxxVlVjMXNkdVJBQjUvT0doWW9WSDcxdS9DeExFZjdrNHkzSlpDM0hObHZleDZObGpYTzM4eHZGcFBCN3hQS1VVUFN4cnR0TXBldnA1cUF4ZWpkY0xid0JZTnJJVHVJUEFDaTRtOEUyNUdtdVN2RGpKc213ZS9ZV3M1SlFiMGNtSHE4TUppWDFBbloydUZEQ3dsRG53eGlpK0x2VW1YcnRZSVhPUVdydzVveEVyZlczOUZMbU5aWFAzd1h6SUI0Mk42QUZjZmZNVThGY0VDbGppSmhZRDFrVGtGRDNHajh0eWRISjRqVWw0NmxEMWFHN3FTQ3NHSFA0ZE9WQzlwQ2phLzB1NXY3aGZxZmhxSVJBclExc1dXNzBYRWc3RTlaSHk5d1graXYveTllazY2WVhLRXJaK0liMXFwVjhBYlJ4bVMwMVFxWXZJNGFmTWZpbnRsT1cxc2tRTFd1VTZWOFdCNFU4MXhPNzMwRjQzL3N0WkM2dXNheUpvMVpWNG95NXlGWTlYcTA1MzA5T2Jhc1dyalY1NEhLc0pIOWl4Ri9nOGFOSFgrYnRheHB3eXAxeHFxaXduVStsRVdIWkJKM2ZONys5RnZ6a0hWTW9aS0dDSkFwVlkrZHdpNmtxN1pBeTl0cUVyOThJeWc5YXNJSi9uMmgxN1EyOWJLMk5EQWNONFVIdjZTZUNRSVVzU0xBRlR1QU1oaC9leHV5OVp5UmEvbkZXT2VhVGtVNmgrUnZYQW51cEhiT0pEQ0ROUFZ4Ynd5QUd6VHg1NE1wZjBEd1BIb3U4cGl4ZnVsSVFMcWJpMFdhNkFIcUtuZndaTi9hckJ0b0FBcTJidVViZ1pNSzFnU29EU3dEbWVwRkF4ck9UREtndDVwbHhhZkIrdVppOU1hQVQxTTFOd1lEZDZaUDZRd2Z6N1h3NGdoL1pXdjBzWDBiSGs4dVJNWlptNVdEVVZDOHV3Wko1elNaOXpYcWJBVmMrQzNzU3FwKytCeXVVT3Qvd0dNUDhzZVBBMFpIai9udHRtUVQ0T3RIKzZ1d0FXWWdIRDZ5NWxwWFE4bkp4TVEzaDhrQTB6NzRZQmVHSXZITnhydFdqUVN0SHVNdkYxbmFjd0hvK1Fic3FpeG5KMmlSdWJDczhSRmZrRTcvbjcyVnJ4NmkyL1dobm5YVzZjRFZlRTdnQzJBYk1sYnNwYTZTbXJ0RlJadFRkNUphRkFGMHZONU1Qb1l3OVVQMzVZSzkvc05PeDdFQTQ4N0NxRGQxK2FVWGFwODVQRHdlL2lrZmRRQzVrWHd3TFBBamZMc3RFN2dPWmVjNDJqMmg4TkxaOXhmVlFuTmw4dmNKbkFhbyt4TlpoZE91aTUzVnhHYS9HMjRzVVl2TFlwMllEcWh3aDNmcU42UWZsWjUxYzFqOXlEN3Z3R0hEbm9XdGNjbjRWWW5CQXZkTGNlanhpczhVMk5peVZuUnJiRHdCOXk5YzFUWWZaYjYxajlPWnBRdnZyNThHMEtOd3Y4SERCcUNaTlNGSy9jN0t3T3lpUlAwNHNYWS9xZU1zZHQ0L1l4bjdxMTdMNm5PcDUxL3gyVm5Qc2ZSUFkvUkwyNExYcGUzRmJYZWJLQlAzYXA5aUZPY2tFNWNwWWFEMDlHclE2MGZJWGxjN2ZEdkhjTjlXcFlsbnIvM1pEZ2IyKzZGT1V6Z3F4emNSSUNaZW5YK0RxNGxyVFM1TXBLNWN1dGVJOW1TYnVjUERrb2JldmlGWmdyTC9uTEtXM0JBdGtEL0VKdjY0N2JRbXNIODBwb2JzTjRJQ2ROM3c3eU9XQTZsVldHQWxtQnRGYzI3SUNVS1I5R21XWFJUQjRPdlpKMmNWbVhHQzRYRThibE9jVXU1WkV5THptM2JTVTZGbzJJeDdUQURRSzN4eTRYYUd4Qyt4dlJJWVBxUzB1RGpGanZsK0FseXFsTUtyNzNMRllJcWNGUFdhaWNHN1dnWklKcmVidlN0eGFhdHpoS2FlVndXandqN2JLVU1VZmJVbENNc3VDK0Q5d0g4dkg2MEttWjNGcmJNR0ZsK0t4dWFEckh0OTJqOEFtQ2JSbFBRSzh6c2ZDaElucVdNeTRML3l3NlJIV2VaWXQ1ZUl0aUlWQmlZYjI0TGxiNmhibndpa0xZcjdpUDRYaW52SloxNzNHazBvMVBNcjV0SnpSMUtiU0NZVjJqWUVnc0NoVG42K1ZUSUR0MHNEbHRycnlnd3lVZEVHZ05WUGdadXp4dlVDMGFjWGtzbTZkMDNpTEJ1TGJLVW9HK0I2RUM1QmEycFVoV0d5LzhzY1l0RlZxVUxBS3BkR0lIalB6MWtLZXg5UkxYdFk1amhjRmlYQzdqMnljVnJoUFlIUXFmRXpMWGdWU2NtRnFacWJaeG14alBzakpldkJOUGJzNHR4UW9TbHVjV1l4Y1k4Z2tZVlR3cWlTMlpQQjZXcHlHNGo2K05jZDBOWENkYmJ4bCs0U2owcEpXYzdaaXdsUllQR1VYMzh3cDUrcTBLbnlMemhDUVhBRGRvTDJGWnZNSTlQQThuWittNlFDcUJXU29lTlo5VW5OcVZSMnJCdFQyVkFub0UrQlNjZm11b043SGJ0Y3FTU1lqbGxudGJQOXNYK0Rpd2crQUppZVdDTElYSnJTekxkVXRRWU8wYXhhNHJ0bTY1K0N1dTZ6cGhLUXVkNGh2SFlTbjZudVdSK2o5cHR5bmhVWnBnSmVTclhLL3djY1p2bUlWMjdCYy9BellmeFEyRkdDREdBZU5RRU5VKzQ5dDNnMzRVOUQ0WWJsaG5PeEpiZ0ZTc2xiTVdsdHUwM0ozblZpM1pZb1V2VlVZcjZZaGxDOHZDZHZWbmJsRjRjWnEzY0syWTJ2TWdYaXhmRU1iMEZlNEgvU2dmMkY2RlpkR2VYMWdXS21KZDFsS3lPSEFNZlhaREVmbmFEdUFUQXNWbjBFdGNnemZBQ3ZWUHNUWGF4OEY3L0psVG9qaVFEOHRpNVU1WmIyOEJwZUxORkUzclhxSktWVHQyU3lWT3FUSDNESVFWUDFianBRY0VQZ0czM3VydDgxbWIwSzB2SmRVTll1ME1rVnNOdDRLT2p2eTVJcDhEUGJxUWFDWTFVTjRnaEhpQ012alp6MGJiMU1URnE5MkxCVDEzYnRFbndva3RVSTZIUmRNYlRjdktlMk9VY3ZreFdQMU55YVZ3Rk9SenVtenVUMlVyeWYwK2J5c0dqT05ZWHVwc0JwUFgzSEpJNlAyZVZ2SGd0Q1Z3RElrT21WWWpyby94UWhyeGhNUnRpZkNzT291bXB6eVc5YlFnNGNJYU5EMGVKczBCUWp4ZUtRc2J5MkRkZTBvY2xVOEw3QUQ1cVB6bTF3L250bHJpeENUOGRFOUVXOFRNaXZGYkhoRGs5MEMrUTNSNDFlcXNsYkhGMXNDeUduWlovUzhOTVcyUFhrNU9uREtpT2lzZXMrTEJQSSsyQ3ZudTBIYWxKWmJZQ3lkaUdOVE5LbndMK0YzR3Q5MGZQN2lvUDB2TFdpNDNaaHJIZmlHQklZeHYzd0Y2SGVnREVuMmJMdTZzMWVtd2c3bllDcWRzSGw4SC81cmwxcWRYNWlsTXlvTEZFRnRsVHc0dnRLaXhMTGVZNG1sNUI4L2ExMkRGZlJZTTV2WUI0QThZM3o1OHc1VzFoV2Q5LzhQQ2Evbm1XR1BEWURLdWIrQTk5OGlucVo0WDcxSGplYkVYbjFuV01CNk0xS29Nb2JuYTUxKzNtUSttOC9HVEoxODQyZDVFV3JHZWJYMmJyd2dOTjVROVN4MWVXL0o0bmlVVlkzcHpSWFhLNVJOdytxZkR3bEJYNnZzaHZlZ0VkSXpYT0J4WU40aUR4cmplOHV2eWEzZk93Z24vQS9pZkV2d0NwelhwcWNBNUZRREhZRnVYYUxvS3pZZWxSQ21adklXeUVQcHRYRCtxekZteFZFenF4Y0V4bmZiY0tLRDdxQjVBL0pFRSszMUFhNi9QZSs1cjdRbTZwakc4OXA2S3hOOGpZZnlMUjBFK0N2SnBZREkzY1JaWUU1dHhDdzZ1UDRuekVzMUxtQW9MT3Jpb1Z0dFltclJybjdkNEhpOWJRZEx5ZVdOZnNoZ0c3U2RCLzVyUjN1L0sxaDNEMTdiRTNqRzE5VkpmeDIwN0pSM1dYbzhSRHg2QTBROXFkU2JNM0NNTVYydlhiTTJ6QUZiOHFBTm00WHRvVXZpeGxmYktTdTZ0UkthRVIxMGUxcWQ0V0hMRXRGSkpoWFVkOFRvZ3lPY1k0Y05jYzB2M3Ira21NbUNJdG1IQ3o3RGNDeUxEc2tiNzhhOU95b2g4RUxoUkIwcG91VXVKL3NLT2UyN053ZzNyUE1WdDE4M256NWF5V0hIYlFpQ2xYSmFOam1YSTBRdkxZNFgxRm9GRnE5MVhaYkRSZkNPTVRNaTF0eDZBNW56SDRWbGQzcERMU0dKRGNDdHlTVWlNMjNMVDEyN2Z4NGhjQzl5Z1FVeFlkN1prOVZtNExkN09mVHk0bHZMSHJzbEtDdG9Pa3V5OUo2K25jSjVTNXVKU3ErK1dpNDdqdzVpM3M0Z25nUnRnNUZyR2I5NGJLMTRZbWxsbkJtSzNiSGxMRWVtMXZoTmlLVk5wdlNVSUV6K3pCbWF1QmE1U1pLMGtsRDdsTGtyeFkrdVpzcXg1WGpyNFA3L1htSkt0QzkrVXpJc0ZUNkVqK2ZyQVB1QkdZWFNDOGEvdWczWXNaeVdyY2Z4WFEreEJHKzEwL2tXTDJZWXB2R1RaNzF4MktqTzlxMEd1QXM3UytzV1lpWUd3N3V1eXVHMXBtY2Rqb2ZTZWliSm5vNytKbUxBdjFibStUeXQ4cExkMXgyRkw2VkxIckR3bDlFQ3dYdEVXSXpsWmpWWHZ3c1RtRmNCdktQeXF3TmtNdnVJWnhpbTVsZDRWRjhvR1AyZEpQZjZMVWFJdU1vZGx1VDZreGloVE5ndmNEL3lGY3NMSFpQeUxSeGM2MTZXR0M2aStsbG1xWU42bkpZQkZUejk3Vlk5N0puOEY5QjBDRndBclN0eFRWNXd1ZGNjRExHUU1NUEJLY1l6eWFhckhhOWZydVdzK0pWZDlOam4vVmg4c0hHc0xwdVc2VXpGZ0tzUHBJa2lMOXNTV3kwRGZyM0FwY0hLcGNsZ1Q1YTM0VW9WY2lFSjNoY1h5V0VoY1dHTEJCM0JZNFhhRTYrUUQyMitxQzNPSlJVaTNWRStzV0hCb0FTM0NTd0d1Tlp4NDFVYWhmelhvbFNCbjRpUW5Ub2JtdXNLdVFYNWNscU9mb3BtVEo2Y1VPTGhlM0ZwRFNuYVBMOVZoMHIzQVY2UW5IK2JhYmZjUDZXVVNqaHhlS2p1TzJ6Wml3SklNZHlGSzZsckQzM25GS3AzdS9ib2d2Nmp3SW9FeFNFOWtUdG1zVmQ1RjZTd2FwWXBZMnJaMHdYUlpBQ0hFL1lyYmFuV2M2ajdnTHhrYitTT3V2dm5JRU0rd1Vpa3I1cFUxNUVuUUtIbzFSMHlvUlBPN1pNbzZzZVV5UWQ4UFhLSndNdEJMS1ZGcGdGMVMzaVh1OU1wSTRKWW1JQmJrK0hVSlNRYlFwM3BwMEIwcVhOY2IzL0dWMUhaS1NSbllDbGE2WmROUXdKS2tva3VkaFZ0ZngyMTBZdk42Z1hjcnZGNWdBNFkxWEdpbUdrNGNZRm9JSFB3dXJqVVgrSU12aTRmWHhlcG5aSmtHZGdHZlowU3U0N2UyN1lHOGhmTVVhTWc3bzNnWUVMWnY3QVBHUkV2TXI4WGNnNkpON3EyYnR5ajZYa0V2QWprVkl6YnNHb1IzU1NoS0ZLL3JkWmM0MHBMWFc0UWxIa0tydmIxRENuZUpjTDJlZS9vWDVFMDNMR2ordkRZNXQ1M2kwZmxKU0U2UUJlMFJ4bmdmZnVVYVp1VS9BTDhNYkFSWldlUGxYS01GWFNZL1JUZDMzNVdXSjFQSjRzbUhDSXBVMzl0NGdPcG5OLzVVdHU0NFVPSSt3YmFBWFpLTFZGazJCaXpaQy9US1VqUzYwdFBmM25RK3lqc0ZYcU93VHBDaFc4WWM5SEtYN09GYmJSY0RwVHk2dUZtTEJzTjZSYXRmdXRvTGJCUHBYYzhIdHQyOUZMRzZWNWF5ZUpCVzBwWUw5bno2WXN0Szk1RENNaEhwNlExdmdudjNiVkhsSFNBWEM2elJRWHpveFZwZDNQTmljRXFoSk5OZFNGa2JnMm1GU2FsZUt2ckh3dGQyeU5aQmJZSHlXYkFZcjFZQ3BndXVCYmJ1Y3dLVStQOTROYVppaVBsTSthcFJtTndpNkR1Qmk0RFZDbU5kcytYRmdKYzg1T3BLYVM4aXpwc1c5QkJ3RjhqSEZiNG80OXVuYzVZSjdIa3QyVmd1TlNoWkYwLzBMRGhXaWhxNTFOMldtUG91YnFCVmY5MGxZeHhldmdYNFZkQkxGRllMclBCT3JNU1RGa011OFBmb2RVMXNTbUpIakhLTFZvV25BRk5hbmJlOERlU1RBdHRrNjQ3WjFPS3V3VElDT1dYMGpGTk1QNmZJWWZ1aWZjQlNIMThhSDZZR0lpdE1EUlBTZzFlK0hQajN3R3RBemdRZEEwYXRhU3lOQlVzVnJ5UnI5V2hZMXpXa3JGOVZyMzBxeGRzTDNBVDhoZkMxT3huMzUyQklPMk1jdWlZWE9SNDFuUlNQMW1HRUZHRkxzSlNBWFpVcVo3NWQrTkNXZGN6cGxhQy9ySEFCeUNwZ1ZLQ1gycHZMWmF2SFM1bWlmWUZaa0tPSzdoVDRESXpleVBqTnUzTGpWREttT1V1V28xZmFMdVl4dElCTEhaQXVkZUJhM0hiaXFsSFlmeUh3Qm9VcnBUcjJOYVlEWlF4UlUxYUtxRzR4U3BTaTY4a3hLT3NyekFvNnBkVjNjYjhBdmI4UjF0eGR2NFVLbG5aT1BHVUt5MHAyTDdxRVpNa0RxU2xCdTJaVFhkc3RKTkZwMUZXeDRvWEFhNEZYYS9Xc2VTVXdDdHFySmprZnhaWEdhNHRMZUlZVSsxcWR5enNxc0ZQaFN5TDltemhwNW03ZWMxc3JxZWdTNW9BZHU0WGxJVTJMUm03dVNoVzRjUjhyWUNvK3NMUThGZVRXNWFtMnVjL0YwR2kwM2JwcHZjS2xBcHRCTHdZMmdLelErZWZPdmRMOXVyekxUQ3RqWU9FUTZJTk9BUThxY3BzZ1g2UEhON2gyMjlDOUR0c1ZqRWx5c2t2ak1zZGRsc1NOdVRneXBtaytDeTZOeFJZY3N4a1FEMDdjZ1pMZ09xWVYwbXUxbmJoOEhjeGRxSENod0lzVkxoQllyK2dLcVhMTWdXSU9GbWhIK3hhMm0xYzRSWkFwaGQwQzMxTDRObkFYak53bDR6ZnY4U2JXNmt2SkdIaUtGNDV0SjNlNUNNWHp5anFkaG1rMUxuUUJpNkVMN1lHM3loYkRmMGp6dzY5YXhkenNldnF5RVdRRDZJOHF1ZzVZQTdKYXFyM0hrd1ZHRlZZSXJBQlFtSkxxNmNNczFRSFBBNkFIZ0VtaHR3ZDRDUFJCZXZvQUk2Tzc1WnBianRSOWlQdHVqWWRWWDJydGNqaGRZL1hTV0xLVXh2OEhjUEhUWm02NTFYc0FBQUFBU1VWT1JLNUNZSUk9Ij48L2ltYWdlPgo8L3N2Zz4K" k="name"/>
            <prop v="0,0" k="offset"/>
            <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
            <prop v="MM" k="offset_unit"/>
            <prop v="35,35,35,255" k="outline_color"/>
            <prop v="0" k="outline_width"/>
            <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
            <prop v="MM" k="outline_width_unit"/>
            <prop v="diameter" k="scale_method"/>
            <prop v="40" k="size"/>
            <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
            <prop v="Pixel" k="size_unit"/>
            <prop v="1" k="vertical_anchor_point"/>
            <data_defined_properties>
              <Option type="Map">
                <Option type="QString" value="" name="name"/>
                <Option name="properties"/>
                <Option type="QString" value="collection" name="type"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol alpha="1" type="marker" clip_to_extent="1" name="centerSymbol" force_rhr="0">
      <layer locked="0" class="SvgMarker" enabled="1" pass="0">
        <prop v="0" k="angle"/>
        <prop v="245,75,80,255" k="color"/>
        <prop v="0" k="fixedAspectRatio"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="base64:" k="name"/>
        <prop v="0,0" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="35,35,35,255" k="outline_color"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="diameter" k="scale_method"/>
        <prop v="40" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option type="QString" value="" name="name"/>
            <Option name="properties"/>
            <Option type="QString" value="collection" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer locked="0" class="SimpleMarker" enabled="1" pass="0">
        <prop v="0" k="angle"/>
        <prop v="33,150,243,255" k="color"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="bevel" k="joinstyle"/>
        <prop v="circle" k="name"/>
        <prop v="0,0" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="255,255,255,255" k="outline_color"/>
        <prop v="solid" k="outline_style"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="diameter" k="scale_method"/>
        <prop v="25" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option type="QString" value="" name="name"/>
            <Option name="properties"/>
            <Option type="QString" value="collection" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer locked="0" class="FontMarker" enabled="1" pass="0">
        <prop v="0" k="angle"/>
        <prop v="A" k="chr"/>
        <prop v="255,255,254,255" k="color"/>
        <prop v="Arial" k="font"/>
        <prop v="" k="font_style"/>
        <prop v="1" k="horizontal_anchor_point"/>
        <prop v="miter" k="joinstyle"/>
        <prop v="0,-0.40000000000000002" k="offset"/>
        <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
        <prop v="MM" k="offset_unit"/>
        <prop v="255,255,255,255" k="outline_color"/>
        <prop v="0" k="outline_width"/>
        <prop v="3x:0,0,0,0,0,0" k="outline_width_map_unit_scale"/>
        <prop v="MM" k="outline_width_unit"/>
        <prop v="11.8" k="size"/>
        <prop v="3x:0,0,0,0,0,0" k="size_map_unit_scale"/>
        <prop v="Pixel" k="size_unit"/>
        <prop v="1" k="vertical_anchor_point"/>
        <data_defined_properties>
          <Option type="Map">
            <Option type="QString" value="" name="name"/>
            <Option type="Map" name="properties">
              <Option type="Map" name="char">
                <Option type="bool" value="true" name="active"/>
                <Option type="QString" value="@cluster_size" name="expression"/>
                <Option type="int" value="3" name="type"/>
              </Option>
            </Option>
            <Option type="QString" value="collection" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property key="dualview/previewExpressions" value="fid"/>
    <property key="embeddedWidgets/count" value="0"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer diagramType="Histogram" attributeLegend="1">
    <DiagramCategory opacity="1" diagramOrientation="Up" rotationOffset="270" direction="1" scaleBasedVisibility="0" backgroundAlpha="255" spacingUnit="MM" barWidth="5" sizeType="MM" sizeScale="3x:0,0,0,0,0,0" lineSizeType="MM" height="15" showAxis="0" width="15" backgroundColor="#ffffff" lineSizeScale="3x:0,0,0,0,0,0" scaleDependency="Area" minScaleDenominator="0" penColor="#000000" penWidth="0" spacing="0" spacingUnitScale="3x:0,0,0,0,0,0" enabled="0" minimumSize="0" labelPlacementMethod="XHeight" penAlpha="255" maxScaleDenominator="1e+08">
      <fontProperties description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" style=""/>
      <attribute field="" label="" color="#000000"/>
      <axisSymbol>
        <symbol alpha="1" type="line" clip_to_extent="1" name="" force_rhr="0">
          <layer locked="0" class="SimpleLine" enabled="1" pass="0">
            <prop v="square" k="capstyle"/>
            <prop v="5;2" k="customdash"/>
            <prop v="3x:0,0,0,0,0,0" k="customdash_map_unit_scale"/>
            <prop v="MM" k="customdash_unit"/>
            <prop v="0" k="draw_inside_polygon"/>
            <prop v="bevel" k="joinstyle"/>
            <prop v="35,35,35,255" k="line_color"/>
            <prop v="solid" k="line_style"/>
            <prop v="0.26" k="line_width"/>
            <prop v="MM" k="line_width_unit"/>
            <prop v="0" k="offset"/>
            <prop v="3x:0,0,0,0,0,0" k="offset_map_unit_scale"/>
            <prop v="MM" k="offset_unit"/>
            <prop v="0" k="ring_filter"/>
            <prop v="0" k="use_custom_dash"/>
            <prop v="3x:0,0,0,0,0,0" k="width_map_unit_scale"/>
            <data_defined_properties>
              <Option type="Map">
                <Option type="QString" value="" name="name"/>
                <Option name="properties"/>
                <Option type="QString" value="collection" name="type"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </axisSymbol>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings dist="0" linePlacementFlags="18" zIndex="0" showAll="1" placement="0" priority="0" obstacle="0">
    <properties>
      <Option type="Map">
        <Option type="QString" value="" name="name"/>
        <Option name="properties"/>
        <Option type="QString" value="collection" name="type"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions geometryPrecision="0" removeDuplicateNodes="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <referencedLayers/>
  <referencingLayers/>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias field="fid" index="0" name=""/>
    <alias field="osm_id" index="1" name=""/>
    <alias field="name" index="2" name=""/>
    <alias field="amenity" index="3" name=""/>
    <alias field="hstore_to_json" index="4" name=""/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default field="fid" expression="" applyOnUpdate="0"/>
    <default field="osm_id" expression="" applyOnUpdate="0"/>
    <default field="name" expression="" applyOnUpdate="0"/>
    <default field="amenity" expression="" applyOnUpdate="0"/>
    <default field="hstore_to_json" expression="" applyOnUpdate="0"/>
  </defaults>
  <constraints>
    <constraint field="fid" notnull_strength="1" constraints="3" unique_strength="1" exp_strength="0"/>
    <constraint field="osm_id" notnull_strength="0" constraints="0" unique_strength="0" exp_strength="0"/>
    <constraint field="name" notnull_strength="0" constraints="0" unique_strength="0" exp_strength="0"/>
    <constraint field="amenity" notnull_strength="0" constraints="0" unique_strength="0" exp_strength="0"/>
    <constraint field="hstore_to_json" notnull_strength="0" constraints="0" unique_strength="0" exp_strength="0"/>
  </constraints>
  <constraintExpressions>
    <constraint field="fid" exp="" desc=""/>
    <constraint field="osm_id" exp="" desc=""/>
    <constraint field="name" exp="" desc=""/>
    <constraint field="amenity" exp="" desc=""/>
    <constraint field="hstore_to_json" exp="" desc=""/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction key="Canvas" value="{00000000-0000-0000-0000-000000000000}"/>
  </attributeactions>
  <attributetableconfig sortOrder="0" sortExpression="" actionWidgetStyle="dropDown">
    <columns>
      <column hidden="0" type="field" width="-1" name="fid"/>
      <column hidden="0" type="field" width="-1" name="osm_id"/>
      <column hidden="0" type="field" width="-1" name="name"/>
      <column hidden="0" type="field" width="-1" name="amenity"/>
      <column hidden="0" type="field" width="-1" name="hstore_to_json"/>
      <column hidden="1" type="actions" width="-1"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <storedexpressions/>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field editable="1" name="amenity"/>
    <field editable="1" name="fid"/>
    <field editable="1" name="hstore_to_json"/>
    <field editable="1" name="name"/>
    <field editable="1" name="osm_id"/>
  </editable>
  <labelOnTop>
    <field labelOnTop="0" name="amenity"/>
    <field labelOnTop="0" name="fid"/>
    <field labelOnTop="0" name="hstore_to_json"/>
    <field labelOnTop="0" name="name"/>
    <field labelOnTop="0" name="osm_id"/>
  </labelOnTop>
  <dataDefinedFieldProperties/>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
