<!DOCTYPE qgis PUBLIC 'http://mrcc.com/qgis.dtd' 'SYSTEM'>
<qgis simplifyAlgorithm="0" maxScale="0" hasScaleBasedVisibilityFlag="0" labelsEnabled="0" simplifyDrawingHints="0" simplifyLocal="1" styleCategories="AllStyleCategories" version="3.14.1-Pi" readOnly="0" simplifyDrawingTol="1" minScale="100000000" simplifyMaxScale="1">
  <flags>
    <Identifiable>1</Identifiable>
    <Removable>1</Removable>
    <Searchable>1</Searchable>
  </flags>
  <temporal accumulate="0" enabled="0" endExpression="" endField="" durationField="" durationUnit="min" startExpression="" startField="" fixedDuration="0" mode="0">
    <fixedRange>
      <start></start>
      <end></end>
    </fixedRange>
  </temporal>
  <renderer-v2 toleranceUnit="MM" tolerance="20" type="pointCluster" forceraster="0" toleranceUnitScale="3x:0,0,0,0,0,0" enableorderby="0">
    <renderer-v2 type="singleSymbol" forceraster="0" symbollevels="0" enableorderby="0">
      <symbols>
        <symbol alpha="1" type="marker" clip_to_extent="1" name="0" force_rhr="0">
          <layer enabled="1" locked="0" class="SvgMarker" pass="0">
            <prop k="angle" v="0"/>
            <prop k="color" v="231,113,72,255"/>
            <prop k="fixedAspectRatio" v="0"/>
            <prop k="horizontal_anchor_point" v="1"/>
            <prop k="name" v="base64:"/>
            <prop k="offset" v="0,0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="outline_color" v="35,35,35,255"/>
            <prop k="outline_width" v="0"/>
            <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="outline_width_unit" v="MM"/>
            <prop k="scale_method" v="diameter"/>
            <prop k="size" v="40"/>
            <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="size_unit" v="Pixel"/>
            <prop k="vertical_anchor_point" v="1"/>
            <data_defined_properties>
              <Option type="Map">
                <Option value="" type="QString" name="name"/>
                <Option name="properties"/>
                <Option value="collection" type="QString" name="type"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </symbols>
      <rotation/>
      <sizescale/>
    </renderer-v2>
    <symbol alpha="1" type="marker" clip_to_extent="1" name="centerSymbol" force_rhr="0">
      <layer enabled="1" locked="0" class="SvgMarker" pass="0">
        <prop k="angle" v="0"/>
        <prop k="color" v="245,75,80,255"/>
        <prop k="fixedAspectRatio" v="0"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="name" v="base64:PD94bWwgdmVyc2lvbj0iMS4wIiA/Pgo8c3ZnIGlkPSJteVN2ZyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+Cgk8aW1hZ2UgaGVpZ2h0PSIxNjAiIHdpZHRoPSIxNjAiIHhsaW5rOmhyZWY9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBS0FBQUFDZ0NBWUFBQUNMejJjdEFBQUFDWEJJV1hNQUFBN0VBQUFPeEFHVkt3NGJBQUFnQUVsRVFWUjRuTzJkZDNCYzE1V252L002SUFQZGpaeEJFQ0FoQ2lJQmtxSkVVb0hLb2tSTHNxTFhZV2NzaWFRMDluakdzK1dkZGJsY1UxNlYxelBqOWRUTWVtU0xwR1RQT0k1bFdjbktraFVzaXBJb0JqQW5aS0NSMFJrTm9OSDk3djdSUUFzZ1NBb2dFYnFKL3FxNkFEUmV1Sy9mcis4NzU5NXp6eEdsRkhIQ2JGMWRtTXl3dXp5a2FXVUdnNVRyU2x1S01wU0F5aEloQzNRTDZNa29UVU4wSXloamVFOEpvclFnb3V1ZytVRnpLVVVmU0o5b29XYUZma0tGVkRQb3pRWlRSdU8yUFhiL3ZGNW9GQ0VMVllCYlY2ZG5oVWE0VWtTdVFFeFhpZ290UjNTYmtPRFhWVEpDc2xsSlNpSXFBVEFqWWtLUmdHQkFBWUtHd2dDQUVFS2hJNEFpaUJCQXFSRWdBRElNTWpDRTdnK0FINUhoWkYwMzlJbW1IUlkxdkV0WDhvbkJ4RWZiOW5qNjV2SGptRGNXakFBZldaR2FveHNNTjZNTXR3TlhRU2hMcVl3aEpETmRTTlZRNlNESmdJUjNtTUdQUlVua3FJQkNLVDhpSHNDbksvbzlnanNSakgwaWFtZElENzFzVktFM25qamc2NW01RmtRdkY3VUF0eTYzckF3WnVVOVRocnNnV0FTWkFjaXhnUlZJUVNrTmtkUDNtdlRHREtNbS9TWG93QURnUktrZW45Q3ZnYWtkMFovVjFkRHZucXp6MTgxeW8rYU5pMDZBbTFlbEx0ZDA0NWVVcm4wUjBWS1ZGQ2Fqc3N3aVZzTGlHaSt3MlJiYlZQbjBIaWlsRUZHQUUrZ0xLR1gzQzdwUFJQK05DZ1YvdWYyZzcvQzhOWE1XdUNnRStGQlZkcW9rRG40QnpIOGpJa1ZDVVRJcTE0eGtqRzRocC8yTWR0UnBQejFBWndEVjdoZE5Xa042NE1kcUtQRy9uanJlNjV1bkJzNFlNUzNBaDFha0w5RTAwN2RBdjF1VVRWT1VXRVJzZ01iazNpNldVYU12SFhDQWFuVXBjZWlnUFN0cTVJZmI2enduNTdtQjUwMU1DbkJMYmVwVlNoSytyWFIxcFZDYUtsSnNCak1LYmI2Yk5pZUViY1lBaXJhQTBPSkg4WkVtZ2U4L3NkKzNjNzdiTmwxaVNvQ1ByRXk3U2crWmZvQVlxcFFzdGtHZUpwaTR1SHE3cVRMV0s0NmdWS2N1MHVnUTlLTzZQdkx0SFFjOHUrYTdkVk1sSmdTNHBUWmpwV0Q4b1VLcVVVdXpGTG1haUlHRktielRVU2dVcUJBaVhicFNwMXlpOUlPYUlmUS9udGpuMmpmZnJmc3NvbHFBajlZa0Y0UWs0UWNLN1Zhb3pCSUtOSWdMNzh5TTlvZ3FDSFRxeUNtSHdDdEJHZnIyVS9zR091YTdkV2NqS2dWNGY3V1lyU2JMM3ltbC9rWkpxUVZWbG9pWWtBVmk0MTA0T2pBQ05Qa1ZyUjRSK1pGb3JuL2R0a2NGNTd0bHB4TjFBbnhrWmZycWtHN1lJV0lwVWx5U0pTUXZHT2RpcGhGMEZBT0lISE9nM0szbytrUGJEN2lqNnJFY05RTGN1cm93V1FVSEhrTzBMMEpWRHVScFlDVCtxTDFRRkJBRXVuVFU4YjZROEJ1akllazcwUklRRVJVQ2ZIaGx4bklEaGw4cTNWYWtwTW9tSk1Mb1JIK2NtU0lFREtFNDd0S1VveFVWK3NxMkErNkQ4OTJxZVJYZzkwUzBqbHJMMytxS2IwSlZnWkFmNy9WbWxkSGVVSFhxY0x4TFJINjRiYi9qWCtlelJmTW13SWVyTTJ4aWxLZEUwdGFocW5PVXBDRHhYbStPQ0lIeWdSenUwZkh2TklkQ0QvM2tvTnMxSHkyWkZ3RnVya21wRmpIK1dxbThDcEdxWkVpWTh6YkVBUWlnVkwxUGFHOVZvcjYwWTc5N3pxTnU1bHlBVzJyUzdsQmkvRGZoa2hJVmNUVGl6QjlCaEU1ZGNid2RDWDV0eHo3dlMzTjU5amtWNE5hVjFpMUsxNzZyWkVXUllDUHVhRVFMSVJST29LNWRDUDU0KzM3M1A4L1ZtZWRFZ1BmZkw1cWwzdklqVWVaN0ZUVkZrQTd4c2Iwb1F3YzhvQTUyaVFSKzQ2eDBmT3ZwcDVVKzIyZWRkUUhlWHkzbURKTmxtNUM2Q1Zaa1FSSng4VVVyT3FoQmtBTjlDdCtMbXNHMWRiWm5UMlpWZ0g5ZEtlYWhsSXluRU10dFFyVU5rbWZ0WEhGbWtrSGdpQU1jYjZRbXVyLzZMeCtxb2RrNjA2d0o4Ty9XU2FKM3dQcHIwYXpYdzZVV1JlS3NuQ2ZPN0NBTUE0YzlTam5mU2t0MmZ1bGZkczJPQ0dkRmdLT1AzWitqckp0RXF0TWhrZmpnY3F5aENNK2NIUEdBNDdWRW4rc3JQejZsQWpOOWxoazN4dTYvWDdRTW8rVnh5TGcxTHI1WVJvQkVoRXZUQmV2Tnd5bVdiZCs3VG1aOHpHekdCWmgrMHZJakpQMHU0VEpiWEh5eFRsaUVZUk1xN1k1MnQrVUhNMzZHbVh3RWI2MjFmRU5YU2Q5QlZ1WUlLVE4yM0RqemoySUExTDRlR0hwc1I1M3ozMmZxdURNbXdLMjExanNVaHNjVks0dkFNaVBIakJOZGlIS2gyTmVLRnZyckhmdWNMODdNTVdkQWdKdFhwUytYa09FUGl0b0trVXppNDN3WEt6cEs5WUhVMVN1bDMvTmszWVdIYzEyd1VqWmZsbW9UcGYwY1dWcng2WnJjT0Jjbkd1RU9abW1GSUU4OXVpTE5kdUZIdkFDMnJoYWpNcGkzb1FxWFFRSHh1ZDJGZ0FFb1FLUndlVkJNajErb1ozeEJPNnVRNWVzaUtkZkQ0c1R3b2VZL3Vqck83Q01ZZ2NWbXhIMXp1MU05QXB5M1UzTGVOdURtRldrMW9wbGVnTlZGS0V2OHVic1FFWmV1MUo1V1pPUytIZnU5ZTg3ckVPY2p3Sy9XV3RPTlNyMHFVclVPaW9uYmZRc1ZIV2pYRlVkM3F4RTJQbmw0K2xIVjU2VWNJM3hYeUZrWnR2dmk0bHU0YUVDK0p1UXMxMHphdDgvbkNNSTBGYlM1Sm4wTnl2Z0h1TElBU1QyZmM4YTU2UEFCSDNlZ0IrN1pjZEM3ZXpwN1R1c1IvTjlYNUNVbWFrTi9na3V1aE9KNDF4ZG5IRzI2VXNjK01nZk5OejErdUdmS2E0Nm41UVVueU5EWHdWYUR5bytMTDg1cDVHc2lYVFVqQnRjandMOU1kYThwOTRCYlY2ZVhxWkRoSFZoVEZwOXFtNGc1S1lHTkQzNmVpcG9sS0FXQndXR1VVZ3dQRGhFYUNUTGc5dUYxZVJodysvQTV2ZlIzOWRKdjc4WG44czUzMDJjWUo2aFBHa01xZE4xVEJ6eXRVOWxqNmoxZ3lQQWRWRkVKa243ZXpic1lzV1JidWVkdnY4U3l0U3RJdGFRQm9JZDBRQkVLNmlpbEV4d0pFaHdKRWhvSkVnd0VHUjRhSmpBNGpNL3BvZGZlUTl1SlpscVBOOUhaWkVjUGh1YjNnaTZJREpDaUVxSDlPOERXcWV3eEpTZmtvUlhwYXdUekN5Slg1c1RENmorbHVLcU11Ly82aTFUVVZwR1FOUDIxemFGZ2tDSC9NSVBlQVFZOFByeE9EODJIR3ppMit4Q05CMDhSR29tNlpGWlR3SS9pb3g3VThPMVBIdkIrWmlLa0tUMkN0OVRhWGxacThhMGlpN1I0ZkYrWTVkZXM0dmJOZDFOU1ZZYkJHSDZRMUwzekNjMUhHekNhakJpTUpreG1JK2JrUkZJeVVrbEpTeVlsSTUyTWJDdnB0ak0vUmZTUXpvRGJpN3ZmamFPcmp5TzdEckR2clk5dzk4MUwwb0x6UkFHTk9ucjlLOXNQdUQ3M1dWdC9wZ0MzMUtSdGdPUS93Rm9ibUdlb2tiR0xHQXhjZTk5TlhQZkFMZVNWRm9DQXJ1dTg4N3ZYK2ZQdjM4VG44aUthaHFZSm9ta1lEQWFNWmlOR2t4R2p5WVFwMFV4S1JpclczRXh5U3ZJb1hGeEVmbmt4R1ZrVDdXcGQxM0gzT3VucjZPWElyam8rZVA1ZFBIM09lYnJxNlJJQVBuUW81Yjl6eHdIdk9mTlduMU9BOTk4dm11V2s1VTFZc2dFcFcvQ2ViMEp5QXJjL2ZBOXJibDJQTFQ4TGdLRUJQMy9jOWdmMnZMRUxaN2RqU3NmUkRCcm14QVNTVXBOSVRrc2hLUzJGbk9JOHlwZFhzcmhtS1FYbFJjaG9CUjJsRko1K0Z4ME43WHoweXZ2c2ZtVW5vWml3RTV0MXBVNitYWFRBZGNzL3FMT3ZMejZuQURmWHBHNFFVcDlEMWxvV2V1OW56YkZ4MTllL3dHVlhyNHc0RzQ3T1hwNzc5Ly9pOE03OURIZ0dMdWo0NWtRemFiWU0wbTBaRkZhV1VMMitodXIxTlpnVHc3YWxydXYwMjNzNSt2RWhYdnZaYy9SM1JudHB1UUN3eXdVRG45dCtqdXo5NTNSQ050ZFluMU5xOFNhUjhnWGQreFZYbFhIWDF4NWd5YXBsSkNTRmw1YzJIMm5naGNkL3g2bjl4d2dNemV4aU1YTlNBcmJjVEFvV0Y3SHl4aXVwdlg0TkpyTUpnTUdCUVpvT25lTDV4MzlIOCtINkdUM3ZUS05VZzQ0MHZQUmtuZXZ6Wjl2bXJEM2dJeXRUcTNXVjlBNnN5MklCcitsZGZzMHFOajU0SjJXWExvNDRHL3ZmM3MxclAzK0JsbU9ObzBNdXM0UEJhQ0NyTUlmeTVaVmM5OEF0bEYxYUFVQW9GS0xsV0NQUC9kdHZPYkhueUt5ZC84SVpRcWtQK2pRQzEyMnI4NXl4eE5oWnh3RjFaZjRhNU52QzVVb1hYcHlmWmpCd3piMDNjdTE5TjFPd3VBaUFVRERFdTc5L2d6OC84eGFkamUwd3kybE5RaU5CdXBzN2NIVDEwOVhVd2JvN04zRFZYZGVqR1RRV1hWckJ2ZC84TXIvK1AwOUdjVStZZ0VpQlRhbjJSNEd2bldtTE0vYUFXMWVuMlBSZ3dpR1J0UVd3OEFJT0VwSVQyZmpnWGF6WmVCVlpCZGtBRFByOHZQTFVjM3p5Mmk0Y1hmTmpmMlVWWkhQNXJldTVmZlBkbUJNVFVFcHhmUGNSZHZ5dmY0M2lXUlVmOEVGSFNBS1hQYlhQUDhsTE83TnRweHZ1RXF3MkZ1RFNTbXR1Smc5ODZ5KzUrdTRiSXVMcjcramx2Lzc1UDlqNTNOdnpKajZBdm81ZTNuLzJUN3k4NDFsQ3dSQWlRdVhLS201NzZQTVJyem42U0FHeDJqU01kNXpwdjVxSVRIaDlUMFJUU25zVUtUSXZ0RUhua3FwRmZQSGJEM0w1TFd0SnM0WUhpNXVQMVBQYmYvd1plOS84a0FIMy9CZW45TG04dlAvYzIvenB0NjhDWURRWnVYTFROVlN1dkdTZVczWTJCRlNKR2FVOStyM1R0Q1lpbXFhVTBzZS83RFhKeThHOEJKV3BSY3FSTFlEWDhtdFc4Y0MzL29McTliVVJUM2YvMjd2NTNmLzlUdzd2cWlNd0dKajNObzY5ZkE0UDcvMytUVG9hMmdGSXRhU3hhY3M5NGZzZEJlMmIvTXJVQk5PUzloVXB5MDdYMnhtY0VOTjlxSndGczhoSU14cTQrdTRidU9hZUd5bGFVZ3FFamYvM25ubUw5NTk5QzN0OUc3UHRiRXdWUzQ2TjRrc1dVVnhaU21GbENXbTJkTVpzK0lxYXBaUmNVazdyMFlaNWJ1V1pNSUxLU1VZNjdnTU9uL2FmVDltNldveGd1UmNLekdlb1pYL1JrWmlTeEMxLzhUblczSFkxMllVNUFQaTlBN3orSHkreSs5VVA2Ty9zRFc4NFQ1K0ZLY0ZFd2VKaWlwZVdVYnkwbE96QzNQQmNjcWFGTkdzNm11RlRFOTVvTm9Ybm1LUDF2cWxDTTNSOFlldHFlV3g4MHNzSkF0UkRhY3NGYzhGQ0NMbXk1bVZ5KzBOM1UzdkRtb2k5MTkvWng4czcvc0QrdHo5aHdEMC9YcVV0TDR2aXBhVVVMU21qWUhFUmxtd3JHVmxXTXJJdEVkTmdQTUdSSUVaVCtEWU9EdzdQZFhPbmpxUWptQXBVTUswYWlHVGpONHBJNUd2MGNJMzE4NmpzUk9UaVhtQmV0S1NVVFZ2dVlkbmFGU1FtaDI5cTYvRW1YdDd4TEVkMkhTQXdOSGMzMG1nMmtWOWVSRWxWR2NWTHlzZ3V6bzJJTHRXYWhxWk5IS2dZQ1l6UTJkQk82L0VtMms2MmNPT1hiaU83S0JjZ3l1ZUlEYUN5ellqOURoR0pwUFF3cW5FVHhadHJyWGRBcnZGaU52MldYN3VLRzc2NGtTV3JMc0ZnTktLVW91N2RQYno5bTFjNXRmLzRuQVNFV25LdGxGUXRvbUJ4TVlVVkpWaHlyRmh5YkZpeWJXZU1LM1QyT0dnOTFrUkhReHNkRFcwNHV4MjRlaHk0ZXAyc3YrdTZpUnRIOGIxVDVKcUZqbnVVVXY5NzdMM0lJM2pMaXJRaXhGUU9HVVQxVlp3bm10SEkranMzY08yOU4xRmNWUWFFQTBKM1B2Y083ejN6SnUwblcyYk4yVWhJU1NKL1VXSFlucXNxSTZzZ0cydE9KaGxaRnRJeU15YU00U21sQ0F3TzBkRm9wNk9oamJZVExmUjM5T0RvN3NmZDU4TGI3MGJwNDZmL1ZNUVJDZitNM25zbldGQkt5aDljbmw3d3M0T2VEaGh2QTRyaEtyQVlFZE84TlhDMlNFeEo0c1l2M2M2Vm02NG1wemdQQ0RzYmIvN3lKVDUrNVFQNjdOM2hEV2ZJZ0JjUmJIbFpGRlFVVWJ5a2pJTEZ4V1JraCswNFcyNW1KTUpsREtVcitydDY2YWh2cDZPeG5mYVR6Ymg2SExoN1hUaDYraGs1UGRoaFhEc0ZpUWhZUktMWENRSEFoSkJoMUxUK3E0Q25ZWUlUWXJnZHNpNjZtQ3RMam8xYnYzb25xMjllUzdvdEF3QkhWeit2L3V3NTlyNzUwWXhOWVNXbUpKRmJtazlKVlJsRlM4cXc1V1ZoeWJaaXpjMGt6WlkrYWFaaWNHQ1E3dVlPT2tidHVUNTdONjVlSis1ZUorNStkOVFNL2N3ODJXWVIxKzJNQ1hETUNkbGNZN2xHc0YxVVlWY0ZpNHZaK05CZHJMaDJGWW5KU1FDMEhHM2s5Zjk4a1lQdjd5TndBVjVqdUpmTHBHaHBHVVZMU3NrckxRajNjSGxaV0hNekkrRlRZK2k2anFPcm44N0dkdHBQdG1CdmFNUGQ0OFRWNjhUUjFjZkk4SXpuLzQ1U2JKckFOV082TXlxbDlLMnIwd3Iwa0dTSlNpR2FiWWpwVUhYRmNtNzZ5dTFjY3NWbGtXR0tZeDhmNHJXZnY4Q0pQVWZPeTlsSVRFMm1ZSEVSUlV0S0tWaGNqQzAzRTJ0ZUZyYjhURkl6MGliM2NqNS8rSkY2b29XT2hqWWMzZjI0ZXB3NHUvdnd6RkF2TitrSVVkOXpwb0JJenVZVmFUbmI2enhkUmdBVmtocFVLaGREZmovUk5DNi9kUjNYUFhBcjVjc3JnYkN6OGRGTDcvUCtjMi9UZVBEa2xHK1NhQnBaUmJrVVZaYVFYMTVJYm1rQnRyek1jQytYWThOZ21qaVJwT3M2ZmZZZTJrKzIwTmxvcDd1bEEwZDNQNDdPUHB3OURrS0JrUm0vM3NsT1NMUmpBSlVDdUd1QTE4S2ZvSksxaURYbWd3L01pUWxjZTk5TnJMOXpBd1dMaXdFWThnL3g3dTllWitmemI5UFQyaFhlOEJ5R2Vxb2xqZnhGaGVRdEtxU3dvaGhiZmphWmVWbFljbTJrV2liM2NqNm5oNDRtTzExTmR1ejFiVGk2K3VqdjdNWFY3WmhzWDg2Q2d4QmJUa2dZcGF4bVRieHJpUWdRd3hvaEk2YnJwcVpaMDdueHk3ZXpkdE0xV0hMQ21XTmRQUTdlL05YTDdINTE1MW1YTm1wR0F6bEZ1ZVF0S3FTb3NvVGMwZ0tzdVRhc09abFk4eklqais4eFFpTkJldHE3NldxeTA5WFVnYjJoRFdkM1A4NmVmcHhkL1ZFK0dCd2RpR1FZRmRwcUdQV0NGU3dYMHVhM1ZSZEEzcUlDYnZyeUpsYmRlQ1hKNmVFWXhvNkdObDcvanhmWjkvWnVodjBUcTB5bFd0TElLeXVnc0tLRWdvcFJXeTQzazh5Q2JGSXlKZ2ZnZXAwZXVwbzc2R3EyMDM2eWxmN08zckRvdWgzNG5KNDV1Y2FMaXpTQTVRREdyYXRUMGdXekpWekZNdlpZWExPVW0vLzdKcXJYMTJJMGhXYzJUdTQ5eXB1L2Vwa2pIOVFSQ29Zd21veGtGdVJRV0ZsTVVXVUptUVU1MkVZRlo4M0xuRERkcFpRaUZBelNaKy9CWHQ5Tys2a1crdTNoZ1dCbmR6LzluWDFSbHo0ak5teS84U1FCZXRhRHRXbXB4bEJJSzlFdzY3SG1nSWdtckxyeFNxNjU1MGFXcmw2R2FCcWhVSWc5cisvaXozLzRFNTJON1N4ZXNaU0N4VVhrTFNyRW1tTWpxekNIcktKY2tsSW1mOW04VGcrZGplM1k2OXZvYXU3QTJkMVBuNzJIUG5zM1F3UG5ydE5uTkJuSkxTc2dJU2tCcjhOTnI3MW5UZ2NUb2pjYSttd1lBYU11U2k4eUNsSU9TYk5lbUhnbU1TZWFXWC9YOVZ4ejl3MFVWcFlBTUR3NHhOR1BEdEhUMWtYVm1rdFpmK2VHc09BS2M3QmsyeWFFTGdFRUF5TjB0M2JSMGRCR1Y1T2R2bzVlK2p0NjZHM3Z3ZFhyUEcyNjYrd1VWcFp3NWFhcnlTc3J4SnhneHU4Wm9PbndLVDU0NGIxNWk2aUpEWktEb29iTGpTaFZCaWt4TXdPU2FrM2oraS9jeXJvN05tRExDMmNuQ0k0T2I2UmEwcWk5L2dxeUNySkpQRU12NStsellXOW9vN3VsazY0bU8vMmRmZlRadStucjZKMWtKMDZGN0tKYzd2eXJCN2gwN1hKTUNaOStoSlVyTHlITmxzRUxQM2s2MHJZNEV4RlN6U0xPTXFOZ3FFU1NZMEtBaFpVbGJMai9abGJmdkphVTlISE9nZ2ltQkRPVnRWVVR0aC95RDlIVDBrRm5Vd2RkTFIwNE9udnBiZThKajh0MTkxK3c3WFROdlRleDR0cFZpQWhLVndTR2gwbElTaVE5TTRPcjc3NkJFNThjNGZBSGRaOTlvQVdJSWpsUnhMalVpQmpLWVBxcHhlYWFKYXVXY2VPWGI2ZDZmUTBHbzJHQ2VBekdzUDJxNnpyT3JuNDZtOEtEd04ydG5mVGJlOE8yWEdmdjVFbjlDeUFoT1pFcmI3OHFjdDUzbjM2RHJpWTdLMis0Z3FXWFgwcFNhakpYM0hiVm5BZ3c5cHdRQ0d0T0t6RUNPYkdROStYYSsyNmlac1BxU2U4UER2anBidTZrcXprc3VMNjJibnJ0UGZUWmUvRDB6MTVhczNSYkJobFpWZ0FHUEQ1ZSsvbnp1SHFjK0Z4ZXF0WlVBMUM4dEd6V3pqK2UySE5DWUZSek9VWWdDNkkvQkdzc0d4V0F6KzJsK1hBOTNTMmQ5TFIyMGR2ZVRaKzloLzZPWGtibXlPWWFuL0JKRXczTkVPNkZ4OUozQU9neDJUUE5GU2FBTENQb2xsZ1FvTHZuMDl4NEI5L2R5M3QvZUlzK2V3OWVoM3RLKzRzSWVhTkJvYW1XVkRSTncrOGRvS3U1Zy9hVExkT2V3ZkQwZTNCMDlXSEx5eUlwTFprN0hyMmY3cFpPbGw5ZEc5bW01V2pqdEk2NXNEQ2pVQllqa0hpQkplUG1oT0hCVDczVXBzUDFOQjA2TmVWOTB6TXpXSDNUV2lwWExTT3ZMSi9rOUxBQUIzMStldHU2YURoNGtyMXZma3gzUzhlVWp4a1lHdWFERjk3bDlzMTNvMmthYXpkZFEyQndtSVRSTlNZRGJoOGZ2ZlRucVYvZ2dzTUlxR1NqVXJwUlltUVIwdmtZMjliY1RHNzVpOCt4YWx4QTZoanBtUm5rbHVaVFVWdEZ3ZUppWHYrUEYyazcwVHpsWTMvdy9EdmtGT2VHMDZjbG1ERW5oZk8xdUh1ZHZQZk1XOVRYblpoMmU4K0gySFJDTkVBM0dzT2xEMlBEaUoydXNXMU9UT0NtcjJ6aTZudHVqQVNJT3JyNjZHM3ZSdGQxck5tWjVKYm1rNVNhek9XM3JNTm9NdkxiZi93NTdpbW13blYwOWZIeWptZnBiTFJUV0ZHTU9Ta0JyOU5EMDZGNjlyNzUwVG1UakJ1TUJuSkxDMGdielJmdGRYcm9idTQ0cjJDRzJIUkNOQVNNUmtGcHNWYnZiYXJmOTB2WHJlQ3F1NjdEWkRZUkNvYW9lM2NQaDNmdXA5ZmVqZEoxTE5rMnFpNnZaczNHOVNRa0oxS3pZVFV0Unh0NTlXZlBUN2t0WGMwZHZQNkxQNUpkbElNNU1RR2YwL3VaQ1l6eXk0dW8yYkNha3FwRkV3VFllcXlKdW5mM2hGTy9YZlFJQ21XTWZ1UHZQTkUwalJ1K3VERXlJM0w0Z3pwZTJ2WU05dnFKOVZQcTl4OW5aR1NFNng2NEJjMWc0T3A3Ym1EbjgyL2pkVXc5eWlVMEVxU3JhV3IyWTlHU1VqWStlQmVYWFYwYldTWXd4cVhyYWloYVdzcHJQM3RoV3FaQUxLTXBSQStYM1l3ZHB2TEF5U3JLb1h6NUVnQ0dCZ1o1OVdmUFR4SWZoTmZjdnZHZmY2U25MUnlzbWxXUVE4V0twVFBaM0FoSmFjbmM5dERuV1gzVFdoS1RrMUJLNFhWNjhEcmNLS1ZJVEU1azlVMXJ1ZTNoejBmQ3lpNWVGSUlFTlJUQldGa0hvcFNhc3NGZHZMUXNNbVBTZnFyMW5GNnpvNnVQb3g4ZWpCeC8wV1dWTTlYa0NWU3ZyNkgyK3N0QndsNzBoMy84TXkvditBTXY3M2lXWFMrK0YvSDBhelpjem1WWHJaenljYWZ6dVVRUE9ncUNSaEV0QUNGekxBekZUTWZZenNpeVJyYnZiR3ovekJ0a3IyK05iRy9KdHA1L0k4L0IyczlkR3htb1B2RGVYbDU4NG1rY285bnViWG1aR00xR3J0aDRGUWFqZ1hWM1hNdkhyN3cvcGVQR3BoT2lBMXBRQTRZZ3RrcENUZVc3UG42bTR2VEZRMmRpd2d6R0ZFT3hwb09Jc0tpNkl2TDMyNzk5TlNJK0NLOVYvdE52WG9sOFVjb3VYVHdwaE96aUlnaUlYd1BOQmJFVk1sUjZ5U0lXVlZlY1UxaDk5dDdJNzBXVnBSak41NTd0S1IvMzJPMXQ3N253UnA2R1p0QklUdnZVcnV0c3NrL2FwcXVwSS9MdFNrcE5qZ1JaWEp3RUFIRnBDdnJDZjBRMzR4K2hLemFzWnRPV2U3aitnVnZJek04KzQvWnRKNW9aOUEwQ2tGOWV5R1hyYTg1NjdKS3FSU3k5L05Md2VYU2QrcnJqTTlqeU1McXVNelF3R1BrN3V5aG4walpaaForK04rUWZJaFNNTGVkd2VnUUEralFOZW1LaEIrenI2STBZMjJuV2RLcXZxdVZ6ajk3SHJRL2VTZFpvZXJMeHVIb2NIUDBvN0ZnWVRVWnVmZkF1TGwyM1lrSlBLSnJHb3NzcXVlM2h1OG5Jc3FDVXdsN2ZPaXR6dUVwWHRCNXJpbHpEdGZmZVBLRStYSHFtaFEzMzNSeE9xYXdVYmNlYjBFTlRHNVNPVFNka0JJRWVvMUtoVmlTS0V4dU9jdkM5dmVRVTU1RnFTU096SUp1OHNnSVNrNU80K3U0YlVFcng3TC8rbXFIVG9wci85TnRYS1Y5ZWlUWEh4cUxxQ3U1NDlIN3EzdGxObjcwWFhkZkp5TEpTdmI2R1M5ZXVRRVFZOGcveTFxOWVtZEJUalNjelA1dWNranlNWmhNK2x4ZjdxZFpwNVJMODZPWDNxVmhaaGNGZ1lQVXRheG55RDlGNnJCRUZsRll0WXMzRzlZZ0llaWpFaHk5UHpRR0JXSFZDaGdHOTFhZ0luUkxsRHlEUkhSVFllcnlKWi8vZmI4akl0cEpYVnNEeXExZFNlLzBhakNZajYrL1l3SWxQanJEM3pZOG03Tk93L3pqdi9QWlZidnpLSnRKdEdTeXFycUNrYWhITzduNTBYY2VTYlkxa3Fob2VIT0tqUC82WnZXOTlkS2JUYyttNkZkUmN0NGFpSlNXWXpHWTgvUzVPN2ozS3g2L3N4Tm5kUDZWcnFIdjNFMWJlZUFYVjYydElURTdpK3Y5Mks1NCtGd3JJeUxLZ2FScEtLWTU5ZklpNnQzZGYwT2NWN1FqK0lWMEZUeGhGcEJubEN4QURVYW11bm5CaXhwWWpEVFFjT0lrcHdVVE5oc3N4SlppNTRZdTNVZmZPSnhQbVVwVlN2UFAwRzRqQndLb2JyNkJvU1dtay9OWDRiWHJhdWpqMC9qN2UrTVZMWjB4enU2aTZnanUvOWdYS2xwVlBlSC9wNm1Xa1dkTjU0U2RQVDZrbkhIRDdlR243TTVGOXpZa0prVVgwQUlIaEFDYytPY0lyTzU2TjRzSXpNNFBDRjFDS1pxT0lhbFQ0WTg3ZjcydnY1dVVkejdKMGRUajhmVkYxQlptRk9mUzBkRTdZYnRnL3hKdS9mSW11eG5hV3JWMUJkbkVleVduSjRYQ3NBVDk5SGIyYzJuZU0vVy92WnREcm4zUWUwWVJiL3ZLT2lQZ0dQRDU4VGkvWlJibVlFc3hjZTk5TkhObDFnS01mSFp5MDc1bG9PbFRQQzQvL2pzczNycWVvb2lSU2VkUG45bUt2YjJQM0t6dHBQZDUwZ1o5T0xPQTNJdEpvTkJwVjYwZ2dxQ0VoWW0xdGNNdlJSdXoxYlN4ZXNRVE5vRkc4cEd5U0FDRzhhbTcvTzU5dzVNT0Q0ZklHMWpRMGc0RUJseGQ3WXp2K2N4U2dTYmRsVUwyK0JxVVVJNEVSM3ZtdjEraXo5M0xsN1ZlejlQSkxNU1dZdWZ5V2RWTVdJSVROaVk2R05nb3JTN0JrMnhBSlR3bmE2OXZPYXhWZDdEa2dRWlFLYXBxQmR1UGp1MzJlTGJVMkIvZ0xpTUgwSE4wdEhWVFVoT2R1TXpJenpybHRZR2g0V29Hc0VGNEtNR1luZWgxdVhubnFlWUtCRVVJandjamFqN3hGQmROdWQzQWtTTXZSUmxxNGNJODc5cHdRUHlMU3MzMnZ4emYyNkQwSXNXbHpqRitQRzVyaXNNVjBHQmtlaWZRd0JvT0IzSko4VWkxcFdQTStYYU1TV0RESkpXY0tMeERPbEc4RUVCWGFyZU81VWFRZytpZUV4NUdRbkJpcGJnVFEyOTQ5NCtmbzcrakYxZVBBbXB1SkpjZkc3WnZ2cHJ1MWt6VzNySTlzVTc5L2JpS2Z4OUEwamZTc2NMN3BNeTNBajNhVThnWTEwVCtCU0hZczlURTRBOFJDUk1Jb0lrTE5kWmVUVnhwKy9QbGNYdHBPdE16NGVRWjlmajU0NFYxdS9jczdNSnBOckw1NTdZVC9kN2Qyc3ZmTkQyZjh2S2VUbUpLRU5UY3praUF6djd5UWd2TGlDWUVUc3pHSFBUczRBd3A5TjN3cXVIMGlQc0lUeE5HdndaU01WQ3BycTlqNDFUc1JUVkJLY2VqOWZWTmVJVGRkM24zNkRUSUxzcmhreldWa2pON3cwRWdRZTBQYmhLS0JNNGxtME1qSUNpYzV0K2JheUNuT282QWlYRmNrcnl4L1F2Q0VVZ3EvWnlCR1VzVUZFZkdoYTdJUFJ0VzJ2YzdUdGJuVzJpTU1sSVhyaEVRZjVxUUVLbXVyU0U1UEpiYzBueXMyWGtWdWFUNEFmZlllM3ZuZDY3TjJiaysvaTJmLzdUZGNjZHZWRkMwcHhXZ3k0blY2T0xMckFJZmUzemRqNTBsS1M4YWFFMzdVWitabmtiKzRpTUtLRW9vcWlrbXpUYjR2ZnUvQWFOR2FmcHFQTk9Mb210cUErUHd5QUtpdUovZTZlMkJDZDZmdEJFY0paRVRsbU9DU2xaZHc3emUvakRVM2s2VFU1TWo3anE1KzN2clZ5elFmbWQwcWtlNCtGMi84NG8rWWt4SXdtYzM0dlQ2VWZtSERId2FqZ1l5c2NKVWthNjZObkpKOGlpckRTVFB6U2lmMmNoRDJuTjE5TGx3OTRXVG4zYTJkMkUrMVlxOXZwYXU1QXowVS9ZOWdoVU1IaWF4WGpWeWhwa0l2SyttOUZ4Wk5yb2dYQlN5L1psVWs3ek5BWUNoQSs2a1c5dFIyU2Q0QUFBMGlTVVJCVkx6K0llLzkvczA1YTBkZ2NQaUN5anNrcDZkZ3liWmh6YkZoeTgraW9LS1lvb29TQ2lzL0haUWV6NERIaDZ2SGlhdkhnYU9yRDN0OUsrMm5XckhYdHpFUWs3TWxQUUZVOE5XeHZ5SUNGQzIwVXlsM01Cd1pFMzJaRXNiWFVMT2ZhdVhrdnFQVXZiT0hZN3NQUmZXS0FxUEpPRnJ0MG9vMXgwWnVXVDZGbGFYaGZOUWwrV2ZNVytqdWMrSHFkZUxxZGREZDNFbjdxUmJhVDdYUzA5b1pFNzNjMlJrQlBBRkI3Ung3SnlMQUovWjUyN2ZVV2h2QnZSeXl6cmo3ZkRNMkhyZjd0UTk0N2VjdlJPME1RRXA2S3VsWkZqS3lMR1NQbG5rb3JDeWhhRW5wQlBNQnd0YzA1UFBqN0hIZzduT0ZVd09mYXFYdFZBdjJreTM0enpBOUdMTW9GeUtxY1h1ZE43S0VjSUtSb1pEbmhlNnFhQzNaTlRiaTcvY01SSlg0akNZamFaa1paR1Jhc09abWhnc1RWaFJUV0ZGTS9xS2lNL1p5bm40MzduNFhyaDRIUFcxZHRCNXJ3bDdmUm1kVCt3WGJsdEZMZHdEVWMrUGZtU0JBa2VBTHFONi9nMkJVTDFLS2h0dVRuSjVDZXFZRlM3YVZyTUtjMGRLcnhaUmNzbWhpOGt3K0hTYng5THR3OTd2cGErL0dYaCsyNDFxUE5lSDNEc3pUVmN3bFFaRGVnQ2oxNHZoM0p3cFE4eDdVUTRZT1VaNGxpSTFvWlQ1bVBvMW1FMm5XOUhBQndod2JPYVg1RkZhV1VIcEpPYmtsK1lnMnNWVWpnUkc4RGpmdVhpZk9IZ2ZkTFo5NnJCME5uNzFLNzZKRGVZQ1I5Z0tyNS9ENHR5Y0ljTnNlRmR4Y2Eza0c2ZmlmWUl2ZUxuQ09TRTVMSVNQYmlpWGJpaTAvbTRMRmhaUXVLNmUwcWp5U0JXc01wUlIrN3dEdTN0RUNoSjE5ZERTMDAzS3NrZFpqaldlTU0xeElLT3hCaEtmLzRSMDFZUW5tSkpFSkk3K0hucS9EU0hxMGVjT3ozV3NZemFadzV0TnNDeGxaVm5KTDhzT0NXMVkrSVloMXJDM0JRQkNQdzRXNzE0VzczMGwzU3ljdFI1dG9PZHBBbjMzbVY5YkZMaU5Bcng4MTh2dlQvek5KZ0lWMS9vUDJHdE5KNkY4SmVWRTFLRDNUWVVjaVFxb2xqVFJiT21tMkRESUxjaWhaV2tycHNuS0tscFJOR1BxQnNPZ0czTDV3NVhLSG0vN09YdHBPTk5OOHBKSDJreTNUV2greXNPalRSVWFPRjlZTkhEMzlQNU1FK0E5SzZWdFdwaitPYXY4cDVDWkdZK3EyQytrSHpZa0pZY0ZaMDdIbTJDTERJMFZMU2lQVjFNY3pQRGlFMStIQjYvVGc3blBTMFdpbjVVZ0Q3U2RiWmlYNjV1SkRnYlFGRlBwUC8yRjh0b0JSem1qbmlSWjZVWVg2dnc4REJUQzVkdHA4TTUydmhHZ2FLZWtwcEZuVFNjK3lrRk9TUi9HU2NKSHBrcXF5U0xEcEdIcElaOERqdyt2MDRIT0VhOFMxbld5bS9XUUxyY2ViRjFCaDZabEJNWUFvcDBPWDRJdG4rdjhaQmJodHo0QmpTNDN0ZWFUMUViaEVpOFplOEZ5WUU4MmtXdE5KdDJWZ3pjMmtvTHlJb3FXbExLcXVpQlMzR2MvdzREQStwd2VQdzQycng0RzlvWTMyRXkyMG5XaU85M0lYaEFKYWRkQ2VmV3FmMzNHbUxjN3E2UXJCbitxcTgzNlI4aXlJanVuaHN6a2htcWFGeCtWc0dhUmxacEJkbUV2eDBsTEtxaXNvV1ZxR05pN0ZoVklLcGVzTWVBYndPdHg0K3QzMDJydHBPOUZDODVGNjJvNDN4MHV1emhoRENKMTlpdUJQejdiRldRVzRyYzV6ZUhPTmRhZFM5anRFRmtlRk16TGVDVEVubWttelpVVEc1dkxMaXlpL3JKSkZ5eXNuNVlLR2NDL25kYnJ4T2tadHVZWjJtZzdWMDNqd0pONllpS09MUFJSMlhRanQzTEhmTThuNUdPT2NZMzBpSXo5Q3RXMkFZa3MwTFJ2T1cxVEk2cHZYc2VpeUNoWlZWMUJZVVRJcGtVOG9HTVRuOHVKemV2RzZQUFIzOU5KOHVKN0dRL1hZRzlxaXJ1VHF4WVppR0tIZGd4NzgwYm0yTzZjQUMrc0dkcld2TU8wVzFYRWpVaFlWdlNEQWh2dHZQbVBtcUdIL1VOaDVjSGx4ZFBYVGNxeVJscU1OTkI5cHhPODUrOUxMT0xOQmg0NEs3QzQ4NkR0enFvbFJ6aW5BOEpCTTJtTktiMTR0NU52bXM2YmNlTHRzVEh6QmtTQURMaTgrdHhlZnkwZHZXeWNOQjAvUmVyd0orOG5XR0ZvamNiRXhqS2htbDVMUTk4NDA5REtlejV4dTI3N1B1M05McldVWHROOEc1ZlBtRVhjMTJ4bjArU09Ed1Q2WEYyZDNPQlM5K1VnOUxVY2JHZlJkUktGTE1Zc0MyblRGeU00ZCt6MjdQbXZyS2MzM2FwcDZMS1MzcklIOEhDSDVzM2VZQlQ1KzVRTXlDN0xSZFVYejRYcWFqelRRM2RvWkhhRXhjU0lvL0locTZWR2lQemFWN1dXcTg2c1AxMXEzYVJROUNGWEdXS3NyRW1ldTBGRWNEWXJxL05uMk9zZldxZXd4ZFNWcCttTkt0YmZEN0N4OWpCUDdLRnk2ME5FS3dlOVBkWjhwQy9ESnZlNTJnUitqNnYyeGtGRTF6bHd6Z3FoVGZoUS8zbDdubVZ5UTVTeE1LK1pQak1rLzBVZWNkNHAwWEFVbDhlZHduSEYwNkVxY2RhWVI4L2JwN0RWbEczQ016U3ZTVm90bWZrRnhSWUhFWURhdE9ET1BVbDVFZG5jb2dwL2ZzZDgxcmRTdTArN0ZkaHp3N2hGUnZ4Sk94Ui9GY1Fnbkd6L2xoOUF2cGlzK09GOTNWdU14Vkc4ZDJHT3V6bHljbVVSSDBhRWpQUWVOSWZXRDh6bkNlUWx3Mng2SFR3aDlUYWxUcmVEVzQ0TnhDeEZGK042ZmJGVktiZjNKUWRkNVJYU2N0eU94cmM1YkIrcEhjTlFGUTZNTmlyOFd6bXNJMUZFWG92OXdSNTFuNnZtSlQrT0NWcjRWV1YxUDJGMnNoL3E3VUZXSjBiYUlLYzVzTVFKU1A0VDRYM05YdUorNGtDTk4yd3MrbmE5ZGtXNEpETXZySWt2WFFBbXhsdWc4em5RSkFXMG9UdXdPRXRyNDgvM2VNMFk2VDVVTEhzdDcvR09QUzhGbVZIMDk5Qk4zU2k1bWRLQVBPSGtTamE5ZXFQaGdoaVoxbjZ4ekg5VGdtNmlEclVxNWlUc2xGeU1LbEFzNDFLcUovczBkZTExbmpYS2VEaGY4Q0I3UDVocnIxNUdFN3dxcmN1QmlMem0vMFBBRGU3dEVocjYzYlovemd1eSs4Y3lvQUFFZXJyWCtVQ1B0TDJGRkZpcUpXRnRSRitkMEZNZ2dVT2RBZkU5dTMrZjgrNWs4K296bmYvRlV1djdlV2srNlVvZnVSWmJid2l2cTRpS01UY0xETFVvZGNZbjRYaXpNY0gxbnBzOHc0ejBnd05iVllsUWh5MytpTEp1VVhKWXVjUkhHSUFyRkVIREVvM0M4bHV4emZlWC9uVkl6dmlwL1ZpSmF0dTFSd2RRazEwTkt1ZDlDSFI0M1VCMG5OaGdkYU9hd0M1eHZCUzJ1djVnTjhjRXM5WUJqZktOU3pFT3BsaDJRdmdrdXN6RlA0Znh4cG9kaUVPR3dRK0Y2SXkzSjlkVi8yYVdHUG51djgyTldCUWpoeDdHdVczNHFldW9kaWhVNVFoTHhrUDVvUlVmaEJ6bllKOHI3dkJqZGoyN2JNekdmMzB3ejZ3SUV1UDkrMFRKT1d2NUpKT0VMc0tJSTBvbUxNTnJRQVRlS2cxMks0VjhWMTduKy9yT1dWTTRFY3lMQU1iYXV0RzdSZGUyN3lJb2l3VVo4Mmk1YUNLSndJdXBBdTVMUWozZnNkLzN6WEoxNVRnVUk4TkNLdE50RU16NnVVVlVDK1ZwNEpDanVJYzhQaW5COXdBNWRxUk90RUh4MFI1MzN0Ymxzd1p3TEVHRHpxdFJsNktiZkNybmxpcVdwTW84WkZ4WXlpZ0JDdlE4NkdpVVVlR0RiUWQveHVXN0R2QWdRNEt1MVZvdEp0QjFLSlY0akxNOVJLZ1dKUDVMbmlCRElBSXFEUFlML1hUSEk1bTE3SFBPU0ltemVCRGpHbGxyTE41U1NieUZWQlJKL0pNOHlDbFFRSloyNmNMeExSUDFnMno3WHY4OW5pK1pkZ0FBUDE2UlVhMkwrSmNwV2dseGlVeVRHZThNWkowUTRpdm1ZQzNFMGE0eDg2WW45dmhtSmFMa1Fva0tBQUgrM1RoSjlBK21QS1RGOEdWbWFFKzhOWjRveFI2TkxoK045bXZDTDVFVG5kMmR6Y0hrNlJJMEF4M2k0Sm1PbEp0b09VZWtsU3BabGhjTzY0bU9HNTRNaWhEQUFISE9BcHhsQ203ZnY5OHhjaGUwWklPb0VDT0haRTBMV2J5ajBiMEZ4dWxMbHlZS0pzQkRqUGVLNVVTaDBJQURTNkVlMWUwRDlVNUhWOCsrblZ5bUtCcUpTZ0dOc1haMlNwL1NFNzZPekNTcXprQUlOWlFRUjRrSThuYkhWYWtFVWRsMVVmUi9DaTNvdzhKMG5EL21pdG14VFZBdHdqQzByTERXSTlrOUtwRWJVRWh1U2IxUVlFT0pDSEJPZVVpR0VUaDA1NVFDMVQ2bmhiKzJvODUzM2NzbTVJaVlFT01aRE5XbFhHc1Q4QTVRc1Y1UmJSQW8wbEdtQjlvZ0toVUpHZXp4VW8wdFFCelZ0NU8rZjJPZVpkb3FNK1NLbUJEakcxcHIwZFNGTTM5YlExeUZseVZDVUdNNWZ2VkNjRlIwWVJ0RWVRRnI4Z3V4VStzajNkOVI1enBrUVBCcUpTUUdPOFVodFJrVklqTjhTcGQ4TFZrMnBFb3VRaVJJTlVSZFRyempXMitrbytvRldsNGhUVjhJelN2UWZQcm5YWFQvZkxUeGZZbHFBWS94VmRVNXF3RFIwdjRicHI0RXlSVUVpS2o5UkpCMG0ySW14SWtnVithbFFpUEtnNkJ4Q09vWlFOS09QL0p0SlQzem1KNGQ3WXI3MnhFVWh3UEU4c2pKMVdWQVp2eVJLK3pJaUZsU2hXU1FyRWF4TUhzYUpGa0dxMDM3WFFUbFI5QWFnWTBoUURpWDZyOUJDdjk2eDF6dm5BUU96eVVVbndQRnNYcFc2WEVKeWx4TFRQVUtvQXF4RHFEeWJrZ3hRYVFpQ0VqbE5ock10eWs4L2I2WENaMVBvaUhnQkY5RGpBNGNtdXFsWnljZ3poSUsvMzM1bzRQRFpqaGJyWE5RQ0hNL1gxcVRaUm9McVpsSG1qYnJJQmtLaEhKRzBJU1daNlpDcWhiTzl6c1dzaXc0TW9QQWllSU1vcDA4cFQ2SVlERjJDK3JNaThLckpLRzg4dnZ2QzAxN0VBZ3RHZ0tmelY4c3RscEJCclZQQ2FvVnB2U2hWalJySkVVbnc2eW9KU0RORGNxS1FnTUlFbUJFeGdRcG5BRk5va1lDSjhKVFhhUFM2aktEVUNCQkFHRUV4RFBpSHdEc2tNcWloQXNtSXNVY0pCNFhnaDZMWVl3akpycDhjZExubTQzT1lieGFzQU0vRU55ckZIRWhMclFncHJRejBNa0ZiQ29ZU2tCd2RzalIwQytHbGZScm9SbENqRlJ3bEFGcVFjUGZtMTlGY0d2U0I2b0ZRSytnbkZGb3ptdDZZNVBFMXp0WVN4MWprL3dQUSttbnFKbDErUVFBQUFBQkpSVTVFcmtKZ2dnPT0iPjwvaW1hZ2U+Cjwvc3ZnPgo="/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="35,35,35,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="40"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option name="properties"/>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" locked="0" class="SimpleMarker" pass="0">
        <prop k="angle" v="0"/>
        <prop k="color" v="33,150,243,255"/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="bevel"/>
        <prop k="name" v="circle"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_style" v="solid"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="scale_method" v="diameter"/>
        <prop k="size" v="25"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option name="properties"/>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" locked="0" class="FontMarker" pass="0">
        <prop k="angle" v="0"/>
        <prop k="chr" v="A"/>
        <prop k="color" v="255,255,254,255"/>
        <prop k="font" v="Arial"/>
        <prop k="font_style" v=""/>
        <prop k="horizontal_anchor_point" v="1"/>
        <prop k="joinstyle" v="miter"/>
        <prop k="offset" v="0,-0.40000000000000002"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="255,255,255,255"/>
        <prop k="outline_width" v="0"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="size" v="11.8"/>
        <prop k="size_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="size_unit" v="Pixel"/>
        <prop k="vertical_anchor_point" v="1"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option type="Map" name="properties">
              <Option type="Map" name="char">
                <Option value="true" type="bool" name="active"/>
                <Option value="@cluster_size" type="QString" name="expression"/>
                <Option value="3" type="int" name="type"/>
              </Option>
            </Option>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </renderer-v2>
  <customproperties>
    <property value="fid" key="dualview/previewExpressions"/>
    <property value="0" key="embeddedWidgets/count"/>
    <property key="variableNames"/>
    <property key="variableValues"/>
  </customproperties>
  <blendMode>0</blendMode>
  <featureBlendMode>0</featureBlendMode>
  <layerOpacity>1</layerOpacity>
  <SingleCategoryDiagramRenderer attributeLegend="1" diagramType="Histogram">
    <DiagramCategory minimumSize="0" showAxis="0" height="15" penWidth="0" diagramOrientation="Up" width="15" lineSizeType="MM" barWidth="5" scaleDependency="Area" scaleBasedVisibility="0" sizeType="MM" opacity="1" minScaleDenominator="0" backgroundAlpha="255" spacingUnit="MM" direction="1" penColor="#000000" backgroundColor="#ffffff" maxScaleDenominator="1e+08" enabled="0" sizeScale="3x:0,0,0,0,0,0" labelPlacementMethod="XHeight" rotationOffset="270" spacing="0" spacingUnitScale="3x:0,0,0,0,0,0" lineSizeScale="3x:0,0,0,0,0,0" penAlpha="255">
      <fontProperties style="" description="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0"/>
      <attribute color="#000000" field="" label=""/>
      <axisSymbol>
        <symbol alpha="1" type="line" clip_to_extent="1" name="" force_rhr="0">
          <layer enabled="1" locked="0" class="SimpleLine" pass="0">
            <prop k="capstyle" v="square"/>
            <prop k="customdash" v="5;2"/>
            <prop k="customdash_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="customdash_unit" v="MM"/>
            <prop k="draw_inside_polygon" v="0"/>
            <prop k="joinstyle" v="bevel"/>
            <prop k="line_color" v="35,35,35,255"/>
            <prop k="line_style" v="solid"/>
            <prop k="line_width" v="0.26"/>
            <prop k="line_width_unit" v="MM"/>
            <prop k="offset" v="0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="ring_filter" v="0"/>
            <prop k="use_custom_dash" v="0"/>
            <prop k="width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <data_defined_properties>
              <Option type="Map">
                <Option value="" type="QString" name="name"/>
                <Option name="properties"/>
                <Option value="collection" type="QString" name="type"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </axisSymbol>
    </DiagramCategory>
  </SingleCategoryDiagramRenderer>
  <DiagramLayerSettings zIndex="0" showAll="1" priority="0" dist="0" linePlacementFlags="18" obstacle="0" placement="0">
    <properties>
      <Option type="Map">
        <Option value="" type="QString" name="name"/>
        <Option name="properties"/>
        <Option value="collection" type="QString" name="type"/>
      </Option>
    </properties>
  </DiagramLayerSettings>
  <geometryOptions geometryPrecision="0" removeDuplicateNodes="0">
    <activeChecks/>
    <checkConfiguration/>
  </geometryOptions>
  <referencedLayers/>
  <referencingLayers/>
  <fieldConfiguration>
    <field name="fid">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="osm_id">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="name">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="amenity">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
    <field name="hstore_to_json">
      <editWidget type="TextEdit">
        <config>
          <Option/>
        </config>
      </editWidget>
    </field>
  </fieldConfiguration>
  <aliases>
    <alias field="fid" index="0" name=""/>
    <alias field="osm_id" index="1" name=""/>
    <alias field="name" index="2" name=""/>
    <alias field="amenity" index="3" name=""/>
    <alias field="hstore_to_json" index="4" name=""/>
  </aliases>
  <excludeAttributesWMS/>
  <excludeAttributesWFS/>
  <defaults>
    <default applyOnUpdate="0" expression="" field="fid"/>
    <default applyOnUpdate="0" expression="" field="osm_id"/>
    <default applyOnUpdate="0" expression="" field="name"/>
    <default applyOnUpdate="0" expression="" field="amenity"/>
    <default applyOnUpdate="0" expression="" field="hstore_to_json"/>
  </defaults>
  <constraints>
    <constraint exp_strength="0" notnull_strength="1" field="fid" unique_strength="1" constraints="3"/>
    <constraint exp_strength="0" notnull_strength="0" field="osm_id" unique_strength="0" constraints="0"/>
    <constraint exp_strength="0" notnull_strength="0" field="name" unique_strength="0" constraints="0"/>
    <constraint exp_strength="0" notnull_strength="0" field="amenity" unique_strength="0" constraints="0"/>
    <constraint exp_strength="0" notnull_strength="0" field="hstore_to_json" unique_strength="0" constraints="0"/>
  </constraints>
  <constraintExpressions>
    <constraint field="fid" desc="" exp=""/>
    <constraint field="osm_id" desc="" exp=""/>
    <constraint field="name" desc="" exp=""/>
    <constraint field="amenity" desc="" exp=""/>
    <constraint field="hstore_to_json" desc="" exp=""/>
  </constraintExpressions>
  <expressionfields/>
  <attributeactions>
    <defaultAction value="{00000000-0000-0000-0000-000000000000}" key="Canvas"/>
  </attributeactions>
  <attributetableconfig actionWidgetStyle="dropDown" sortExpression="" sortOrder="0">
    <columns>
      <column type="field" hidden="0" width="-1" name="fid"/>
      <column type="field" hidden="0" width="-1" name="osm_id"/>
      <column type="field" hidden="0" width="-1" name="name"/>
      <column type="field" hidden="0" width="-1" name="amenity"/>
      <column type="field" hidden="0" width="-1" name="hstore_to_json"/>
      <column type="actions" hidden="1" width="-1"/>
    </columns>
  </attributetableconfig>
  <conditionalstyles>
    <rowstyles/>
    <fieldstyles/>
  </conditionalstyles>
  <storedexpressions/>
  <editform tolerant="1"></editform>
  <editforminit/>
  <editforminitcodesource>0</editforminitcodesource>
  <editforminitfilepath></editforminitfilepath>
  <editforminitcode><![CDATA[# -*- coding: utf-8 -*-
"""
QGIS forms can have a Python function that is called when the form is
opened.

Use this function to add extra logic to your forms.

Enter the name of the function in the "Python Init function"
field.
An example follows:
"""
from qgis.PyQt.QtWidgets import QWidget

def my_form_open(dialog, layer, feature):
	geom = feature.geometry()
	control = dialog.findChild(QWidget, "MyLineEdit")
]]></editforminitcode>
  <featformsuppress>0</featformsuppress>
  <editorlayout>generatedlayout</editorlayout>
  <editable>
    <field editable="1" name="amenity"/>
    <field editable="1" name="fid"/>
    <field editable="1" name="hstore_to_json"/>
    <field editable="1" name="name"/>
    <field editable="1" name="osm_id"/>
  </editable>
  <labelOnTop>
    <field labelOnTop="0" name="amenity"/>
    <field labelOnTop="0" name="fid"/>
    <field labelOnTop="0" name="hstore_to_json"/>
    <field labelOnTop="0" name="name"/>
    <field labelOnTop="0" name="osm_id"/>
  </labelOnTop>
  <dataDefinedFieldProperties/>
  <widgets/>
  <previewExpression>fid</previewExpression>
  <mapTip></mapTip>
  <layerGeometryType>0</layerGeometryType>
</qgis>
